

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Nov 02 16:34:19 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F1220
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           	psect	idataBANK0
    26  000C10                     __pidataBANK0:
    27                           	opt stack 0
    28                           
    29                           ;initializer for OptMenu@F2840
    30  000C10  00                 	db	0
    31  000C11  53                 	db	83
    32  000C12  74                 	db	116
    33  000C13  61                 	db	97
    34  000C14  6E                 	db	110
    35  000C15  64                 	db	100
    36  000C16  62                 	db	98
    37  000C17  79                 	db	121
    38  000C18  00                 	db	0
    39  000C19  00                 	db	0
    40  000C1A  00                 	db	0
    41  000C1B  00                 	db	0
    42  000C1C  00                 	db	0
    43  000C1D  00                 	db	0
    44  000C1E  41                 	db	65
    45  000C1F  6C                 	db	108
    46  000C20  6C                 	db	108
    47  000C21  20                 	db	32
    48  000C22  4F                 	db	79
    49  000C23  6E                 	db	110
    50  000C24  2F                 	db	47
    51  000C25  4F                 	db	79
    52  000C26  66                 	db	102
    53  000C27  66                 	db	102
    54  000C28  00                 	db	0
    55  000C29  00                 	db	0
    56  000C2A  00                 	db	0
    57  000C2B  42                 	db	66
    58  000C2C  61                 	db	97
    59  000C2D  63                 	db	99
    60  000C2E  6B                 	db	107
    61  000C2F  00                 	db	0
    62  000C30  00                 	db	0
    63  000C31  00                 	db	0
    64  000C32  00                 	db	0
    65  000C33  00                 	db	0
    66  000C34  00                 	db	0
    67  000C35  00                 	db	0
    68  000C36  00                 	db	0
    69  000C37  00                 	db	0
    70                           
    71                           ;initializer for DefaultMenu@F2825
    72  000C38  04                 	db	4
    73  000C39  09                 	db	9
    74  000C3A  0F                 	db	15
    75  000C3B  45                 	db	69
    76  000C3C  4C                 	db	76
    77  000C3D  00                 	db	0
    78  000C3E  00                 	db	0
    79  000C3F  00                 	db	0
    80  000C40  00                 	db	0
    81  000C41  00                 	db	0
    82  000C42  00                 	db	0
    83  000C43  05                 	db	5
    84                           
    85                           	psect	smallconst
    86  000100                     __psmallconst:
    87                           	opt stack 0
    88  000100  00                 	db	0
    89  000101                     _Default_Menu_Bitmaps:
    90                           	opt stack 0
    91  000101  0004               	dw	4
    92  000103  0004               	dw	4
    93  000105  0015               	dw	21
    94  000107  0011               	dw	17
    95  000109  0011               	dw	17
    96  00010B  000E               	dw	14
    97  00010D  0000               	dw	0
    98  00010F  001B               	dw	27
    99  000111  001B               	dw	27
   100  000113  000A               	dw	10
   101  000115  000E               	dw	14
   102  000117  000E               	dw	14
   103  000119  0011               	dw	17
   104  00011B  001F               	dw	31
   105  00011D  000E               	dw	14
   106  00011F  0004               	dw	4
   107  000121  000A               	dw	10
   108  000123  000A               	dw	10
   109  000125  000E               	dw	14
   110  000127  000E               	dw	14
   111  000129  000E               	dw	14
   112  00012B  0000               	dw	0
   113  00012D  000F               	dw	15
   114  00012F  000F               	dw	15
   115  000131  0001               	dw	1
   116  000133  000F               	dw	15
   117  000135  000F               	dw	15
   118  000137  0000               	dw	0
   119  000139  000E               	dw	14
   120  00013B  000E               	dw	14
   121  00013D  0006               	dw	6
   122  00013F  000A               	dw	10
   123  000141  000C               	dw	12
   124  000143  000E               	dw	14
   125  000145  000E               	dw	14
   126  000147  000E               	dw	14
   127  000149  000E               	dw	14
   128  00014B  000E               	dw	14
   129  00014D  000E               	dw	14
   130  00014F  000E               	dw	14
   131  000151  000E               	dw	14
   132  000153  0011               	dw	17
   133  000155  001F               	dw	31
   134  000157  001E               	dw	30
   135  000159  001D               	dw	29
   136  00015B  001B               	dw	27
   137  00015D  0017               	dw	23
   138  00015F  000F               	dw	15
   139  000161  001F               	dw	31
   140  000163  001F               	dw	31
   141  000165  0013               	dw	19
   142  000167  0013               	dw	19
   143  000169  001F               	dw	31
   144  00016B  0013               	dw	19
   145  00016D  0013               	dw	19
   146  00016F  001F               	dw	31
   147  000171                     __end_of_Default_Menu_Bitmaps:
   148                           	opt stack 0
   149  000171                     OptMenu@F2834:
   150                           	opt stack 0
   151  000171  49                 	db	73
   152  000172  4E                 	db	78
   153  000173  44                 	db	68
   154  000174  49                 	db	73
   155  000175  56                 	db	86
   156  000176  20                 	db	32
   157  000177  4F                 	db	79
   158  000178  6E                 	db	110
   159  000179  2F                 	db	47
   160  00017A  4F                 	db	79
   161  00017B  66                 	db	102
   162  00017C  66                 	db	102
   163  00017D  00                 	db	0
   164  00017E                     __end_ofOptMenu@F2834:
   165                           	opt stack 0
   166  0000                     _ADCON1	set	4033
   167  0000                     _INTCONbits	set	4082
   168  0000                     _LATA	set	3977
   169  0000                     _LATAbits	set	3977
   170  0000                     _LATB	set	3978
   171  0000                     _LATBbits	set	3978
   172  0000                     _OSCCONbits	set	4051
   173  0000                     _PORTAbits	set	3968
   174  0000                     _RCONbits	set	4048
   175  0000                     _T0CON	set	4053
   176  0000                     _TMR0H	set	4055
   177  0000                     _TMR0L	set	4054
   178  0000                     _TRISA	set	3986
   179  0000                     _TRISB	set	3987
   180  00017E                     STR_13:
   181  00017E  20                 	db	32
   182  00017F  20                 	db	32
   183  000180  20                 	db	32
   184  000181  20                 	db	32
   185  000182  20                 	db	32
   186  000183  20                 	db	32
   187  000184  20                 	db	32
   188  000185  20                 	db	32
   189  000186  20                 	db	32
   190  000187  20                 	db	32
   191  000188  20                 	db	32
   192  000189  20                 	db	32
   193  00018A  20                 	db	32
   194  00018B  20                 	db	32
   195  00018C  20                 	db	32
   196  00018D  20                 	db	32
   197  00018E  00                 	db	0
   198  00018F                     STR_14:
   199  00018F  41                 	db	65	;'A'
   200  000190  6C                 	db	108	;'l'
   201  000191  6C                 	db	108	;'l'
   202  000192  20                 	db	32
   203  000193  56                 	db	86	;'V'
   204  000194  6F                 	db	111	;'o'
   205  000195  6C                 	db	108	;'l'
   206  000196  74                 	db	116	;'t'
   207  000197  61                 	db	97	;'a'
   208  000198  67                 	db	103	;'g'
   209  000199  65                 	db	101	;'e'
   210  00019A  73                 	db	115	;'s'
   211  00019B  3A                 	db	58	;':'
   212  00019C  2F                 	db	47
   213  00019D  20                 	db	32
   214  00019E  20                 	db	32
   215  00019F  00                 	db	0
   216  0001A0                     STR_2:
   217  0001A0  31                 	db	49	;'1'
   218  0001A1  32                 	db	50	;'2'
   219  0001A2  56                 	db	86	;'V'
   220  0001A3  3D                 	db	61	;'='
   221  0001A4  2F                 	db	47
   222  0001A5  20                 	db	32
   223  0001A6  35                 	db	53	;'5'
   224  0001A7  56                 	db	86	;'V'
   225  0001A8  3D                 	db	61	;'='
   226  0001A9  2F                 	db	47
   227  0001AA  20                 	db	32
   228  0001AB  33                 	db	51	;'3'
   229  0001AC  56                 	db	86	;'V'
   230  0001AD  33                 	db	51	;'3'
   231  0001AE  3D                 	db	61	;'='
   232  0001AF  2F                 	db	47
   233  0001B0  00                 	db	0
   234  0001B1                     STR_15:
   235  0001B1  20                 	db	32
   236  0001B2  20                 	db	32
   237  0001B3  20                 	db	32
   238  0001B4  20                 	db	32
   239  0001B5  20                 	db	32
   240  0001B6  20                 	db	32
   241  0001B7  20                 	db	32
   242  0001B8  20                 	db	32
   243  0001B9  20                 	db	32
   244  0001BA  20                 	db	32
   245  0001BB  20                 	db	32
   246  0001BC  20                 	db	32
   247  0001BD  4D                 	db	77	;'M'
   248  0001BE  45                 	db	69	;'E'
   249  0001BF  4E                 	db	78	;'N'
   250  0001C0  55                 	db	85	;'U'
   251  0001C1  00                 	db	0
   252  0001C2                     STR_3:
   253  0001C2  2D                 	db	45
   254  0001C3  31                 	db	49	;'1'
   255  0001C4  32                 	db	50	;'2'
   256  0001C5  56                 	db	86	;'V'
   257  0001C6  3D                 	db	61	;'='
   258  0001C7  2F                 	db	47
   259  0001C8  20                 	db	32
   260  0001C9  20                 	db	32
   261  0001CA  20                 	db	32
   262  0001CB  20                 	db	32
   263  0001CC  20                 	db	32
   264  0001CD  20                 	db	32
   265  0001CE  4D                 	db	77	;'M'
   266  0001CF  45                 	db	69	;'E'
   267  0001D0  4E                 	db	78	;'N'
   268  0001D1  55                 	db	85	;'U'
   269  0001D2  00                 	db	0
   270  0001D3                     STR_1:
   271  0001D3  20                 	db	32
   272  0001D4  20                 	db	32
   273  0001D5  20                 	db	32
   274  0001D6  20                 	db	32
   275  0001D7  53                 	db	83	;'S'
   276  0001D8  54                 	db	84	;'T'
   277  0001D9  41                 	db	65	;'A'
   278  0001DA  4E                 	db	78	;'N'
   279  0001DB  44                 	db	68	;'D'
   280  0001DC  42                 	db	66	;'B'
   281  0001DD  59                 	db	89	;'Y'
   282  0001DE  20                 	db	32
   283  0001DF  20                 	db	32
   284  0001E0  20                 	db	32
   285  0001E1  20                 	db	32
   286  0001E2  00                 	db	0
   287  0001E3                     STR_18:
   288  0001E3  41                 	db	65	;'A'
   289  0001E4  6C                 	db	108	;'l'
   290  0001E5  6C                 	db	108	;'l'
   291  0001E6  20                 	db	32
   292  0001E7  56                 	db	86	;'V'
   293  0001E8  6F                 	db	111	;'o'
   294  0001E9  6C                 	db	108	;'l'
   295  0001EA  74                 	db	116	;'t'
   296  0001EB  61                 	db	97	;'a'
   297  0001EC  67                 	db	103	;'g'
   298  0001ED  65                 	db	101	;'e'
   299  0001EE  73                 	db	115	;'s'
   300  0001EF  3A                 	db	58	;':'
   301  0001F0  00                 	db	0
   302  0001F1                     STR_9:
   303  0001F1  3A                 	db	58	;':'
   304  0001F2  20                 	db	32
   305  0001F3  00                 	db	0
   306  0000                     
   307                           ; #config settings
   308  0001F4  00                 	db	0	; dummy byte at the end
   309  0000                     
   310                           	psect	cinit
   311  000C44                     __pcinit:
   312                           	opt stack 0
   313  000C44                     start_initialization:
   314                           	opt stack 0
   315  000C44                     __initialization:
   316                           	opt stack 0
   317                           
   318                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   319  000C44  6A74               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   320                           
   321                           ; Initialize objects allocated to BANK0 (52 bytes)
   322                           ; load TBLPTR registers with __pidataBANK0
   323  000C46  0E10               	movlw	low __pidataBANK0
   324  000C48  6EF6               	movwf	tblptrl,c
   325  000C4A  0E0C               	movlw	high __pidataBANK0
   326  000C4C  6EF7               	movwf	tblptrh,c
   327  000C4E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   328  000C50  6EF8               	movwf	tblptru,c
   329  000C52  EE00  F080         	lfsr	0,__pdataBANK0
   330  000C56  EE10 F034          	lfsr	1,52
   331  000C5A                     copy_data0:
   332  000C5A  0009               	tblrd		*+
   333  000C5C  CFF5 FFEE          	movff	tablat,postinc0
   334  000C60  50E5               	movf	postdec1,w,c
   335  000C62  50E1               	movf	fsr1l,w,c
   336  000C64  E1FA               	bnz	copy_data0
   337  000C66                     end_of_initialization:
   338                           	opt stack 0
   339  000C66                     __end_of__initialization:
   340                           	opt stack 0
   341  000C66  0E00               	movlw	low (__Lmediumconst shr (0+16))
   342  000C68  6EF8               	movwf	tblptru,c
   343  000C6A  0100               	movlb	0
   344  000C6C  EF53  F005         	goto	_main	;jump to C main() function
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           postdec1	equ	0xFE5
   351                           fsr1l	equ	0xFE1
   352                           
   353                           	psect	bitbssCOMRAM
   354  0003A0                     __pbitbssCOMRAM:
   355                           	opt stack 0
   356  0003A0                     PairMenu@CurrentSelect:
   357                           	opt stack 0
   358  0003A0                     	ds	1
   359  0003A1                     PairMenu@Last:
   360                           	opt stack 0
   361  0003A1                     	ds	1
   362  0003A2                     PairMenu@OnOrOff:
   363                           	opt stack 0
   364  0003A2                     	ds	1
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           postdec1	equ	0xFE5
   371                           fsr1l	equ	0xFE1
   372                           
   373                           	psect	dataBANK0
   374  000080                     __pdataBANK0:
   375                           	opt stack 0
   376  000080                     OptMenu@F2840:
   377                           	opt stack 0
   378  000080                     	ds	40
   379  0000A8                     DefaultMenu@F2825:
   380                           	opt stack 0
   381  0000A8                     	ds	12
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           postdec1	equ	0xFE5
   388                           fsr1l	equ	0xFE1
   389                           
   390                           	psect	cstackCOMRAM
   391  000001                     __pcstackCOMRAM:
   392                           	opt stack 0
   393  000001                     ??_LCDdata:
   394  000001                     ?___wmul:
   395                           	opt stack 0
   396  000001                     ___wmul@multiplier:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x0
   400  000001                     	ds	1
   401  000002                     LCDdata@data:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x1
   405  000002                     	ds	1
   406  000003                     LCDdata@x:
   407                           	opt stack 0
   408  000003                     ___wmul@multiplicand:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x2
   412  000003                     	ds	2
   413  000005                     LCDwrchar@letter:
   414                           	opt stack 0
   415  000005                     LCDwrcmd@value:
   416                           	opt stack 0
   417  000005                     LCDsetaddr@add:
   418                           	opt stack 0
   419  000005                     ___wmul@product:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x4
   423  000005                     	ds	2
   424  000007                     LCDwrstring@string:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x6
   428  000007                     	ds	2
   429  000009                     ??_StandbyMenu:
   430  000009                     
   431                           ; 0 bytes @ 0x8
   432  000009                     	ds	1
   433  00000A                     ??_OptMenu:
   434                           
   435                           ; 0 bytes @ 0x9
   436  00000A                     	ds	2
   437  00000C                     OptMenu@AlternateDisplay:
   438                           	opt stack 0
   439                           
   440                           ; 13 bytes @ 0xB
   441  00000C                     	ds	13
   442  000019                     OptMenu@update:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x18
   446  000019                     	ds	2
   447  00001B                     OptMenu@z:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x1A
   451  00001B                     	ds	1
   452  00001C                     OptMenu@x:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x1B
   456  00001C                     	ds	2
   457  00001E                     OptMenu@Menu:
   458                           	opt stack 0
   459                           
   460                           ; 40 bytes @ 0x1D
   461  00001E                     	ds	40
   462  000046                     ??_PairMenu:
   463                           
   464                           ; 0 bytes @ 0x45
   465  000046                     	ds	1
   466  000047                     _PairMenu$618:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x46
   470  000047                     	ds	2
   471  000049                     _PairMenu$619:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x48
   475  000049                     	ds	2
   476  00004B                     _PairMenu$621:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x4A
   480  00004B                     	ds	2
   481  00004D                     _PairMenu$623:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x4C
   485  00004D                     	ds	2
   486  00004F                     _PairMenu$626:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x4E
   490  00004F                     	ds	2
   491  000051                     _PairMenu$627:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x50
   495  000051                     	ds	2
   496  000053                     PairMenu@buffer:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x52
   500  000053                     	ds	1
   501  000054                     ??_DefaultMenu:
   502                           
   503                           ; 0 bytes @ 0x53
   504  000054                     	ds	4
   505  000058                     _DefaultMenu$580:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x57
   509  000058                     	ds	2
   510  00005A                     _DefaultMenu$582:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x59
   514  00005A                     	ds	2
   515  00005C                     _DefaultMenu$585:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x5B
   519  00005C                     	ds	2
   520  00005E                     _DefaultMenu$587:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x5D
   524  00005E                     	ds	2
   525  000060                     DefaultMenu@buffer:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x5F
   529  000060                     	ds	1
   530  000061                     DefaultMenu@x:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x60
   534  000061                     	ds	2
   535  000063                     DefaultMenu@y:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x62
   539  000063                     	ds	2
   540  000065                     DefaultMenu@last:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x64
   544  000065                     	ds	2
   545  000067                     DefaultMenu@MenuItem:
   546                           	opt stack 0
   547                           
   548                           ; 12 bytes @ 0x66
   549  000067                     	ds	12
   550  000073                     ??_main:
   551                           
   552                           ; 0 bytes @ 0x72
   553  000073                     	ds	1
   554                           tblptru	equ	0xFF8
   555                           tblptrh	equ	0xFF7
   556                           tblptrl	equ	0xFF6
   557                           tablat	equ	0xFF5
   558                           postinc0	equ	0xFEE
   559                           postdec1	equ	0xFE5
   560                           fsr1l	equ	0xFE1
   561                           
   562 ;;
   563 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   564 ;;
   565 ;; *************** function _main *****************
   566 ;; Defined at:
   567 ;;		line 49 in file "main.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  2   50[None  ] int 
   574 ;; Registers used:
   575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0
   581 ;;      Params:         0       0
   582 ;;      Locals:         0       0
   583 ;;      Temps:          1       0
   584 ;;      Totals:         1       0
   585 ;;Total ram usage:        1 bytes
   586 ;; Hardware stack levels required when called:    7
   587 ;; This function calls:
   588 ;;		_DefaultMenu
   589 ;;		_LCDwrcmd
   590 ;;		_StandbyMenu
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text0
   597  000AA6                     __ptext0:
   598                           	opt stack 0
   599  000AA6                     _main:
   600                           	opt stack 24
   601                           
   602                           ;main.c: 55: OSCCONbits.IRCF0=1;
   603                           
   604                           ;incstack = 0
   605  000AA6  88D3               	bsf	4051,4,c	;volatile
   606                           
   607                           ;main.c: 56: OSCCONbits.IRCF1=1;
   608  000AA8  8AD3               	bsf	4051,5,c	;volatile
   609                           
   610                           ;main.c: 57: OSCCONbits.IRCF2=1;
   611  000AAA  8CD3               	bsf	4051,6,c	;volatile
   612                           
   613                           ;main.c: 69: TRISA=0b00010011;
   614  000AAC  0E13               	movlw	19
   615  000AAE  6E92               	movwf	3986,c	;volatile
   616                           
   617                           ;main.c: 70: LATA=0b00000000;
   618  000AB0  0E00               	movlw	0
   619  000AB2  6E89               	movwf	3977,c	;volatile
   620                           
   621                           ;main.c: 71: ADCON1=0b11111111;
   622  000AB4  68C1               	setf	4033,c	;volatile
   623                           
   624                           ;main.c: 73: TRISB=0b00000000;
   625  000AB6  0E00               	movlw	0
   626  000AB8  6E93               	movwf	3987,c	;volatile
   627                           
   628                           ;main.c: 74: LATB=0b00000000;
   629  000ABA  0E00               	movlw	0
   630  000ABC  6E8A               	movwf	3978,c	;volatile
   631                           
   632                           ;main.c: 76: LATAbits.LATA2=1;
   633  000ABE  8489               	bsf	3977,2,c	;volatile
   634                           
   635                           ;main.c: 77: LATBbits.LATB1=1;
   636  000AC0  828A               	bsf	3978,1,c	;volatile
   637                           
   638                           ;main.c: 78: LATBbits.LATB0=1;
   639  000AC2  808A               	bsf	3978,0,c	;volatile
   640                           
   641                           ;main.c: 79: LATBbits.LATB7=1;
   642  000AC4  8E8A               	bsf	3978,7,c	;volatile
   643                           
   644                           ;main.c: 80: LATBbits.LATB6=1;
   645  000AC6  8C8A               	bsf	3978,6,c	;volatile
   646                           
   647                           ;main.c: 85: RCONbits.IPEN=0;
   648  000AC8  9ED0               	bcf	4048,7,c	;volatile
   649                           
   650                           ;main.c: 95: TMR0L=0;
   651  000ACA  0E00               	movlw	0
   652  000ACC  6ED6               	movwf	4054,c	;volatile
   653                           
   654                           ;main.c: 96: TMR0H=0;
   655  000ACE  0E00               	movlw	0
   656  000AD0  6ED7               	movwf	4055,c	;volatile
   657                           
   658                           ;main.c: 97: T0CON=0b10010011;
   659  000AD2  0E93               	movlw	147
   660  000AD4  6ED5               	movwf	4053,c	;volatile
   661                           
   662                           ;main.c: 101: INTCONbits.TMR0IF=0;
   663  000AD6  94F2               	bcf	intcon,2,c	;volatile
   664                           
   665                           ;main.c: 107: LCDwrcmd(0b00111100);
   666  000AD8  0E3C               	movlw	60
   667  000ADA  EC69  F006         	call	_LCDwrcmd
   668                           
   669                           ;main.c: 108: LCDwrcmd(0b00000110);
   670  000ADE  0E06               	movlw	6
   671  000AE0  EC69  F006         	call	_LCDwrcmd
   672                           
   673                           ;main.c: 109: LCDwrcmd(0b00001100);
   674  000AE4  0E0C               	movlw	12
   675  000AE6  EC69  F006         	call	_LCDwrcmd
   676                           
   677                           ;main.c: 110: LCDwrcmd(0b00000001);
   678  000AEA  0E01               	movlw	1
   679  000AEC  EC69  F006         	call	_LCDwrcmd
   680                           
   681                           ;main.c: 111: _delay((unsigned long)((2)*(0x7A1200/4000.0)));
   682  000AF0  0E06               	movlw	6
   683  000AF2  6E73               	movwf	??_main& (0+255),c
   684  000AF4  0E30               	movlw	48
   685  000AF6                     u1797:
   686  000AF6  2EE8               	decfsz	wreg,f,c
   687  000AF8  D7FE               	goto	u1797
   688  000AFA  2E73               	decfsz	??_main& (0+255),f,c
   689  000AFC  D7FC               	goto	u1797
   690  000AFE  D000               	nop2	
   691                           
   692                           ;main.c: 113: StandbyMenu();
   693  000B00  ECDF  F005         	call	_StandbyMenu	;wreg free
   694                           
   695                           ;main.c: 114: DefaultMenu();
   696  000B04  ECFB  F000         	call	_DefaultMenu	;wreg free
   697  000B08  EF01  F000         	goto	start
   698  000B0C                     __end_of_main:
   699                           	opt stack 0
   700                           tblptru	equ	0xFF8
   701                           tblptrh	equ	0xFF7
   702                           tblptrl	equ	0xFF6
   703                           tablat	equ	0xFF5
   704                           intcon	equ	0xFF2
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           postdec1	equ	0xFE5
   708                           fsr1l	equ	0xFE1
   709                           
   710 ;; *************** function _DefaultMenu *****************
   711 ;; Defined at:
   712 ;;		line 143 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  MenuItem       12  102[COMRAM] struct MenuDisplay
   717 ;;  last            2  100[COMRAM] int 
   718 ;;  y               2   98[COMRAM] int 
   719 ;;  x               2   96[COMRAM] int 
   720 ;;  buffer          1   95[COMRAM] unsigned char 
   721 ;;  z               1    0        unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;		None               void
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0
   731 ;;      Params:         0       0
   732 ;;      Locals:        27       0
   733 ;;      Temps:          4       0
   734 ;;      Totals:        31       0
   735 ;;Total ram usage:       31 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    6
   738 ;; This function calls:
   739 ;;		_LCDsetaddr
   740 ;;		_LCDwrchar
   741 ;;		_LCDwrcmd
   742 ;;		_LCDwrstring
   743 ;;		_OptMenu
   744 ;;		_PairMenu
   745 ;;		___wmul
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text1
   752  0001F6                     __ptext1:
   753                           	opt stack 0
   754  0001F6                     _DefaultMenu:
   755                           	opt stack 24
   756                           
   757                           ;main.c: 148: int x,y;
   758                           ;main.c: 149: int last=0;
   759                           
   760                           ;incstack = 0
   761  0001F6  0E00               	movlw	0
   762  0001F8  6E66               	movwf	DefaultMenu@last+1,c
   763  0001FA  0E00               	movlw	0
   764  0001FC  6E65               	movwf	DefaultMenu@last,c
   765                           
   766                           ;main.c: 150: unsigned char z, buffer;
   767                           ;main.c: 153: struct MenuDisplay {
   768                           ;main.c: 154: unsigned char Addr[5];
   769                           ;main.c: 155: unsigned char CurrentSelect;
   770                           ;main.c: 156: unsigned char ONorOFF[5];
   771                           ;main.c: 157: unsigned char Pair;
   772                           ;main.c: 158: };
   773                           ;main.c: 160: struct MenuDisplay MenuItem = {
   774                           ;main.c: 161: 0x04,0x09,0x0F,0x45,0x4C,
   775                           ;main.c: 162: 0,
   776                           ;main.c: 163: 0,0,0,0,0,
   777                           ;main.c: 164: 0b00000101
   778                           ;main.c: 165: };
   779  0001FE  EE20  F0A8         	lfsr	2,DefaultMenu@F2825
   780  000202  EE10  F067         	lfsr	1,DefaultMenu@MenuItem
   781  000206  0E0B               	movlw	11
   782  000208                     u1461:
   783  000208  CFDB FFE3          	movff	plusw2,plusw1
   784  00020C  06E8               	decf	wreg,f,c
   785  00020E  E2FC               	bc	u1461
   786                           
   787                           ;main.c: 170: for(y=0;y<8;y++)
   788  000210  0E00               	movlw	0
   789  000212  6E64               	movwf	DefaultMenu@y+1,c
   790  000214  0E00               	movlw	0
   791  000216  6E63               	movwf	DefaultMenu@y,c
   792  000218                     l1715:
   793  000218  BE64               	btfsc	DefaultMenu@y+1,7,c
   794  00021A  D008               	goto	l1719
   795  00021C  5064               	movf	DefaultMenu@y+1,w,c
   796  00021E  E148               	bnz	l1737
   797  000220  0E08               	movlw	8
   798  000222  5C63               	subwf	DefaultMenu@y,w,c
   799  000224  B0D8               	btfsc	status,0,c
   800  000226  D044               	goto	l1737
   801  000228  D001               	goto	l1719
   802  00022A  D042               	goto	l1737
   803  00022C                     l1719:
   804                           
   805                           ;main.c: 171: for(x=0;x<7;x++)
   806  00022C  0E00               	movlw	0
   807  00022E  6E62               	movwf	DefaultMenu@x+1,c
   808  000230  0E00               	movlw	0
   809  000232  6E61               	movwf	DefaultMenu@x,c
   810  000234                     l1721:
   811  000234  BE62               	btfsc	DefaultMenu@x+1,7,c
   812  000236  D008               	goto	l1725
   813  000238  5062               	movf	DefaultMenu@x+1,w,c
   814  00023A  E136               	bnz	l1733
   815  00023C  0E07               	movlw	7
   816  00023E  5C61               	subwf	DefaultMenu@x,w,c
   817  000240  B0D8               	btfsc	status,0,c
   818  000242  D032               	goto	l1733
   819  000244  D001               	goto	l1725
   820  000246  D030               	goto	l1733
   821  000248                     l1725:
   822                           
   823                           ;main.c: 172: {
   824                           ;main.c: 173: LCDwrcmd((0b01000000|x)|(y<<3));
   825  000248  3863               	swapf	DefaultMenu@y,w,c
   826  00024A  42E8               	rrncf	wreg,f,c
   827  00024C  0BF8               	andlw	248
   828  00024E  1061               	iorwf	DefaultMenu@x,w,c
   829  000250  0940               	iorlw	64
   830  000252  EC69  F006         	call	_LCDwrcmd
   831                           
   832                           ;main.c: 174: LCDwrchar(Default_Menu_Bitmaps[y][x]);
   833  000256  C061  F054         	movff	DefaultMenu@x,??_DefaultMenu
   834  00025A  C062  F055         	movff	DefaultMenu@x+1,??_DefaultMenu+1
   835  00025E  90D8               	bcf	status,0,c
   836  000260  3654               	rlcf	??_DefaultMenu,f,c
   837  000262  3655               	rlcf	??_DefaultMenu+1,f,c
   838  000264  C063  F001         	movff	DefaultMenu@y,___wmul@multiplier
   839  000268  C064  F002         	movff	DefaultMenu@y+1,___wmul@multiplier+1
   840  00026C  0E00               	movlw	0
   841  00026E  6E04               	movwf	___wmul@multiplicand+1,c
   842  000270  0E0E               	movlw	14
   843  000272  6E03               	movwf	___wmul@multiplicand,c
   844  000274  EC38  F006         	call	___wmul	;wreg free
   845  000278  0E01               	movlw	low _Default_Menu_Bitmaps
   846  00027A  6E56               	movwf	(??_DefaultMenu+2)& (0+255),c
   847  00027C  0E01               	movlw	high _Default_Menu_Bitmaps
   848  00027E  6E57               	movwf	(??_DefaultMenu+3)& (0+255),c
   849  000280  5001               	movf	?___wmul,w,c
   850  000282  2656               	addwf	??_DefaultMenu+2,f,c
   851  000284  5002               	movf	?___wmul+1,w,c
   852  000286  2257               	addwfc	??_DefaultMenu+3,f,c
   853  000288  5054               	movf	??_DefaultMenu,w,c
   854  00028A  2656               	addwf	??_DefaultMenu+2,f,c
   855  00028C  5055               	movf	??_DefaultMenu+1,w,c
   856  00028E  2257               	addwfc	??_DefaultMenu+3,f,c
   857  000290  C056  FFF6         	movff	??_DefaultMenu+2,tblptrl
   858  000294  C057  FFF7         	movff	??_DefaultMenu+3,tblptrh
   859  000298                     	if	0	;tblptru may be non-zero
   860  000298                     	endif
   861  000298                     	if	0	;tblptru may be non-zero
   862  000298                     	endif
   863  000298  0008               	tblrd		*
   864  00029A  50F5               	movf	tablat,w,c
   865  00029C  EC5B  F006         	call	_LCDwrchar
   866  0002A0  4A61               	infsnz	DefaultMenu@x,f,c
   867  0002A2  2A62               	incf	DefaultMenu@x+1,f,c
   868  0002A4  D7C7               	goto	l1721
   869  0002A6  D000               	goto	l1733
   870  0002A8                     l1733:
   871  0002A8  4A63               	infsnz	DefaultMenu@y,f,c
   872  0002AA  2A64               	incf	DefaultMenu@y+1,f,c
   873  0002AC  D7B5               	goto	l1715
   874  0002AE  D000               	goto	l1737
   875  0002B0                     l1737:
   876                           
   877                           ;main.c: 175: }
   878                           ;main.c: 176: LCDsetaddr(0);
   879  0002B0  0E00               	movlw	0
   880  0002B2  EC4C  F006         	call	_LCDsetaddr
   881                           
   882                           ;main.c: 178: LCDwrstring("12V=/ 5V=/ 3V3=/");
   883  0002B6  0EA0               	movlw	low STR_2
   884  0002B8  6E07               	movwf	LCDwrstring@string,c
   885  0002BA  0E01               	movlw	high STR_2
   886  0002BC  6E08               	movwf	LCDwrstring@string+1,c
   887  0002BE  ECB5  F005         	call	_LCDwrstring	;wreg free
   888                           
   889                           ;main.c: 179: LCDsetaddr(0x40);
   890  0002C2  0E40               	movlw	64
   891  0002C4  EC4C  F006         	call	_LCDsetaddr
   892                           
   893                           ;main.c: 180: LCDwrstring("-12V=/      MENU");
   894  0002C8  0EC2               	movlw	low STR_3
   895  0002CA  6E07               	movwf	LCDwrstring@string,c
   896  0002CC  0E01               	movlw	high STR_3
   897  0002CE  6E08               	movwf	LCDwrstring@string+1,c
   898  0002D0  ECB5  F005         	call	_LCDwrstring	;wreg free
   899  0002D4  D000               	goto	l1743
   900  0002D6                     l1743:
   901                           
   902                           ;main.c: 188: if(PORTAbits.RA4==1) {
   903  0002D6  A880               	btfss	3968,4,c	;volatile
   904  0002D8  D047               	goto	l73
   905                           
   906                           ;main.c: 189: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
   907  0002DA  0E20               	movlw	32
   908  0002DC  6E54               	movwf	??_DefaultMenu& (0+255),c
   909  0002DE  0E2A               	movlw	42
   910  0002E0                     u1807:
   911  0002E0  2EE8               	decfsz	wreg,f,c
   912  0002E2  D7FE               	goto	u1807
   913  0002E4  2E54               	decfsz	??_DefaultMenu& (0+255),f,c
   914  0002E6  D7FC               	goto	u1807
   915                           
   916                           ;main.c: 190: if(PORTAbits.RA4==1) {
   917  0002E8  A880               	btfss	3968,4,c	;volatile
   918  0002EA  D03E               	goto	l73
   919                           
   920                           ;main.c: 191: LCDsetaddr(MenuItem.Addr[MenuItem.CurrentSelect]);
   921  0002EC  506C               	movf	DefaultMenu@MenuItem+5,w,c
   922  0002EE  0D01               	mullw	1
   923  0002F0  0E67               	movlw	low DefaultMenu@MenuItem
   924  0002F2  24F3               	addwf	prodl,w,c
   925  0002F4  6ED9               	movwf	fsr2l,c
   926  0002F6  0E00               	movlw	high DefaultMenu@MenuItem
   927  0002F8  20F4               	addwfc	prodh,w,c
   928  0002FA  6EDA               	movwf	fsr2h,c
   929  0002FC  50DF               	movf	indf2,w,c
   930  0002FE  EC4C  F006         	call	_LCDsetaddr
   931                           
   932                           ;main.c: 192: if(MenuItem.CurrentSelect==4)
   933  000302  0E04               	movlw	4
   934  000304  186C               	xorwf	DefaultMenu@MenuItem+5,w,c
   935  000306  A4D8               	btfss	status,2,c
   936  000308  D007               	goto	l1755
   937                           
   938                           ;main.c: 193: LCDwrstring("MENU");
   939  00030A  0EBD               	movlw	low (STR_15+12)
   940  00030C  6E07               	movwf	LCDwrstring@string,c
   941  00030E  0E01               	movlw	high (STR_15+12)
   942  000310  6E08               	movwf	LCDwrstring@string+1,c
   943  000312  ECB5  F005         	call	_LCDwrstring	;wreg free
   944  000316  D01C               	goto	l1763
   945  000318                     l1755:
   946                           
   947                           ;main.c: 194: else
   948                           ;main.c: 195: LCDwrchar(MenuItem.ONorOFF[MenuItem.CurrentSelect] ? 0x00:0x2F);
   949  000318  506C               	movf	DefaultMenu@MenuItem+5,w,c
   950  00031A  0D01               	mullw	1
   951  00031C  0E06               	movlw	6
   952  00031E  26F3               	addwf	prodl,f,c
   953  000320  0E00               	movlw	0
   954  000322  22F4               	addwfc	prodh,f,c
   955  000324  0E67               	movlw	low DefaultMenu@MenuItem
   956  000326  24F3               	addwf	prodl,w,c
   957  000328  6ED9               	movwf	fsr2l,c
   958  00032A  0E00               	movlw	high DefaultMenu@MenuItem
   959  00032C  20F4               	addwfc	prodh,w,c
   960  00032E  6EDA               	movwf	fsr2h,c
   961  000330  50DF               	movf	indf2,w,c
   962  000332  A4D8               	btfss	status,2,c
   963  000334  D004               	goto	l1759
   964  000336  0E00               	movlw	0
   965  000338  6E59               	movwf	_DefaultMenu$580+1,c
   966  00033A  0E2F               	movlw	47
   967  00033C  D003               	goto	L1
   968  00033E                     l1759:
   969  00033E  0E00               	movlw	0
   970  000340  6E59               	movwf	_DefaultMenu$580+1,c
   971  000342  0E00               	movlw	0
   972  000344                     L1:
   973  000344  6E58               	movwf	_DefaultMenu$580,c
   974  000346  D000               	goto	l1761
   975  000348                     l1761:
   976  000348  5058               	movf	_DefaultMenu$580,w,c
   977  00034A  EC5B  F006         	call	_LCDwrchar
   978  00034E  D000               	goto	l1763
   979  000350                     l1763:
   980                           
   981                           ;main.c: 200: MenuItem.CurrentSelect++;
   982  000350  2A6C               	incf	DefaultMenu@MenuItem+5,f,c
   983                           
   984                           ;main.c: 201: if(MenuItem.CurrentSelect==5)
   985  000352  0E05               	movlw	5
   986  000354  186C               	xorwf	DefaultMenu@MenuItem+5,w,c
   987  000356  A4D8               	btfss	status,2,c
   988  000358  D003               	goto	l82
   989                           
   990                           ;main.c: 202: MenuItem.CurrentSelect=0;
   991  00035A  0E00               	movlw	0
   992  00035C  6E6C               	movwf	DefaultMenu@MenuItem+5,c
   993                           
   994                           ;main.c: 203: while(PORTAbits.RA4==1);
   995  00035E  D000               	goto	l82
   996  000360                     l82:
   997  000360  A880               	btfss	3968,4,c	;volatile
   998  000362  D002               	goto	l73
   999  000364  D7FD               	goto	l82
  1000  000366  D000               	goto	l73
  1001  000368                     l73:
  1002                           
  1003                           ;main.c: 204: }
  1004                           ;main.c: 205: }
  1005                           ;main.c: 207: if(PORTAbits.RA1==1) {
  1006  000368  A280               	btfss	3968,1,c	;volatile
  1007  00036A  D047               	goto	l85
  1008                           
  1009                           ;main.c: 208: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
  1010  00036C  0E20               	movlw	32
  1011  00036E  6E54               	movwf	??_DefaultMenu& (0+255),c
  1012  000370  0E2A               	movlw	42
  1013  000372                     u1817:
  1014  000372  2EE8               	decfsz	wreg,f,c
  1015  000374  D7FE               	goto	u1817
  1016  000376  2E54               	decfsz	??_DefaultMenu& (0+255),f,c
  1017  000378  D7FC               	goto	u1817
  1018                           
  1019                           ;main.c: 209: if(PORTAbits.RA1==1) {
  1020  00037A  A280               	btfss	3968,1,c	;volatile
  1021  00037C  D03E               	goto	l85
  1022                           
  1023                           ;main.c: 210: LCDsetaddr(MenuItem.Addr[MenuItem.CurrentSelect]);
  1024  00037E  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1025  000380  0D01               	mullw	1
  1026  000382  0E67               	movlw	low DefaultMenu@MenuItem
  1027  000384  24F3               	addwf	prodl,w,c
  1028  000386  6ED9               	movwf	fsr2l,c
  1029  000388  0E00               	movlw	high DefaultMenu@MenuItem
  1030  00038A  20F4               	addwfc	prodh,w,c
  1031  00038C  6EDA               	movwf	fsr2h,c
  1032  00038E  50DF               	movf	indf2,w,c
  1033  000390  EC4C  F006         	call	_LCDsetaddr
  1034                           
  1035                           ;main.c: 211: if(MenuItem.CurrentSelect==4)
  1036  000394  0E04               	movlw	4
  1037  000396  186C               	xorwf	DefaultMenu@MenuItem+5,w,c
  1038  000398  A4D8               	btfss	status,2,c
  1039  00039A  D007               	goto	l1779
  1040                           
  1041                           ;main.c: 212: LCDwrstring("MENU");
  1042  00039C  0EBD               	movlw	low (STR_15+12)
  1043  00039E  6E07               	movwf	LCDwrstring@string,c
  1044  0003A0  0E01               	movlw	high (STR_15+12)
  1045  0003A2  6E08               	movwf	LCDwrstring@string+1,c
  1046  0003A4  ECB5  F005         	call	_LCDwrstring	;wreg free
  1047  0003A8  D01C               	goto	l1787
  1048  0003AA                     l1779:
  1049                           
  1050                           ;main.c: 213: else
  1051                           ;main.c: 214: LCDwrchar(MenuItem.ONorOFF[MenuItem.CurrentSelect] ? 0x00:0x2F);
  1052  0003AA  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1053  0003AC  0D01               	mullw	1
  1054  0003AE  0E06               	movlw	6
  1055  0003B0  26F3               	addwf	prodl,f,c
  1056  0003B2  0E00               	movlw	0
  1057  0003B4  22F4               	addwfc	prodh,f,c
  1058  0003B6  0E67               	movlw	low DefaultMenu@MenuItem
  1059  0003B8  24F3               	addwf	prodl,w,c
  1060  0003BA  6ED9               	movwf	fsr2l,c
  1061  0003BC  0E00               	movlw	high DefaultMenu@MenuItem
  1062  0003BE  20F4               	addwfc	prodh,w,c
  1063  0003C0  6EDA               	movwf	fsr2h,c
  1064  0003C2  50DF               	movf	indf2,w,c
  1065  0003C4  A4D8               	btfss	status,2,c
  1066  0003C6  D004               	goto	l1783
  1067  0003C8  0E00               	movlw	0
  1068  0003CA  6E5B               	movwf	_DefaultMenu$582+1,c
  1069  0003CC  0E2F               	movlw	47
  1070  0003CE  D003               	goto	L2
  1071  0003D0                     l1783:
  1072  0003D0  0E00               	movlw	0
  1073  0003D2  6E5B               	movwf	_DefaultMenu$582+1,c
  1074  0003D4  0E00               	movlw	0
  1075  0003D6                     L2:
  1076  0003D6  6E5A               	movwf	_DefaultMenu$582,c
  1077  0003D8  D000               	goto	l1785
  1078  0003DA                     l1785:
  1079  0003DA  505A               	movf	_DefaultMenu$582,w,c
  1080  0003DC  EC5B  F006         	call	_LCDwrchar
  1081  0003E0  D000               	goto	l1787
  1082  0003E2                     l1787:
  1083                           
  1084                           ;main.c: 219: if(MenuItem.CurrentSelect==0)
  1085  0003E2  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1086  0003E4  A4D8               	btfss	status,2,c
  1087  0003E6  D003               	goto	l1791
  1088                           
  1089                           ;main.c: 220: MenuItem.CurrentSelect=5;
  1090  0003E8  0E05               	movlw	5
  1091  0003EA  6E6C               	movwf	DefaultMenu@MenuItem+5,c
  1092  0003EC  D000               	goto	l1791
  1093  0003EE                     l1791:
  1094                           
  1095                           ;main.c: 221: MenuItem.CurrentSelect--;
  1096  0003EE  066C               	decf	DefaultMenu@MenuItem+5,f,c
  1097                           
  1098                           ;main.c: 222: while(PORTAbits.RA1==1);
  1099  0003F0  D000               	goto	l94
  1100  0003F2                     l94:
  1101  0003F2  A280               	btfss	3968,1,c	;volatile
  1102  0003F4  D002               	goto	l85
  1103  0003F6  D7FD               	goto	l94
  1104  0003F8  D000               	goto	l85
  1105  0003FA                     l85:
  1106                           
  1107                           ;main.c: 223: }
  1108                           ;main.c: 224: }
  1109                           ;main.c: 226: if(PORTAbits.RA0==1) {
  1110  0003FA  A080               	btfss	3968,0,c	;volatile
  1111  0003FC  D0D7               	goto	l97
  1112                           
  1113                           ;main.c: 227: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
  1114  0003FE  0E20               	movlw	32
  1115  000400  6E54               	movwf	??_DefaultMenu& (0+255),c
  1116  000402  0E2A               	movlw	42
  1117  000404                     u1827:
  1118  000404  2EE8               	decfsz	wreg,f,c
  1119  000406  D7FE               	goto	u1827
  1120  000408  2E54               	decfsz	??_DefaultMenu& (0+255),f,c
  1121  00040A  D7FC               	goto	u1827
  1122                           
  1123                           ;main.c: 228: if(PORTAbits.RA0==1) {
  1124  00040C  A080               	btfss	3968,0,c	;volatile
  1125  00040E  D0CE               	goto	l97
  1126                           
  1127                           ;main.c: 229: if(MenuItem.CurrentSelect==4) {
  1128  000410  0E04               	movlw	4
  1129  000412  186C               	xorwf	DefaultMenu@MenuItem+5,w,c
  1130  000414  B4D8               	btfsc	status,2,c
  1131  000416  D002               	goto	l100
  1132  000418  D021               	goto	l1815
  1133                           
  1134                           ;main.c: 230: while(PORTAbits.RA0);
  1135  00041A  D000               	goto	l100
  1136  00041C                     l100:
  1137  00041C  B080               	btfsc	3968,0,c	;volatile
  1138  00041E  D7FE               	goto	l100
  1139                           
  1140                           ;main.c: 231: buffer=OptMenu(0);
  1141  000420  0E00               	movlw	0
  1142  000422  EC36  F003         	call	_OptMenu
  1143  000426  6E60               	movwf	DefaultMenu@buffer,c
  1144                           
  1145                           ;main.c: 232: if(buffer==2)
  1146  000428  0E02               	movlw	2
  1147  00042A  1860               	xorwf	DefaultMenu@buffer,w,c
  1148  00042C  A4D8               	btfss	status,2,c
  1149  00042E  D003               	goto	l1807
  1150                           
  1151                           ;main.c: 233: PairMenu();
  1152  000430  EC52  F004         	call	_PairMenu	;wreg free
  1153  000434  D000               	goto	l1807
  1154  000436                     l1807:
  1155                           
  1156                           ;main.c: 234: LCDsetaddr(0);
  1157  000436  0E00               	movlw	0
  1158  000438  EC4C  F006         	call	_LCDsetaddr
  1159                           
  1160                           ;main.c: 235: LCDwrstring("12V=/ 5V=/ 3V3=/");
  1161  00043C  0EA0               	movlw	low STR_2
  1162  00043E  6E07               	movwf	LCDwrstring@string,c
  1163  000440  0E01               	movlw	high STR_2
  1164  000442  6E08               	movwf	LCDwrstring@string+1,c
  1165  000444  ECB5  F005         	call	_LCDwrstring	;wreg free
  1166                           
  1167                           ;main.c: 236: LCDsetaddr(0x40);
  1168  000448  0E40               	movlw	64
  1169  00044A  EC4C  F006         	call	_LCDsetaddr
  1170                           
  1171                           ;main.c: 237: LCDwrstring("-12V=/      MENU");
  1172  00044E  0EC2               	movlw	low STR_3
  1173  000450  6E07               	movwf	LCDwrstring@string,c
  1174  000452  0E01               	movlw	high STR_3
  1175  000454  6E08               	movwf	LCDwrstring@string+1,c
  1176  000456  ECB5  F005         	call	_LCDwrstring	;wreg free
  1177                           
  1178                           ;main.c: 238: }
  1179  00045A  D0A4               	goto	l115
  1180  00045C                     l1815:
  1181                           
  1182                           ;main.c: 239: else {
  1183                           ;main.c: 240: MenuItem.ONorOFF[MenuItem.CurrentSelect]=~MenuItem.ONorOFF[MenuItem.Curren
      +                          tSelect];
  1184  00045C  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1185  00045E  0D01               	mullw	1
  1186  000460  0E06               	movlw	6
  1187  000462  26F3               	addwf	prodl,f,c
  1188  000464  0E00               	movlw	0
  1189  000466  22F4               	addwfc	prodh,f,c
  1190  000468  0E67               	movlw	low DefaultMenu@MenuItem
  1191  00046A  24F3               	addwf	prodl,w,c
  1192  00046C  6ED9               	movwf	fsr2l,c
  1193  00046E  0E00               	movlw	high DefaultMenu@MenuItem
  1194  000470  20F4               	addwfc	prodh,w,c
  1195  000472  6EDA               	movwf	fsr2h,c
  1196  000474  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1197  000476  0D01               	mullw	1
  1198  000478  0E06               	movlw	6
  1199  00047A  26F3               	addwf	prodl,f,c
  1200  00047C  0E00               	movlw	0
  1201  00047E  22F4               	addwfc	prodh,f,c
  1202  000480  0E67               	movlw	low DefaultMenu@MenuItem
  1203  000482  24F3               	addwf	prodl,w,c
  1204  000484  6EE1               	movwf	fsr1l,c
  1205  000486  0E00               	movlw	high DefaultMenu@MenuItem
  1206  000488  20F4               	addwfc	prodh,w,c
  1207  00048A  6EE2               	movwf	fsr1h,c
  1208  00048C  50E7               	movf	indf1,w,c
  1209  00048E  0AFF               	xorlw	255
  1210  000490  6EDF               	movwf	indf2,c
  1211                           
  1212                           ;main.c: 242: LCDsetaddr(MenuItem.Addr[MenuItem.CurrentSelect]);
  1213  000492  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1214  000494  0D01               	mullw	1
  1215  000496  0E67               	movlw	low DefaultMenu@MenuItem
  1216  000498  24F3               	addwf	prodl,w,c
  1217  00049A  6ED9               	movwf	fsr2l,c
  1218  00049C  0E00               	movlw	high DefaultMenu@MenuItem
  1219  00049E  20F4               	addwfc	prodh,w,c
  1220  0004A0  6EDA               	movwf	fsr2h,c
  1221  0004A2  50DF               	movf	indf2,w,c
  1222  0004A4  EC4C  F006         	call	_LCDsetaddr
  1223                           
  1224                           ;main.c: 243: LCDwrchar(MenuItem.ONorOFF[MenuItem.CurrentSelect] ? 0x00:0x2F);
  1225  0004A8  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1226  0004AA  0D01               	mullw	1
  1227  0004AC  0E06               	movlw	6
  1228  0004AE  26F3               	addwf	prodl,f,c
  1229  0004B0  0E00               	movlw	0
  1230  0004B2  22F4               	addwfc	prodh,f,c
  1231  0004B4  0E67               	movlw	low DefaultMenu@MenuItem
  1232  0004B6  24F3               	addwf	prodl,w,c
  1233  0004B8  6ED9               	movwf	fsr2l,c
  1234  0004BA  0E00               	movlw	high DefaultMenu@MenuItem
  1235  0004BC  20F4               	addwfc	prodh,w,c
  1236  0004BE  6EDA               	movwf	fsr2h,c
  1237  0004C0  50DF               	movf	indf2,w,c
  1238  0004C2  A4D8               	btfss	status,2,c
  1239  0004C4  D004               	goto	l1823
  1240  0004C6  0E00               	movlw	0
  1241  0004C8  6E5D               	movwf	_DefaultMenu$585+1,c
  1242  0004CA  0E2F               	movlw	47
  1243  0004CC  D003               	goto	L3
  1244  0004CE                     l1823:
  1245  0004CE  0E00               	movlw	0
  1246  0004D0  6E5D               	movwf	_DefaultMenu$585+1,c
  1247  0004D2  0E00               	movlw	0
  1248  0004D4                     L3:
  1249  0004D4  6E5C               	movwf	_DefaultMenu$585,c
  1250  0004D6  D000               	goto	l1825
  1251  0004D8                     l1825:
  1252  0004D8  505C               	movf	_DefaultMenu$585,w,c
  1253  0004DA  EC5B  F006         	call	_LCDwrchar
  1254                           
  1255                           ;main.c: 245: switch(MenuItem.CurrentSelect) {
  1256  0004DE  D054               	goto	l1837
  1257  0004E0                     l1827:
  1258                           
  1259                           ;main.c: 247: LATBbits.LATB1=~MenuItem.ONorOFF[MenuItem.CurrentSelect];
  1260  0004E0  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1261  0004E2  0D01               	mullw	1
  1262  0004E4  0E06               	movlw	6
  1263  0004E6  26F3               	addwf	prodl,f,c
  1264  0004E8  0E00               	movlw	0
  1265  0004EA  22F4               	addwfc	prodh,f,c
  1266  0004EC  0E67               	movlw	low DefaultMenu@MenuItem
  1267  0004EE  24F3               	addwf	prodl,w,c
  1268  0004F0  6ED9               	movwf	fsr2l,c
  1269  0004F2  0E00               	movlw	high DefaultMenu@MenuItem
  1270  0004F4  20F4               	addwfc	prodh,w,c
  1271  0004F6  6EDA               	movwf	fsr2h,c
  1272  0004F8  50DF               	movf	indf2,w,c
  1273  0004FA  0AFF               	xorlw	255
  1274  0004FC  6E54               	movwf	??_DefaultMenu& (0+255),c
  1275  0004FE  4654               	rlncf	??_DefaultMenu,f,c
  1276  000500  508A               	movf	3978,w,c	;volatile
  1277  000502  1854               	xorwf	??_DefaultMenu,w,c
  1278  000504  0BFD               	andlw	-3
  1279  000506  D03D               	goto	L6
  1280  000508                     l1829:
  1281                           
  1282                           ;main.c: 250: LATBbits.LATB7=~MenuItem.ONorOFF[MenuItem.CurrentSelect];
  1283  000508  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1284  00050A  0D01               	mullw	1
  1285  00050C  0E06               	movlw	6
  1286  00050E  26F3               	addwf	prodl,f,c
  1287  000510  0E00               	movlw	0
  1288  000512  22F4               	addwfc	prodh,f,c
  1289  000514  0E67               	movlw	low DefaultMenu@MenuItem
  1290  000516  24F3               	addwf	prodl,w,c
  1291  000518  6ED9               	movwf	fsr2l,c
  1292  00051A  0E00               	movlw	high DefaultMenu@MenuItem
  1293  00051C  20F4               	addwfc	prodh,w,c
  1294  00051E  6EDA               	movwf	fsr2h,c
  1295  000520  50DF               	movf	indf2,w,c
  1296  000522  0AFF               	xorlw	255
  1297  000524  6E54               	movwf	??_DefaultMenu& (0+255),c
  1298  000526  3254               	rrcf	??_DefaultMenu,f,c
  1299  000528  3254               	rrcf	??_DefaultMenu,f,c
  1300  00052A  508A               	movf	3978,w,c	;volatile
  1301  00052C  1854               	xorwf	??_DefaultMenu,w,c
  1302  00052E  0B7F               	andlw	-129
  1303  000530  D028               	goto	L6
  1304  000532                     l1831:
  1305                           
  1306                           ;main.c: 253: LATBbits.LATB6=~MenuItem.ONorOFF[MenuItem.CurrentSelect];
  1307  000532  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1308  000534  0D01               	mullw	1
  1309  000536  0E06               	movlw	6
  1310  000538  26F3               	addwf	prodl,f,c
  1311  00053A  0E00               	movlw	0
  1312  00053C  22F4               	addwfc	prodh,f,c
  1313  00053E  0E67               	movlw	low DefaultMenu@MenuItem
  1314  000540  24F3               	addwf	prodl,w,c
  1315  000542  6ED9               	movwf	fsr2l,c
  1316  000544  0E00               	movlw	high DefaultMenu@MenuItem
  1317  000546  20F4               	addwfc	prodh,w,c
  1318  000548  6EDA               	movwf	fsr2h,c
  1319  00054A  50DF               	movf	indf2,w,c
  1320  00054C  0AFF               	xorlw	255
  1321  00054E  6E54               	movwf	??_DefaultMenu& (0+255),c
  1322  000550  3A54               	swapf	??_DefaultMenu,f,c
  1323  000552  4654               	rlncf	??_DefaultMenu,f,c
  1324  000554  4654               	rlncf	??_DefaultMenu,f,c
  1325  000556  508A               	movf	3978,w,c	;volatile
  1326  000558  1854               	xorwf	??_DefaultMenu,w,c
  1327  00055A  0BBF               	andlw	-65
  1328  00055C  D012               	goto	L6
  1329  00055E                     l1833:
  1330                           
  1331                           ;main.c: 256: LATBbits.LATB0=~MenuItem.ONorOFF[MenuItem.CurrentSelect];
  1332  00055E  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1333  000560  0D01               	mullw	1
  1334  000562  0E06               	movlw	6
  1335  000564  26F3               	addwf	prodl,f,c
  1336  000566  0E00               	movlw	0
  1337  000568  22F4               	addwfc	prodh,f,c
  1338  00056A  0E67               	movlw	low DefaultMenu@MenuItem
  1339  00056C  24F3               	addwf	prodl,w,c
  1340  00056E  6ED9               	movwf	fsr2l,c
  1341  000570  0E00               	movlw	high DefaultMenu@MenuItem
  1342  000572  20F4               	addwfc	prodh,w,c
  1343  000574  6EDA               	movwf	fsr2h,c
  1344  000576  50DF               	movf	indf2,w,c
  1345  000578  0AFF               	xorlw	255
  1346  00057A  6E54               	movwf	??_DefaultMenu& (0+255),c
  1347  00057C  508A               	movf	3978,w,c	;volatile
  1348  00057E  1854               	xorwf	??_DefaultMenu,w,c
  1349  000580  0BFE               	andlw	-2
  1350  000582                     L6:
  1351  000582  1854               	xorwf	??_DefaultMenu,w,c
  1352  000584  6E8A               	movwf	3978,c	;volatile
  1353                           
  1354                           ;main.c: 258: }
  1355                           
  1356                           ;main.c: 257: break;
  1357  000586  D00E               	goto	l115
  1358  000588                     l1837:
  1359  000588  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1360                           
  1361                           ; Switch size 1, requested type "space"
  1362                           ; Number of cases is 4, Range of values is 0 to 3
  1363                           ; switch strategies available:
  1364                           ; Name         Instructions Cycles
  1365                           ; simple_byte           13     7 (average)
  1366                           ;	Chosen strategy is simple_byte
  1367  00058A  0A00               	xorlw	0	; case 0
  1368  00058C  B4D8               	btfsc	status,2,c
  1369  00058E  D7A8               	goto	l1827
  1370  000590  0A01               	xorlw	1	; case 1
  1371  000592  B4D8               	btfsc	status,2,c
  1372  000594  D7B9               	goto	l1829
  1373  000596  0A03               	xorlw	3	; case 2
  1374  000598  B4D8               	btfsc	status,2,c
  1375  00059A  D7CB               	goto	l1831
  1376  00059C  0A01               	xorlw	1	; case 3
  1377  00059E  B4D8               	btfsc	status,2,c
  1378  0005A0  D7DE               	goto	l1833
  1379                           
  1380                           ;main.c: 259: }
  1381                           ;main.c: 260: while(PORTAbits.RA0==1);
  1382  0005A2  D000               	goto	l115
  1383  0005A4                     l115:
  1384  0005A4  A080               	btfss	3968,0,c	;volatile
  1385  0005A6  D002               	goto	l97
  1386  0005A8  D7FD               	goto	l115
  1387  0005AA  D000               	goto	l97
  1388  0005AC                     l97:
  1389                           
  1390                           ;main.c: 261: }
  1391                           ;main.c: 262: }
  1392                           ;main.c: 264: if(INTCONbits.TMR0IF) {
  1393  0005AC  A4F2               	btfss	intcon,2,c	;volatile
  1394  0005AE  D693               	goto	l1743
  1395                           
  1396                           ;main.c: 265: LCDsetaddr(MenuItem.Addr[MenuItem.CurrentSelect]);
  1397  0005B0  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1398  0005B2  0D01               	mullw	1
  1399  0005B4  0E67               	movlw	low DefaultMenu@MenuItem
  1400  0005B6  24F3               	addwf	prodl,w,c
  1401  0005B8  6ED9               	movwf	fsr2l,c
  1402  0005BA  0E00               	movlw	high DefaultMenu@MenuItem
  1403  0005BC  20F4               	addwfc	prodh,w,c
  1404  0005BE  6EDA               	movwf	fsr2h,c
  1405  0005C0  50DF               	movf	indf2,w,c
  1406  0005C2  EC4C  F006         	call	_LCDsetaddr
  1407                           
  1408                           ;main.c: 266: if(MenuItem.CurrentSelect==4)
  1409  0005C6  0E04               	movlw	4
  1410  0005C8  186C               	xorwf	DefaultMenu@MenuItem+5,w,c
  1411  0005CA  A4D8               	btfss	status,2,c
  1412  0005CC  D018               	goto	l1849
  1413                           
  1414                           ;main.c: 267: if(last)
  1415  0005CE  5065               	movf	DefaultMenu@last,w,c
  1416  0005D0  1066               	iorwf	DefaultMenu@last+1,w,c
  1417  0005D2  B4D8               	btfsc	status,2,c
  1418  0005D4  D007               	goto	l1847
  1419                           
  1420                           ;main.c: 268: LCDwrstring("MENU");
  1421  0005D6  0EBD               	movlw	low (STR_15+12)
  1422  0005D8  6E07               	movwf	LCDwrstring@string,c
  1423  0005DA  0E01               	movlw	high (STR_15+12)
  1424  0005DC  6E08               	movwf	LCDwrstring@string+1,c
  1425  0005DE  ECB5  F005         	call	_LCDwrstring	;wreg free
  1426  0005E2  D037               	goto	l1861
  1427  0005E4                     l1847:
  1428                           
  1429                           ;main.c: 269: else {
  1430                           ;main.c: 270: LCDwrchar(0x02);
  1431  0005E4  0E02               	movlw	2
  1432  0005E6  EC5B  F006         	call	_LCDwrchar
  1433                           
  1434                           ;main.c: 271: LCDwrchar(0x03);
  1435  0005EA  0E03               	movlw	3
  1436  0005EC  EC5B  F006         	call	_LCDwrchar
  1437                           
  1438                           ;main.c: 272: LCDwrchar(0x04);
  1439  0005F0  0E04               	movlw	4
  1440  0005F2  EC5B  F006         	call	_LCDwrchar
  1441                           
  1442                           ;main.c: 273: LCDwrchar(0x05);
  1443  0005F6  0E05               	movlw	5
  1444  0005F8  EC5B  F006         	call	_LCDwrchar
  1445                           
  1446                           ;main.c: 274: }
  1447  0005FC  D02A               	goto	l1861
  1448  0005FE                     l1849:
  1449                           
  1450                           ;main.c: 275: else
  1451                           ;main.c: 276: if(MenuItem.ONorOFF[MenuItem.CurrentSelect])
  1452  0005FE  506C               	movf	DefaultMenu@MenuItem+5,w,c
  1453  000600  0D01               	mullw	1
  1454  000602  0E06               	movlw	6
  1455  000604  26F3               	addwf	prodl,f,c
  1456  000606  0E00               	movlw	0
  1457  000608  22F4               	addwfc	prodh,f,c
  1458  00060A  0E67               	movlw	low DefaultMenu@MenuItem
  1459  00060C  24F3               	addwf	prodl,w,c
  1460  00060E  6ED9               	movwf	fsr2l,c
  1461  000610  0E00               	movlw	high DefaultMenu@MenuItem
  1462  000612  20F4               	addwfc	prodh,w,c
  1463  000614  6EDA               	movwf	fsr2h,c
  1464  000616  50DF               	movf	indf2,w,c
  1465  000618  B4D8               	btfsc	status,2,c
  1466  00061A  D00A               	goto	l1853
  1467                           
  1468                           ;main.c: 277: LCDwrchar(last ? 0:1);
  1469  00061C  5065               	movf	DefaultMenu@last,w,c
  1470  00061E  1066               	iorwf	DefaultMenu@last+1,w,c
  1471  000620  A4D8               	btfss	status,2,c
  1472  000622  D002               	goto	u1740
  1473  000624  0E01               	movlw	1
  1474  000626  D001               	goto	u1750
  1475  000628                     u1740:
  1476  000628  0E00               	movlw	0
  1477  00062A                     u1750:
  1478  00062A  EC5B  F006         	call	_LCDwrchar
  1479  00062E  D011               	goto	l1861
  1480  000630                     l1853:
  1481                           
  1482                           ;main.c: 278: else
  1483                           ;main.c: 279: LCDwrchar(last ? 0x2F:0x06);
  1484  000630  5065               	movf	DefaultMenu@last,w,c
  1485  000632  1066               	iorwf	DefaultMenu@last+1,w,c
  1486  000634  A4D8               	btfss	status,2,c
  1487  000636  D004               	goto	l1857
  1488  000638  0E00               	movlw	0
  1489  00063A  6E5F               	movwf	_DefaultMenu$587+1,c
  1490  00063C  0E06               	movlw	6
  1491  00063E  D003               	goto	L7
  1492  000640                     l1857:
  1493  000640  0E00               	movlw	0
  1494  000642  6E5F               	movwf	_DefaultMenu$587+1,c
  1495  000644  0E2F               	movlw	47
  1496  000646                     L7:
  1497  000646  6E5E               	movwf	_DefaultMenu$587,c
  1498  000648  D000               	goto	l1859
  1499  00064A                     l1859:
  1500  00064A  505E               	movf	_DefaultMenu$587,w,c
  1501  00064C  EC5B  F006         	call	_LCDwrchar
  1502  000650  D000               	goto	l1861
  1503  000652                     l1861:
  1504                           
  1505                           ;main.c: 281: last=last ? 0:1;
  1506  000652  5065               	movf	DefaultMenu@last,w,c
  1507  000654  1066               	iorwf	DefaultMenu@last+1,w,c
  1508  000656  A4D8               	btfss	status,2,c
  1509  000658  D002               	goto	u1770
  1510  00065A  0E01               	movlw	1
  1511  00065C  D001               	goto	u1780
  1512  00065E                     u1770:
  1513  00065E  0E00               	movlw	0
  1514  000660                     u1780:
  1515  000660  6E65               	movwf	DefaultMenu@last,c
  1516  000662  6A66               	clrf	DefaultMenu@last+1,c
  1517                           
  1518                           ;main.c: 282: INTCONbits.TMR0IF=0;
  1519  000664  94F2               	bcf	intcon,2,c	;volatile
  1520  000666  D637               	goto	l1743
  1521  000668  D7FF               	goto	l132
  1522  00066A  0012               	return		;funcret
  1523  00066C                     __end_of_DefaultMenu:
  1524                           	opt stack 0
  1525                           tblptru	equ	0xFF8
  1526                           tblptrh	equ	0xFF7
  1527                           tblptrl	equ	0xFF6
  1528                           tablat	equ	0xFF5
  1529                           prodh	equ	0xFF4
  1530                           prodl	equ	0xFF3
  1531                           intcon	equ	0xFF2
  1532                           postinc0	equ	0xFEE
  1533                           wreg	equ	0xFE8
  1534                           indf1	equ	0xFE7
  1535                           postdec1	equ	0xFE5
  1536                           plusw1	equ	0xFE3
  1537                           fsr1h	equ	0xFE2
  1538                           fsr1l	equ	0xFE1
  1539                           indf2	equ	0xFDF
  1540                           plusw2	equ	0xFDB
  1541                           fsr2h	equ	0xFDA
  1542                           fsr2l	equ	0xFD9
  1543                           status	equ	0xFD8
  1544                           
  1545 ;; *************** function _PairMenu *****************
  1546 ;; Defined at:
  1547 ;;		line 390 in file "main.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  buffer          1   82[COMRAM] unsigned char 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;		None               void
  1554 ;; Registers used:
  1555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0
  1561 ;;      Params:         0       0
  1562 ;;      Locals:        13       0
  1563 ;;      Temps:          1       0
  1564 ;;      Totals:        14       0
  1565 ;;Total ram usage:       14 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    5
  1568 ;; This function calls:
  1569 ;;		_LCDsetaddr
  1570 ;;		_LCDwrchar
  1571 ;;		_LCDwrstring
  1572 ;;		_OptMenu
  1573 ;; This function is called by:
  1574 ;;		_DefaultMenu
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text2
  1579  0008A4                     __ptext2:
  1580                           	opt stack 0
  1581  0008A4                     _PairMenu:
  1582                           	opt stack 24
  1583                           
  1584                           ;main.c: 392: static bit OnOrOff;
  1585                           ;main.c: 393: static bit CurrentSelect;
  1586                           ;main.c: 394: static bit Last;
  1587                           ;main.c: 395: unsigned char buffer;
  1588                           ;main.c: 397: OnOrOff=0;
  1589                           
  1590                           ;incstack = 0
  1591  0008A4  9474               	bcf	PairMenu@OnOrOff/(0+8),PairMenu@OnOrOff& (0+7),c
  1592                           
  1593                           ;main.c: 398: CurrentSelect=0;
  1594  0008A6  9074               	bcf	PairMenu@CurrentSelect/(0+8),PairMenu@CurrentSelect& (0+7),c
  1595                           
  1596                           ;main.c: 399: Last=0;
  1597  0008A8  9274               	bcf	PairMenu@Last/(0+8),PairMenu@Last& (0+7),c
  1598                           
  1599                           ;main.c: 400: LATBbits.LATB7=1;
  1600  0008AA  8E8A               	bsf	3978,7,c	;volatile
  1601                           
  1602                           ;main.c: 401: LATBbits.LATB1=1;
  1603  0008AC  828A               	bsf	3978,1,c	;volatile
  1604                           
  1605                           ;main.c: 402: LATBbits.LATB6=1;
  1606  0008AE  8C8A               	bsf	3978,6,c	;volatile
  1607                           
  1608                           ;main.c: 403: LATBbits.LATB0=1;
  1609  0008B0  808A               	bsf	3978,0,c	;volatile
  1610                           
  1611                           ;main.c: 404: LCDsetaddr(0x00);
  1612  0008B2  0E00               	movlw	0
  1613  0008B4  EC4C  F006         	call	_LCDsetaddr
  1614                           
  1615                           ;main.c: 405: LCDwrstring("All Voltages:/  ");
  1616  0008B8  0E8F               	movlw	low STR_14
  1617  0008BA  6E07               	movwf	LCDwrstring@string,c
  1618  0008BC  0E01               	movlw	high STR_14
  1619  0008BE  6E08               	movwf	LCDwrstring@string+1,c
  1620  0008C0  ECB5  F005         	call	_LCDwrstring	;wreg free
  1621                           
  1622                           ;main.c: 406: LCDsetaddr(0x40);
  1623  0008C4  0E40               	movlw	64
  1624  0008C6  EC4C  F006         	call	_LCDsetaddr
  1625                           
  1626                           ;main.c: 407: LCDwrstring("            MENU");
  1627  0008CA  0EB1               	movlw	low STR_15
  1628  0008CC  6E07               	movwf	LCDwrstring@string,c
  1629  0008CE  0E01               	movlw	high STR_15
  1630  0008D0  6E08               	movwf	LCDwrstring@string+1,c
  1631  0008D2  ECB5  F005         	call	_LCDwrstring	;wreg free
  1632  0008D6  D000               	goto	l1599
  1633  0008D8                     l1599:
  1634                           
  1635                           ;main.c: 409: if(INTCONbits.TMR0IF) {
  1636  0008D8  A4F2               	btfss	intcon,2,c	;volatile
  1637  0008DA  D041               	goto	l1633
  1638                           
  1639                           ;main.c: 410: if(CurrentSelect) {
  1640  0008DC  A074               	btfss	PairMenu@CurrentSelect/(0+8),PairMenu@CurrentSelect& (0+7),c
  1641  0008DE  D019               	goto	l1611
  1642                           
  1643                           ;main.c: 411: LCDsetaddr(0x4C);
  1644  0008E0  0E4C               	movlw	76
  1645  0008E2  EC4C  F006         	call	_LCDsetaddr
  1646                           
  1647                           ;main.c: 412: if(Last) {
  1648  0008E6  A274               	btfss	PairMenu@Last/(0+8),PairMenu@Last& (0+7),c
  1649  0008E8  D00D               	goto	l1609
  1650                           
  1651                           ;main.c: 413: LCDwrchar(0x02);
  1652  0008EA  0E02               	movlw	2
  1653  0008EC  EC5B  F006         	call	_LCDwrchar
  1654                           
  1655                           ;main.c: 414: LCDwrchar(0x03);
  1656  0008F0  0E03               	movlw	3
  1657  0008F2  EC5B  F006         	call	_LCDwrchar
  1658                           
  1659                           ;main.c: 415: LCDwrchar(0x04);
  1660  0008F6  0E04               	movlw	4
  1661  0008F8  EC5B  F006         	call	_LCDwrchar
  1662                           
  1663                           ;main.c: 416: LCDwrchar(0x05);
  1664  0008FC  0E05               	movlw	5
  1665  0008FE  EC5B  F006         	call	_LCDwrchar
  1666                           
  1667                           ;main.c: 417: }
  1668  000902  D02A               	goto	l1629
  1669  000904                     l1609:
  1670                           
  1671                           ;main.c: 418: else
  1672                           ;main.c: 419: LCDwrstring("MENU");
  1673  000904  0EBD               	movlw	low (STR_15+12)
  1674  000906  6E07               	movwf	LCDwrstring@string,c
  1675  000908  0E01               	movlw	high (STR_15+12)
  1676  00090A  6E08               	movwf	LCDwrstring@string+1,c
  1677  00090C  ECB5  F005         	call	_LCDwrstring	;wreg free
  1678                           
  1679                           ;main.c: 420: }
  1680  000910  D023               	goto	l1629
  1681  000912                     l1611:
  1682                           
  1683                           ;main.c: 421: else {
  1684                           ;main.c: 422: LCDsetaddr(0x0D);
  1685  000912  0E0D               	movlw	13
  1686  000914  EC4C  F006         	call	_LCDsetaddr
  1687                           
  1688                           ;main.c: 423: if(Last)
  1689  000918  A274               	btfss	PairMenu@Last/(0+8),PairMenu@Last& (0+7),c
  1690  00091A  D00F               	goto	l191
  1691                           
  1692                           ;main.c: 424: LCDwrchar(OnOrOff ? 0x01:0x06);
  1693  00091C  B474               	btfsc	PairMenu@OnOrOff/(0+8),PairMenu@OnOrOff& (0+7),c
  1694  00091E  D004               	goto	l1619
  1695  000920  0E00               	movlw	0
  1696  000922  6E48               	movwf	_PairMenu$618+1,c
  1697  000924  0E06               	movlw	6
  1698  000926  D003               	goto	L8
  1699  000928                     l1619:
  1700  000928  0E00               	movlw	0
  1701  00092A  6E48               	movwf	_PairMenu$618+1,c
  1702  00092C  0E01               	movlw	1
  1703  00092E                     L8:
  1704  00092E  6E47               	movwf	_PairMenu$618,c
  1705  000930  D000               	goto	l1621
  1706  000932                     l1621:
  1707  000932  5047               	movf	_PairMenu$618,w,c
  1708  000934  EC5B  F006         	call	_LCDwrchar
  1709  000938  D00F               	goto	l1629
  1710  00093A                     l191:
  1711                           
  1712                           ;main.c: 425: else
  1713                           ;main.c: 426: LCDwrchar(OnOrOff ? 0x00:'/');
  1714  00093A  B474               	btfsc	PairMenu@OnOrOff/(0+8),PairMenu@OnOrOff& (0+7),c
  1715  00093C  D004               	goto	l1625
  1716  00093E  0E00               	movlw	0
  1717  000940  6E4A               	movwf	_PairMenu$619+1,c
  1718  000942  0E2F               	movlw	47
  1719  000944  D003               	goto	L9
  1720  000946                     l1625:
  1721  000946  0E00               	movlw	0
  1722  000948  6E4A               	movwf	_PairMenu$619+1,c
  1723  00094A  0E00               	movlw	0
  1724  00094C                     L9:
  1725  00094C  6E49               	movwf	_PairMenu$619,c
  1726  00094E  D000               	goto	l1627
  1727  000950                     l1627:
  1728  000950  5049               	movf	_PairMenu$619,w,c
  1729  000952  EC5B  F006         	call	_LCDwrchar
  1730  000956  D000               	goto	l1629
  1731  000958                     l1629:
  1732                           
  1733                           ;main.c: 427: }
  1734                           ;main.c: 428: Last=~Last;
  1735  000958  7274               	btg	PairMenu@Last/(0+8),PairMenu@Last& (0+7),c
  1736                           
  1737                           ;main.c: 429: INTCONbits.TMR0IF=0;
  1738  00095A  94F2               	bcf	intcon,2,c	;volatile
  1739  00095C  D000               	goto	l1633
  1740  00095E                     l1633:
  1741                           
  1742                           ;main.c: 430: }
  1743                           ;main.c: 431: if(PORTAbits.RA4 || PORTAbits.RA1) {
  1744  00095E  B880               	btfsc	3968,4,c	;volatile
  1745  000960  D002               	goto	l1637
  1746  000962  A280               	btfss	3968,1,c	;volatile
  1747  000964  D02E               	goto	l201
  1748  000966                     l1637:
  1749                           
  1750                           ;main.c: 432: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
  1751  000966  0E20               	movlw	32
  1752  000968  6E46               	movwf	??_PairMenu& (0+255),c
  1753  00096A  0E2A               	movlw	42
  1754  00096C                     u1837:
  1755  00096C  2EE8               	decfsz	wreg,f,c
  1756  00096E  D7FE               	goto	u1837
  1757  000970  2E46               	decfsz	??_PairMenu& (0+255),f,c
  1758  000972  D7FC               	goto	u1837
  1759                           
  1760                           ;main.c: 433: if(PORTAbits.RA4 || PORTAbits.RA1) {
  1761  000974  B880               	btfsc	3968,4,c	;volatile
  1762  000976  D002               	goto	l206
  1763  000978  A280               	btfss	3968,1,c	;volatile
  1764  00097A  D020               	goto	l213
  1765  00097C                     l206:
  1766                           
  1767                           ;main.c: 434: if(CurrentSelect) {
  1768  00097C  A074               	btfss	PairMenu@CurrentSelect/(0+8),PairMenu@CurrentSelect& (0+7),c
  1769  00097E  D00A               	goto	l1647
  1770                           
  1771                           ;main.c: 435: LCDsetaddr(0x4C);
  1772  000980  0E4C               	movlw	76
  1773  000982  EC4C  F006         	call	_LCDsetaddr
  1774                           
  1775                           ;main.c: 436: LCDwrstring("MENU");
  1776  000986  0EBD               	movlw	low (STR_15+12)
  1777  000988  6E07               	movwf	LCDwrstring@string,c
  1778  00098A  0E01               	movlw	high (STR_15+12)
  1779  00098C  6E08               	movwf	LCDwrstring@string+1,c
  1780  00098E  ECB5  F005         	call	_LCDwrstring	;wreg free
  1781                           
  1782                           ;main.c: 437: }
  1783  000992  D012               	goto	l1657
  1784  000994                     l1647:
  1785                           
  1786                           ;main.c: 438: else {
  1787                           ;main.c: 439: LCDsetaddr(0x0D);
  1788  000994  0E0D               	movlw	13
  1789  000996  EC4C  F006         	call	_LCDsetaddr
  1790                           
  1791                           ;main.c: 440: LCDwrchar(OnOrOff ? 0x00:'/');
  1792  00099A  B474               	btfsc	PairMenu@OnOrOff/(0+8),PairMenu@OnOrOff& (0+7),c
  1793  00099C  D004               	goto	l1653
  1794  00099E  0E00               	movlw	0
  1795  0009A0  6E4C               	movwf	_PairMenu$621+1,c
  1796  0009A2  0E2F               	movlw	47
  1797  0009A4  D003               	goto	L10
  1798  0009A6                     l1653:
  1799  0009A6  0E00               	movlw	0
  1800  0009A8  6E4C               	movwf	_PairMenu$621+1,c
  1801  0009AA  0E00               	movlw	0
  1802  0009AC                     L10:
  1803  0009AC  6E4B               	movwf	_PairMenu$621,c
  1804  0009AE  D000               	goto	l1655
  1805  0009B0                     l1655:
  1806  0009B0  504B               	movf	_PairMenu$621,w,c
  1807  0009B2  EC5B  F006         	call	_LCDwrchar
  1808  0009B6  D000               	goto	l1657
  1809  0009B8                     l1657:
  1810                           
  1811                           ;main.c: 441: }
  1812                           ;main.c: 443: CurrentSelect=~CurrentSelect;
  1813  0009B8  7074               	btg	PairMenu@CurrentSelect/(0+8),PairMenu@CurrentSelect& (0+7),c
  1814                           
  1815                           ;main.c: 444: }
  1816                           ;main.c: 445: while(PORTAbits.RA4 || PORTAbits.RA1);
  1817  0009BA  D000               	goto	l213
  1818  0009BC                     l213:
  1819  0009BC  A880               	btfss	3968,4,c	;volatile
  1820  0009BE  B280               	btfsc	3968,1,c	;volatile
  1821  0009C0  D7FD               	goto	l213
  1822  0009C2                     l201:
  1823                           
  1824                           ;main.c: 446: }
  1825                           ;main.c: 447: if(PORTAbits.RA0) {
  1826  0009C2  A080               	btfss	3968,0,c	;volatile
  1827  0009C4  D789               	goto	l1599
  1828                           
  1829                           ;main.c: 448: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
  1830  0009C6  0E20               	movlw	32
  1831  0009C8  6E46               	movwf	??_PairMenu& (0+255),c
  1832  0009CA  0E2A               	movlw	42
  1833  0009CC                     u1847:
  1834  0009CC  2EE8               	decfsz	wreg,f,c
  1835  0009CE  D7FE               	goto	u1847
  1836  0009D0  2E46               	decfsz	??_PairMenu& (0+255),f,c
  1837  0009D2  D7FC               	goto	u1847
  1838                           
  1839                           ;main.c: 449: if(PORTAbits.RA0) {
  1840  0009D4  A080               	btfss	3968,0,c	;volatile
  1841  0009D6  D780               	goto	l1599
  1842                           
  1843                           ;main.c: 450: LCDsetaddr(0x0D);
  1844  0009D8  0E0D               	movlw	13
  1845  0009DA  EC4C  F006         	call	_LCDsetaddr
  1846                           
  1847                           ;main.c: 451: if(CurrentSelect) {
  1848  0009DE  B074               	btfsc	PairMenu@CurrentSelect/(0+8),PairMenu@CurrentSelect& (0+7),c
  1849  0009E0  D002               	goto	l219
  1850  0009E2  D037               	goto	l218
  1851                           
  1852                           ;main.c: 452: while(PORTAbits.RA0);
  1853  0009E4  D000               	goto	l219
  1854  0009E6                     l219:
  1855  0009E6  B080               	btfsc	3968,0,c	;volatile
  1856  0009E8  D7FE               	goto	l219
  1857                           
  1858                           ;main.c: 453: buffer=OptMenu(1);
  1859  0009EA  0E01               	movlw	1
  1860  0009EC  EC36  F003         	call	_OptMenu
  1861  0009F0  6E53               	movwf	PairMenu@buffer,c
  1862                           
  1863                           ;main.c: 454: if(buffer==3) {
  1864  0009F2  0E03               	movlw	3
  1865  0009F4  1853               	xorwf	PairMenu@buffer,w,c
  1866  0009F6  A4D8               	btfss	status,2,c
  1867  0009F8  D005               	goto	l1677
  1868                           
  1869                           ;main.c: 455: LATBbits.LATB7=1;
  1870  0009FA  8E8A               	bsf	3978,7,c	;volatile
  1871                           
  1872                           ;main.c: 456: LATBbits.LATB1=1;
  1873  0009FC  828A               	bsf	3978,1,c	;volatile
  1874                           
  1875                           ;main.c: 457: LATBbits.LATB6=1;
  1876  0009FE  8C8A               	bsf	3978,6,c	;volatile
  1877                           
  1878                           ;main.c: 458: LATBbits.LATB0=1;
  1879  000A00  808A               	bsf	3978,0,c	;volatile
  1880                           
  1881                           ;main.c: 459: return;
  1882  000A02  D050               	goto	l223
  1883  000A04                     l1677:
  1884                           
  1885                           ;main.c: 460: }
  1886                           ;main.c: 461: LCDsetaddr(0x00);
  1887  000A04  0E00               	movlw	0
  1888  000A06  EC4C  F006         	call	_LCDsetaddr
  1889                           
  1890                           ;main.c: 462: LCDwrstring("All Voltages:");
  1891  000A0A  0EE3               	movlw	low STR_18
  1892  000A0C  6E07               	movwf	LCDwrstring@string,c
  1893  000A0E  0E01               	movlw	high STR_18
  1894  000A10  6E08               	movwf	LCDwrstring@string+1,c
  1895  000A12  ECB5  F005         	call	_LCDwrstring	;wreg free
  1896                           
  1897                           ;main.c: 463: LCDwrchar(OnOrOff ? 0x00:'/');
  1898  000A16  B474               	btfsc	PairMenu@OnOrOff/(0+8),PairMenu@OnOrOff& (0+7),c
  1899  000A18  D004               	goto	l1685
  1900  000A1A  0E00               	movlw	0
  1901  000A1C  6E4E               	movwf	_PairMenu$623+1,c
  1902  000A1E  0E2F               	movlw	47
  1903  000A20  D003               	goto	L11
  1904  000A22                     l1685:
  1905  000A22  0E00               	movlw	0
  1906  000A24  6E4E               	movwf	_PairMenu$623+1,c
  1907  000A26  0E00               	movlw	0
  1908  000A28                     L11:
  1909  000A28  6E4D               	movwf	_PairMenu$623,c
  1910  000A2A  D000               	goto	l1687
  1911  000A2C                     l1687:
  1912  000A2C  504D               	movf	_PairMenu$623,w,c
  1913  000A2E  EC5B  F006         	call	_LCDwrchar
  1914                           
  1915                           ;main.c: 464: LCDwrstring("  ");
  1916  000A32  0E8C               	movlw	low (STR_13+14)
  1917  000A34  6E07               	movwf	LCDwrstring@string,c
  1918  000A36  0E01               	movlw	high (STR_13+14)
  1919  000A38  6E08               	movwf	LCDwrstring@string+1,c
  1920  000A3A  ECB5  F005         	call	_LCDwrstring	;wreg free
  1921                           
  1922                           ;main.c: 465: LCDsetaddr(0x40);
  1923  000A3E  0E40               	movlw	64
  1924  000A40  EC4C  F006         	call	_LCDsetaddr
  1925                           
  1926                           ;main.c: 466: LCDwrstring("            MENU");
  1927  000A44  0EB1               	movlw	low STR_15
  1928  000A46  6E07               	movwf	LCDwrstring@string,c
  1929  000A48  0E01               	movlw	high STR_15
  1930  000A4A  6E08               	movwf	LCDwrstring@string+1,c
  1931  000A4C  ECB5  F005         	call	_LCDwrstring	;wreg free
  1932                           
  1933                           ;main.c: 468: }
  1934  000A50  D025               	goto	l239
  1935  000A52                     l218:
  1936                           
  1937                           ;main.c: 469: else {
  1938                           ;main.c: 470: LATBbits.LATB7=~LATBbits.LATB7;
  1939  000A52  7E8A               	btg	3978,7,c	;volatile
  1940                           
  1941                           ;main.c: 471: LATBbits.LATB1=~LATBbits.LATB1;
  1942  000A54  728A               	btg	3978,1,c	;volatile
  1943                           
  1944                           ;main.c: 472: LATBbits.LATB6=~LATBbits.LATB6;
  1945  000A56  7C8A               	btg	3978,6,c	;volatile
  1946                           
  1947                           ;main.c: 473: LATBbits.LATB0=~LATBbits.LATB0;
  1948  000A58  708A               	btg	3978,0,c	;volatile
  1949                           
  1950                           ;main.c: 474: OnOrOff=~OnOrOff;
  1951  000A5A  7474               	btg	PairMenu@OnOrOff/(0+8),PairMenu@OnOrOff& (0+7),c
  1952                           
  1953                           ;main.c: 475: if(Last)
  1954  000A5C  A274               	btfss	PairMenu@Last/(0+8),PairMenu@Last& (0+7),c
  1955  000A5E  D00F               	goto	l229
  1956                           
  1957                           ;main.c: 476: LCDwrchar(OnOrOff ? 0x01:0x06);
  1958  000A60  B474               	btfsc	PairMenu@OnOrOff/(0+8),PairMenu@OnOrOff& (0+7),c
  1959  000A62  D004               	goto	l1699
  1960  000A64  0E00               	movlw	0
  1961  000A66  6E50               	movwf	_PairMenu$626+1,c
  1962  000A68  0E06               	movlw	6
  1963  000A6A  D003               	goto	L12
  1964  000A6C                     l1699:
  1965  000A6C  0E00               	movlw	0
  1966  000A6E  6E50               	movwf	_PairMenu$626+1,c
  1967  000A70  0E01               	movlw	1
  1968  000A72                     L12:
  1969  000A72  6E4F               	movwf	_PairMenu$626,c
  1970  000A74  D000               	goto	l1701
  1971  000A76                     l1701:
  1972  000A76  504F               	movf	_PairMenu$626,w,c
  1973  000A78  EC5B  F006         	call	_LCDwrchar
  1974  000A7C  D00F               	goto	l239
  1975  000A7E                     l229:
  1976                           
  1977                           ;main.c: 477: else
  1978                           ;main.c: 478: LCDwrchar(OnOrOff ? 0x00:'/');
  1979  000A7E  B474               	btfsc	PairMenu@OnOrOff/(0+8),PairMenu@OnOrOff& (0+7),c
  1980  000A80  D004               	goto	l1705
  1981  000A82  0E00               	movlw	0
  1982  000A84  6E52               	movwf	_PairMenu$627+1,c
  1983  000A86  0E2F               	movlw	47
  1984  000A88  D003               	goto	L13
  1985  000A8A                     l1705:
  1986  000A8A  0E00               	movlw	0
  1987  000A8C  6E52               	movwf	_PairMenu$627+1,c
  1988  000A8E  0E00               	movlw	0
  1989  000A90                     L13:
  1990  000A90  6E51               	movwf	_PairMenu$627,c
  1991  000A92  D000               	goto	l1707
  1992  000A94                     l1707:
  1993  000A94  5051               	movf	_PairMenu$627,w,c
  1994  000A96  EC5B  F006         	call	_LCDwrchar
  1995                           
  1996                           ;main.c: 479: }
  1997                           ;main.c: 480: while(PORTAbits.RA0);
  1998  000A9A  D000               	goto	l239
  1999  000A9C                     l239:
  2000  000A9C  A080               	btfss	3968,0,c	;volatile
  2001  000A9E  D71C               	goto	l1599
  2002  000AA0  D7FD               	goto	l239
  2003  000AA2  D71A               	goto	l1599
  2004  000AA4                     l223:
  2005  000AA4  0012               	return		;funcret
  2006  000AA6                     __end_of_PairMenu:
  2007                           	opt stack 0
  2008                           tblptru	equ	0xFF8
  2009                           tblptrh	equ	0xFF7
  2010                           tblptrl	equ	0xFF6
  2011                           tablat	equ	0xFF5
  2012                           prodh	equ	0xFF4
  2013                           prodl	equ	0xFF3
  2014                           intcon	equ	0xFF2
  2015                           postinc0	equ	0xFEE
  2016                           wreg	equ	0xFE8
  2017                           indf1	equ	0xFE7
  2018                           postdec1	equ	0xFE5
  2019                           plusw1	equ	0xFE3
  2020                           fsr1h	equ	0xFE2
  2021                           fsr1l	equ	0xFE1
  2022                           indf2	equ	0xFDF
  2023                           plusw2	equ	0xFDB
  2024                           fsr2h	equ	0xFDA
  2025                           fsr2l	equ	0xFD9
  2026                           status	equ	0xFD8
  2027                           
  2028 ;; *************** function _OptMenu *****************
  2029 ;; Defined at:
  2030 ;;		line 291 in file "main.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  z               1    wreg     unsigned char 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  z               1   26[COMRAM] unsigned char 
  2035 ;;  Menu           40   29[COMRAM] struct MenuDisplay
  2036 ;;  AlternateDis   13   11[COMRAM] const unsigned char [13]
  2037 ;;  x               2   27[COMRAM] int 
  2038 ;;  update          2   24[COMRAM] int 
  2039 ;;  y               2    0        int 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      unsigned char 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0
  2049 ;;      Params:         0       0
  2050 ;;      Locals:        58       0
  2051 ;;      Temps:          2       0
  2052 ;;      Totals:        60       0
  2053 ;;Total ram usage:       60 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    4
  2056 ;; This function calls:
  2057 ;;		_LCDsetaddr
  2058 ;;		_LCDwrchar
  2059 ;;		_LCDwrcmd
  2060 ;;		_LCDwrstring
  2061 ;;		_StandbyMenu
  2062 ;;		___wmul
  2063 ;; This function is called by:
  2064 ;;		_DefaultMenu
  2065 ;;		_PairMenu
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text3
  2070  00066C                     __ptext3:
  2071                           	opt stack 0
  2072  00066C                     _OptMenu:
  2073                           	opt stack 24
  2074                           
  2075                           ;incstack = 0
  2076                           ;OptMenu@z stored from wreg
  2077  00066C  6E1B               	movwf	OptMenu@z,c
  2078                           
  2079                           ;main.c: 296: int x,y;
  2080                           ;main.c: 297: int update=1;
  2081  00066E  0E00               	movlw	0
  2082  000670  6E1A               	movwf	OptMenu@update+1,c
  2083  000672  0E01               	movlw	1
  2084  000674  6E19               	movwf	OptMenu@update,c
  2085                           
  2086                           ;main.c: 298: const unsigned char AlternateDisplay[]="INDIV On/Off";
  2087  000676  0E71               	movlw	low OptMenu@F2834
  2088  000678  6EF6               	movwf	tblptrl,c
  2089  00067A                     	if	1	;There is more than 1 active tblptr byte
  2090  00067A  0E01               	movlw	high OptMenu@F2834
  2091  00067C  6EF7               	movwf	tblptrh,c
  2092  00067E                     	endif
  2093  00067E                     	if	0	;There are less than 3 active tblptr bytes
  2094  00067E                     	endif
  2095  00067E  EE20  F00C         	lfsr	2,OptMenu@AlternateDisplay
  2096  000682  0E0C               	movlw	12
  2097  000684                     u1030:
  2098  000684  0009               	tblrd		*+
  2099  000686  CFF5 FFDE          	movff	tablat,postinc2
  2100  00068A  06E8               	decf	wreg,f,c
  2101  00068C  E2FB               	bc	u1030
  2102                           
  2103                           ;main.c: 300: struct MenuDisplay {
  2104                           ;main.c: 301: unsigned char CurrentItem;
  2105                           ;main.c: 302: unsigned char Items[3][13];
  2106                           ;main.c: 304: };
  2107                           ;main.c: 305: struct MenuDisplay Menu ={
  2108                           ;main.c: 306: 0,
  2109                           ;main.c: 307: "Standby",
  2110                           ;main.c: 308: "All On/Off",
  2111                           ;main.c: 309: "Back"
  2112                           ;main.c: 310: };
  2113  00068E  EE20  F080         	lfsr	2,OptMenu@F2840
  2114  000692  EE10  F01E         	lfsr	1,OptMenu@Menu
  2115  000696  0E27               	movlw	39
  2116  000698                     u1041:
  2117  000698  CFDB FFE3          	movff	plusw2,plusw1
  2118  00069C  06E8               	decf	wreg,f,c
  2119  00069E  E2FC               	bc	u1041
  2120                           
  2121                           ;main.c: 312: if(z)
  2122  0006A0  501B               	movf	OptMenu@z,w,c
  2123  0006A2  B4D8               	btfsc	status,2,c
  2124  0006A4  D026               	goto	l1495
  2125                           
  2126                           ;main.c: 313: for(x=0;x<12;x++)
  2127  0006A6  0E00               	movlw	0
  2128  0006A8  6E1D               	movwf	OptMenu@x+1,c
  2129  0006AA  0E00               	movlw	0
  2130  0006AC  6E1C               	movwf	OptMenu@x,c
  2131  0006AE                     l1485:
  2132  0006AE  BE1D               	btfsc	OptMenu@x+1,7,c
  2133  0006B0  D008               	goto	l1489
  2134  0006B2  501D               	movf	OptMenu@x+1,w,c
  2135  0006B4  E11E               	bnz	l1495
  2136  0006B6  0E0C               	movlw	12
  2137  0006B8  5C1C               	subwf	OptMenu@x,w,c
  2138  0006BA  B0D8               	btfsc	status,0,c
  2139  0006BC  D01A               	goto	l1495
  2140  0006BE  D001               	goto	l1489
  2141  0006C0  D018               	goto	l1495
  2142  0006C2                     l1489:
  2143                           
  2144                           ;main.c: 314: Menu.Items[1][x]=AlternateDisplay[x];
  2145  0006C2  0E0C               	movlw	low OptMenu@AlternateDisplay
  2146  0006C4  241C               	addwf	OptMenu@x,w,c
  2147  0006C6  6ED9               	movwf	fsr2l,c
  2148  0006C8  0E00               	movlw	high OptMenu@AlternateDisplay
  2149  0006CA  201D               	addwfc	OptMenu@x+1,w,c
  2150  0006CC  6EDA               	movwf	fsr2h,c
  2151  0006CE  0E0E               	movlw	14
  2152  0006D0  241C               	addwf	OptMenu@x,w,c
  2153  0006D2  6E0A               	movwf	??_OptMenu& (0+255),c
  2154  0006D4  0E00               	movlw	0
  2155  0006D6  201D               	addwfc	OptMenu@x+1,w,c
  2156  0006D8  6E0B               	movwf	(??_OptMenu+1)& (0+255),c
  2157  0006DA  0E1E               	movlw	low OptMenu@Menu
  2158  0006DC  240A               	addwf	??_OptMenu,w,c
  2159  0006DE  6EE1               	movwf	fsr1l,c
  2160  0006E0  0E00               	movlw	high OptMenu@Menu
  2161  0006E2  200B               	addwfc	??_OptMenu+1,w,c
  2162  0006E4  6EE2               	movwf	fsr1h,c
  2163  0006E6  CFDF FFE7          	movff	indf2,indf1
  2164  0006EA  4A1C               	infsnz	OptMenu@x,f,c
  2165  0006EC  2A1D               	incf	OptMenu@x+1,f,c
  2166  0006EE  D7DF               	goto	l1485
  2167  0006F0  D000               	goto	l1495
  2168  0006F2                     l1495:
  2169                           
  2170                           ;main.c: 316: LCDwrcmd(0b00000001);
  2171  0006F2  0E01               	movlw	1
  2172  0006F4  EC69  F006         	call	_LCDwrcmd
  2173                           
  2174                           ;main.c: 317: _delay((unsigned long)((2)*(0x7A1200/4000.0)));
  2175  0006F8  0E06               	movlw	6
  2176  0006FA  6E0A               	movwf	??_OptMenu& (0+255),c
  2177  0006FC  0E30               	movlw	48
  2178  0006FE                     u1857:
  2179  0006FE  2EE8               	decfsz	wreg,f,c
  2180  000700  D7FE               	goto	u1857
  2181  000702  2E0A               	decfsz	??_OptMenu& (0+255),f,c
  2182  000704  D7FC               	goto	u1857
  2183  000706  D000               	nop2	
  2184  000708  D000               	goto	l1499
  2185  00070A                     l1499:
  2186                           
  2187                           ;main.c: 320: {
  2188                           ;main.c: 321: if(update){
  2189  00070A  5019               	movf	OptMenu@update,w,c
  2190  00070C  101A               	iorwf	OptMenu@update+1,w,c
  2191  00070E  B4D8               	btfsc	status,2,c
  2192  000710  D062               	goto	l1529
  2193                           
  2194                           ;main.c: 322: LCDsetaddr(0x00);
  2195  000712  0E00               	movlw	0
  2196  000714  EC4C  F006         	call	_LCDsetaddr
  2197                           
  2198                           ;main.c: 323: LCDwrchar(Menu.CurrentItem+1+0x30);
  2199  000718  501E               	movf	OptMenu@Menu,w,c
  2200  00071A  0F31               	addlw	49
  2201  00071C  EC5B  F006         	call	_LCDwrchar
  2202                           
  2203                           ;main.c: 324: LCDwrstring(": ");
  2204  000720  0EF1               	movlw	low STR_9
  2205  000722  6E07               	movwf	LCDwrstring@string,c
  2206  000724  0E01               	movlw	high STR_9
  2207  000726  6E08               	movwf	LCDwrstring@string+1,c
  2208  000728  ECB5  F005         	call	_LCDwrstring	;wreg free
  2209                           
  2210                           ;main.c: 325: LCDwrstring(Menu.Items[Menu.CurrentItem]);
  2211  00072C  501E               	movf	OptMenu@Menu,w,c
  2212  00072E  0D0D               	mullw	13
  2213  000730  0E01               	movlw	1
  2214  000732  26F3               	addwf	prodl,f,c
  2215  000734  0E00               	movlw	0
  2216  000736  22F4               	addwfc	prodh,f,c
  2217  000738  0E1E               	movlw	low OptMenu@Menu
  2218  00073A  24F3               	addwf	prodl,w,c
  2219  00073C  6E07               	movwf	LCDwrstring@string,c
  2220  00073E  0E00               	movlw	high OptMenu@Menu
  2221  000740  20F4               	addwfc	prodh,w,c
  2222  000742  6E08               	movwf	LCDwrstring@string+1,c
  2223  000744  ECB5  F005         	call	_LCDwrstring	;wreg free
  2224                           
  2225                           ;main.c: 326: LCDwrstring("        ");
  2226  000748  0E86               	movlw	low (STR_13+8)
  2227  00074A  6E07               	movwf	LCDwrstring@string,c
  2228  00074C  0E01               	movlw	high (STR_13+8)
  2229  00074E  6E08               	movwf	LCDwrstring@string+1,c
  2230  000750  ECB5  F005         	call	_LCDwrstring	;wreg free
  2231                           
  2232                           ;main.c: 327: LCDsetaddr(0x0F);
  2233  000754  0E0F               	movlw	15
  2234  000756  EC4C  F006         	call	_LCDsetaddr
  2235                           
  2236                           ;main.c: 328: LCDwrchar(0x7F);
  2237  00075A  0E7F               	movlw	127
  2238  00075C  EC5B  F006         	call	_LCDwrchar
  2239                           
  2240                           ;main.c: 330: LCDsetaddr(0x40);
  2241  000760  0E40               	movlw	64
  2242  000762  EC4C  F006         	call	_LCDsetaddr
  2243                           
  2244                           ;main.c: 331: if(Menu.CurrentItem<2) {
  2245  000766  0E02               	movlw	2
  2246  000768  601E               	cpfslt	OptMenu@Menu,c
  2247  00076A  D029               	goto	l1525
  2248                           
  2249                           ;main.c: 332: LCDwrchar(Menu.CurrentItem+2+0x30);
  2250  00076C  501E               	movf	OptMenu@Menu,w,c
  2251  00076E  0F32               	addlw	50
  2252  000770  EC5B  F006         	call	_LCDwrchar
  2253                           
  2254                           ;main.c: 333: LCDwrstring(": ");
  2255  000774  0EF1               	movlw	low STR_9
  2256  000776  6E07               	movwf	LCDwrstring@string,c
  2257  000778  0E01               	movlw	high STR_9
  2258  00077A  6E08               	movwf	LCDwrstring@string+1,c
  2259  00077C  ECB5  F005         	call	_LCDwrstring	;wreg free
  2260                           
  2261                           ;main.c: 334: LCDwrstring(Menu.Items[Menu.CurrentItem+1]);
  2262  000780  0E01               	movlw	1
  2263  000782  241E               	addwf	OptMenu@Menu,w,c
  2264  000784  6E01               	movwf	___wmul@multiplier,c
  2265  000786  6A02               	clrf	___wmul@multiplier+1,c
  2266  000788  0E00               	movlw	0
  2267  00078A  2202               	addwfc	___wmul@multiplier+1,f,c
  2268  00078C  0E00               	movlw	0
  2269  00078E  6E04               	movwf	___wmul@multiplicand+1,c
  2270  000790  0E0D               	movlw	13
  2271  000792  6E03               	movwf	___wmul@multiplicand,c
  2272  000794  EC38  F006         	call	___wmul	;wreg free
  2273  000798  0E01               	movlw	1
  2274  00079A  2601               	addwf	?___wmul,f,c
  2275  00079C  0E00               	movlw	0
  2276  00079E  2202               	addwfc	?___wmul+1,f,c
  2277  0007A0  0E1E               	movlw	low OptMenu@Menu
  2278  0007A2  2401               	addwf	?___wmul,w,c
  2279  0007A4  6E07               	movwf	LCDwrstring@string,c
  2280  0007A6  0E00               	movlw	high OptMenu@Menu
  2281  0007A8  2002               	addwfc	?___wmul+1,w,c
  2282  0007AA  6E08               	movwf	LCDwrstring@string+1,c
  2283  0007AC  ECB5  F005         	call	_LCDwrstring	;wreg free
  2284                           
  2285                           ;main.c: 335: LCDwrstring("        ");
  2286  0007B0  0E86               	movlw	low (STR_13+8)
  2287  0007B2  6E07               	movwf	LCDwrstring@string,c
  2288  0007B4  0E01               	movlw	high (STR_13+8)
  2289  0007B6  6E08               	movwf	LCDwrstring@string+1,c
  2290  0007B8  ECB5  F005         	call	_LCDwrstring	;wreg free
  2291                           
  2292                           ;main.c: 336: }
  2293  0007BC  D007               	goto	l1527
  2294  0007BE                     l1525:
  2295                           
  2296                           ;main.c: 337: else
  2297                           ;main.c: 338: LCDwrstring("                ");
  2298  0007BE  0E7E               	movlw	low STR_13
  2299  0007C0  6E07               	movwf	LCDwrstring@string,c
  2300  0007C2  0E01               	movlw	high STR_13
  2301  0007C4  6E08               	movwf	LCDwrstring@string+1,c
  2302  0007C6  ECB5  F005         	call	_LCDwrstring	;wreg free
  2303  0007CA  D000               	goto	l1527
  2304  0007CC                     l1527:
  2305                           
  2306                           ;main.c: 339: update=0;
  2307  0007CC  0E00               	movlw	0
  2308  0007CE  6E1A               	movwf	OptMenu@update+1,c
  2309  0007D0  0E00               	movlw	0
  2310  0007D2  6E19               	movwf	OptMenu@update,c
  2311  0007D4  D000               	goto	l1529
  2312  0007D6                     l1529:
  2313                           
  2314                           ;main.c: 340: }
  2315                           ;main.c: 341: if(PORTAbits.RA4){
  2316  0007D6  A880               	btfss	3968,4,c	;volatile
  2317  0007D8  D01B               	goto	l148
  2318                           
  2319                           ;main.c: 342: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
  2320  0007DA  0E20               	movlw	32
  2321  0007DC  6E0A               	movwf	??_OptMenu& (0+255),c
  2322  0007DE  0E2A               	movlw	42
  2323  0007E0                     u1867:
  2324  0007E0  2EE8               	decfsz	wreg,f,c
  2325  0007E2  D7FE               	goto	u1867
  2326  0007E4  2E0A               	decfsz	??_OptMenu& (0+255),f,c
  2327  0007E6  D7FC               	goto	u1867
  2328                           
  2329                           ;main.c: 343: if(PORTAbits.RA4) {
  2330  0007E8  A880               	btfss	3968,4,c	;volatile
  2331  0007EA  D012               	goto	l148
  2332                           
  2333                           ;main.c: 344: if(Menu.CurrentItem==2)
  2334  0007EC  0E02               	movlw	2
  2335  0007EE  181E               	xorwf	OptMenu@Menu,w,c
  2336  0007F0  A4D8               	btfss	status,2,c
  2337  0007F2  D003               	goto	l1539
  2338                           
  2339                           ;main.c: 345: Menu.CurrentItem=0;
  2340  0007F4  0E00               	movlw	0
  2341  0007F6  6E1E               	movwf	OptMenu@Menu,c
  2342  0007F8  D002               	goto	l1541
  2343  0007FA                     l1539:
  2344                           
  2345                           ;main.c: 346: else
  2346                           ;main.c: 347: Menu.CurrentItem++;
  2347  0007FA  2A1E               	incf	OptMenu@Menu,f,c
  2348  0007FC  D000               	goto	l1541
  2349  0007FE                     l1541:
  2350                           
  2351                           ;main.c: 348: update=1;
  2352  0007FE  0E00               	movlw	0
  2353  000800  6E1A               	movwf	OptMenu@update+1,c
  2354  000802  0E01               	movlw	1
  2355  000804  6E19               	movwf	OptMenu@update,c
  2356                           
  2357                           ;main.c: 349: while(PORTAbits.RA4);
  2358  000806  D000               	goto	l152
  2359  000808                     l152:
  2360  000808  A880               	btfss	3968,4,c	;volatile
  2361  00080A  D002               	goto	l148
  2362  00080C  D7FD               	goto	l152
  2363  00080E  D000               	goto	l148
  2364  000810                     l148:
  2365                           
  2366                           ;main.c: 350: }
  2367                           ;main.c: 351: }
  2368                           ;main.c: 352: if(PORTAbits.RA1){
  2369  000810  A280               	btfss	3968,1,c	;volatile
  2370  000812  D01A               	goto	l155
  2371                           
  2372                           ;main.c: 353: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
  2373  000814  0E20               	movlw	32
  2374  000816  6E0A               	movwf	??_OptMenu& (0+255),c
  2375  000818  0E2A               	movlw	42
  2376  00081A                     u1877:
  2377  00081A  2EE8               	decfsz	wreg,f,c
  2378  00081C  D7FE               	goto	u1877
  2379  00081E  2E0A               	decfsz	??_OptMenu& (0+255),f,c
  2380  000820  D7FC               	goto	u1877
  2381                           
  2382                           ;main.c: 354: if(PORTAbits.RA1) {
  2383  000822  A280               	btfss	3968,1,c	;volatile
  2384  000824  D011               	goto	l155
  2385                           
  2386                           ;main.c: 355: if(Menu.CurrentItem==0)
  2387  000826  501E               	movf	OptMenu@Menu,w,c
  2388  000828  A4D8               	btfss	status,2,c
  2389  00082A  D003               	goto	l1551
  2390                           
  2391                           ;main.c: 356: Menu.CurrentItem=2;
  2392  00082C  0E02               	movlw	2
  2393  00082E  6E1E               	movwf	OptMenu@Menu,c
  2394  000830  D002               	goto	l1553
  2395  000832                     l1551:
  2396                           
  2397                           ;main.c: 357: else
  2398                           ;main.c: 358: Menu.CurrentItem--;
  2399  000832  061E               	decf	OptMenu@Menu,f,c
  2400  000834  D000               	goto	l1553
  2401  000836                     l1553:
  2402                           
  2403                           ;main.c: 359: update=1;
  2404  000836  0E00               	movlw	0
  2405  000838  6E1A               	movwf	OptMenu@update+1,c
  2406  00083A  0E01               	movlw	1
  2407  00083C  6E19               	movwf	OptMenu@update,c
  2408                           
  2409                           ;main.c: 360: while(PORTAbits.RA1);
  2410  00083E  D000               	goto	l159
  2411  000840                     l159:
  2412  000840  A280               	btfss	3968,1,c	;volatile
  2413  000842  D002               	goto	l155
  2414  000844  D7FD               	goto	l159
  2415  000846  D000               	goto	l155
  2416  000848                     l155:
  2417                           
  2418                           ;main.c: 361: }
  2419                           ;main.c: 362: }
  2420                           ;main.c: 363: if(PORTAbits.RA0){
  2421  000848  A080               	btfss	3968,0,c	;volatile
  2422  00084A  D75F               	goto	l1499
  2423                           
  2424                           ;main.c: 364: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
  2425  00084C  0E20               	movlw	32
  2426  00084E  6E0A               	movwf	??_OptMenu& (0+255),c
  2427  000850  0E2A               	movlw	42
  2428  000852                     u1887:
  2429  000852  2EE8               	decfsz	wreg,f,c
  2430  000854  D7FE               	goto	u1887
  2431  000856  2E0A               	decfsz	??_OptMenu& (0+255),f,c
  2432  000858  D7FC               	goto	u1887
  2433                           
  2434                           ;main.c: 365: if(PORTAbits.RA0) {
  2435  00085A  B080               	btfsc	3968,0,c	;volatile
  2436  00085C  D002               	goto	l164
  2437  00085E  D755               	goto	l1499
  2438                           
  2439                           ;main.c: 366: while(PORTAbits.RA0);
  2440  000860  D000               	goto	l164
  2441  000862                     l164:
  2442  000862  A080               	btfss	3968,0,c	;volatile
  2443  000864  D012               	goto	l1585
  2444  000866  D7FD               	goto	l164
  2445                           
  2446                           ;main.c: 367: switch(Menu.CurrentItem) {
  2447  000868  D010               	goto	l1585
  2448  00086A                     l1561:
  2449                           
  2450                           ;main.c: 369: StandbyMenu();
  2451  00086A  ECDF  F005         	call	_StandbyMenu	;wreg free
  2452  00086E  D017               	goto	l1587
  2453                           
  2454                           ;main.c: 370: return(0);
  2455  000870  D018               	goto	l169
  2456  000872                     l1567:
  2457                           
  2458                           ;main.c: 372: if(z==1)
  2459  000872  041B               	decf	OptMenu@z,w,c
  2460  000874  A4D8               	btfss	status,2,c
  2461  000876  D003               	goto	l1575
  2462                           
  2463                           ;main.c: 373: return(3);
  2464  000878  0E03               	movlw	3
  2465  00087A  D013               	goto	l169
  2466  00087C  D010               	goto	l1587
  2467  00087E                     l1575:
  2468                           
  2469                           ;main.c: 374: else
  2470                           ;main.c: 375: return(2);
  2471  00087E  0E02               	movlw	2
  2472  000880  D010               	goto	l169
  2473  000882  D00D               	goto	l1587
  2474                           
  2475                           ;main.c: 376: case 2:
  2476  000884  D00C               	goto	l1587
  2477                           
  2478                           ;main.c: 377: return(0);
  2479  000886  D00D               	goto	l169
  2480                           
  2481                           ;main.c: 378: }
  2482  000888  D740               	goto	l1499
  2483  00088A                     l1585:
  2484  00088A  501E               	movf	OptMenu@Menu,w,c
  2485                           
  2486                           ; Switch size 1, requested type "space"
  2487                           ; Number of cases is 3, Range of values is 0 to 2
  2488                           ; switch strategies available:
  2489                           ; Name         Instructions Cycles
  2490                           ; simple_byte           10     6 (average)
  2491                           ;	Chosen strategy is simple_byte
  2492  00088C  0A00               	xorlw	0	; case 0
  2493  00088E  B4D8               	btfsc	status,2,c
  2494  000890  D7EC               	goto	l1561
  2495  000892  0A01               	xorlw	1	; case 1
  2496  000894  B4D8               	btfsc	status,2,c
  2497  000896  D7ED               	goto	l1567
  2498  000898  0A03               	xorlw	3	; case 2
  2499  00089A  A4D8               	btfss	status,2,c
  2500  00089C  D736               	goto	l1499
  2501  00089E                     l1587:
  2502                           
  2503                           ;main.c: 379: }
  2504                           ;main.c: 380: }
  2505                           ;main.c: 383: }
  2506                           ;main.c: 384: return(0);
  2507  00089E  0E00               	movlw	0
  2508  0008A0  D000               	goto	l169
  2509  0008A2                     l169:
  2510  0008A2  0012               	return		;funcret
  2511  0008A4                     __end_of_OptMenu:
  2512                           	opt stack 0
  2513                           tblptru	equ	0xFF8
  2514                           tblptrh	equ	0xFF7
  2515                           tblptrl	equ	0xFF6
  2516                           tablat	equ	0xFF5
  2517                           prodh	equ	0xFF4
  2518                           prodl	equ	0xFF3
  2519                           intcon	equ	0xFF2
  2520                           postinc0	equ	0xFEE
  2521                           wreg	equ	0xFE8
  2522                           indf1	equ	0xFE7
  2523                           postdec1	equ	0xFE5
  2524                           plusw1	equ	0xFE3
  2525                           fsr1h	equ	0xFE2
  2526                           fsr1l	equ	0xFE1
  2527                           indf2	equ	0xFDF
  2528                           postinc2	equ	0xFDE
  2529                           plusw2	equ	0xFDB
  2530                           fsr2h	equ	0xFDA
  2531                           fsr2l	equ	0xFD9
  2532                           status	equ	0xFD8
  2533                           
  2534 ;; *************** function ___wmul *****************
  2535 ;; Defined at:
  2536 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  multiplier      2    0[COMRAM] unsigned int 
  2539 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  product         2    4[COMRAM] unsigned int 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  2    0[COMRAM] unsigned int 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0, prodl, prodh
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0
  2551 ;;      Params:         4       0
  2552 ;;      Locals:         2       0
  2553 ;;      Temps:          0       0
  2554 ;;      Totals:         6       0
  2555 ;;Total ram usage:        6 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_DefaultMenu
  2561 ;;		_OptMenu
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text4
  2566  000C70                     __ptext4:
  2567                           	opt stack 0
  2568  000C70                     ___wmul:
  2569                           	opt stack 29
  2570                           
  2571                           ;incstack = 0
  2572  000C70  5001               	movf	___wmul@multiplier,w,c
  2573  000C72  0203               	mulwf	___wmul@multiplicand,c
  2574  000C74  CFF3 F005          	movff	prodl,___wmul@product
  2575  000C78  CFF4 F006          	movff	prodh,___wmul@product+1
  2576  000C7C  5001               	movf	___wmul@multiplier,w,c
  2577  000C7E  0204               	mulwf	___wmul@multiplicand+1,c
  2578  000C80  50F3               	movf	prodl,w,c
  2579  000C82  2606               	addwf	___wmul@product+1,f,c
  2580  000C84  5002               	movf	___wmul@multiplier+1,w,c
  2581  000C86  0203               	mulwf	___wmul@multiplicand,c
  2582  000C88  50F3               	movf	prodl,w,c
  2583  000C8A  2606               	addwf	___wmul@product+1,f,c
  2584  000C8C  C005  F001         	movff	___wmul@product,?___wmul
  2585  000C90  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2586  000C94  D000               	goto	l276
  2587  000C96                     l276:
  2588  000C96  0012               	return		;funcret
  2589  000C98                     __end_of___wmul:
  2590                           	opt stack 0
  2591                           tblptru	equ	0xFF8
  2592                           tblptrh	equ	0xFF7
  2593                           tblptrl	equ	0xFF6
  2594                           tablat	equ	0xFF5
  2595                           prodh	equ	0xFF4
  2596                           prodl	equ	0xFF3
  2597                           intcon	equ	0xFF2
  2598                           postinc0	equ	0xFEE
  2599                           wreg	equ	0xFE8
  2600                           indf1	equ	0xFE7
  2601                           postdec1	equ	0xFE5
  2602                           plusw1	equ	0xFE3
  2603                           fsr1h	equ	0xFE2
  2604                           fsr1l	equ	0xFE1
  2605                           indf2	equ	0xFDF
  2606                           postinc2	equ	0xFDE
  2607                           plusw2	equ	0xFDB
  2608                           fsr2h	equ	0xFDA
  2609                           fsr2l	equ	0xFD9
  2610                           status	equ	0xFD8
  2611                           
  2612 ;; *************** function _StandbyMenu *****************
  2613 ;; Defined at:
  2614 ;;		line 121 in file "main.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;		None               void
  2621 ;; Registers used:
  2622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0
  2628 ;;      Params:         0       0
  2629 ;;      Locals:         0       0
  2630 ;;      Temps:          1       0
  2631 ;;      Totals:         1       0
  2632 ;;Total ram usage:        1 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    3
  2635 ;; This function calls:
  2636 ;;		_LCDwrcmd
  2637 ;;		_LCDwrstring
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;;		_OptMenu
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text5
  2645  000BBE                     __ptext5:
  2646                           	opt stack 0
  2647  000BBE                     _StandbyMenu:
  2648                           	opt stack 27
  2649                           
  2650                           ;main.c: 123: LATAbits.LATA2=1;
  2651                           
  2652                           ;incstack = 0
  2653  000BBE  8489               	bsf	3977,2,c	;volatile
  2654                           
  2655                           ;main.c: 124: LCDwrcmd(0b00000001);
  2656  000BC0  0E01               	movlw	1
  2657  000BC2  EC69  F006         	call	_LCDwrcmd
  2658                           
  2659                           ;main.c: 125: _delay((unsigned long)((2)*(0x7A1200/4000.0)));
  2660  000BC6  0E06               	movlw	6
  2661  000BC8  6E09               	movwf	??_StandbyMenu& (0+255),c
  2662  000BCA  0E30               	movlw	48
  2663  000BCC                     u1897:
  2664  000BCC  2EE8               	decfsz	wreg,f,c
  2665  000BCE  D7FE               	goto	u1897
  2666  000BD0  2E09               	decfsz	??_StandbyMenu& (0+255),f,c
  2667  000BD2  D7FC               	goto	u1897
  2668  000BD4  D000               	nop2	
  2669                           
  2670                           ;main.c: 126: LCDwrstring("    STANDBY    ");
  2671  000BD6  0ED3               	movlw	low STR_1
  2672  000BD8  6E07               	movwf	LCDwrstring@string,c
  2673  000BDA  0E01               	movlw	high STR_1
  2674  000BDC  6E08               	movwf	LCDwrstring@string+1,c
  2675  000BDE  ECB5  F005         	call	_LCDwrstring	;wreg free
  2676  000BE2  D000               	goto	l1445
  2677  000BE4                     l1445:
  2678                           
  2679                           ;main.c: 129: if(PORTAbits.RA0 || PORTAbits.RA1 || PORTAbits.RA4){
  2680  000BE4  A080               	btfss	3968,0,c	;volatile
  2681  000BE6  B280               	btfsc	3968,1,c	;volatile
  2682  000BE8  D002               	goto	l1451
  2683  000BEA  A880               	btfss	3968,4,c	;volatile
  2684  000BEC  D7FB               	goto	l1445
  2685  000BEE                     l1451:
  2686                           
  2687                           ;main.c: 130: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
  2688  000BEE  0E20               	movlw	32
  2689  000BF0  6E09               	movwf	??_StandbyMenu& (0+255),c
  2690  000BF2  0E2A               	movlw	42
  2691  000BF4                     u1907:
  2692  000BF4  2EE8               	decfsz	wreg,f,c
  2693  000BF6  D7FE               	goto	u1907
  2694  000BF8  2E09               	decfsz	??_StandbyMenu& (0+255),f,c
  2695  000BFA  D7FC               	goto	u1907
  2696                           
  2697                           ;main.c: 131: while(PORTAbits.RA0 || PORTAbits.RA1 || PORTAbits.RA4);
  2698  000BFC  D000               	goto	l58
  2699  000BFE                     l58:
  2700  000BFE  A080               	btfss	3968,0,c	;volatile
  2701  000C00  B280               	btfsc	3968,1,c	;volatile
  2702  000C02  D7FD               	goto	l58
  2703  000C04  B880               	btfsc	3968,4,c	;volatile
  2704  000C06  D7FB               	goto	l58
  2705                           
  2706                           ;main.c: 132: LATAbits.LATA2=0;
  2707  000C08  9489               	bcf	3977,2,c	;volatile
  2708                           
  2709                           ;main.c: 133: return;
  2710  000C0A  D001               	goto	l61
  2711  000C0C  D7EB               	goto	l1445
  2712  000C0E                     l61:
  2713  000C0E  0012               	return		;funcret
  2714  000C10                     __end_of_StandbyMenu:
  2715                           	opt stack 0
  2716                           tblptru	equ	0xFF8
  2717                           tblptrh	equ	0xFF7
  2718                           tblptrl	equ	0xFF6
  2719                           tablat	equ	0xFF5
  2720                           prodh	equ	0xFF4
  2721                           prodl	equ	0xFF3
  2722                           intcon	equ	0xFF2
  2723                           postinc0	equ	0xFEE
  2724                           wreg	equ	0xFE8
  2725                           indf1	equ	0xFE7
  2726                           postdec1	equ	0xFE5
  2727                           plusw1	equ	0xFE3
  2728                           fsr1h	equ	0xFE2
  2729                           fsr1l	equ	0xFE1
  2730                           indf2	equ	0xFDF
  2731                           postinc2	equ	0xFDE
  2732                           plusw2	equ	0xFDB
  2733                           fsr2h	equ	0xFDA
  2734                           fsr2l	equ	0xFD9
  2735                           status	equ	0xFD8
  2736                           
  2737 ;; *************** function _LCDwrstring *****************
  2738 ;; Defined at:
  2739 ;;		line 42 in file "Hitachi_LCD.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  string          2    6[COMRAM] PTR const unsigned char 
  2742 ;;		 -> STR_20(17), STR_19(3), STR_18(14), STR_17(5), 
  2743 ;;		 -> STR_16(5), STR_15(17), STR_14(17), STR_13(17), 
  2744 ;;		 -> STR_12(9), STR_11(3), STR_10(9), STR_9(3), 
  2745 ;;		 -> Menu.Items(39), OptMenu@Menu(40), STR_8(5), STR_7(17), 
  2746 ;;		 -> STR_6(17), STR_5(5), STR_4(5), STR_3(17), 
  2747 ;;		 -> STR_2(17), STR_1(16), 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;		None               void
  2752 ;; Registers used:
  2753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0
  2759 ;;      Params:         2       0
  2760 ;;      Locals:         0       0
  2761 ;;      Temps:          0       0
  2762 ;;      Totals:         2       0
  2763 ;;Total ram usage:        2 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    2
  2766 ;; This function calls:
  2767 ;;		_LCDwrchar
  2768 ;; This function is called by:
  2769 ;;		_StandbyMenu
  2770 ;;		_DefaultMenu
  2771 ;;		_OptMenu
  2772 ;;		_PairMenu
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text6
  2777  000B6A                     __ptext6:
  2778                           	opt stack 0
  2779  000B6A                     _LCDwrstring:
  2780                           	opt stack 27
  2781                           
  2782                           ;Hitachi_LCD.c: 44: while(*string)
  2783                           
  2784                           ;incstack = 0
  2785  000B6A  D015               	goto	l1435
  2786  000B6C                     l1431:
  2787                           
  2788                           ;Hitachi_LCD.c: 45: {
  2789                           ;Hitachi_LCD.c: 46: LCDwrchar(*string);
  2790  000B6C  C007  FFF6         	movff	LCDwrstring@string,tblptrl
  2791  000B70  C008  FFF7         	movff	LCDwrstring@string+1,tblptrh
  2792  000B74  6AF8               	clrf	tblptru,c
  2793  000B76  0E00               	movlw	(high __ramtop+-1)
  2794  000B78  64F7               	cpfsgt	tblptrh,c
  2795  000B7A  D003               	bra	u947
  2796  000B7C  0008               	tblrd		*
  2797  000B7E  50F5               	movf	tablat,w,c
  2798  000B80  D005               	bra	u940
  2799  000B82                     u947:
  2800  000B82  CFF6 FFE9          	movff	tblptrl,fsr0l
  2801  000B86  CFF7 FFEA          	movff	tblptrh,fsr0h
  2802  000B8A  50EF               	movf	indf0,w,c
  2803  000B8C                     u940:
  2804  000B8C  EC5B  F006         	call	_LCDwrchar
  2805                           
  2806                           ;Hitachi_LCD.c: 47: string++;
  2807  000B90  4A07               	infsnz	LCDwrstring@string,f,c
  2808  000B92  2A08               	incf	LCDwrstring@string+1,f,c
  2809  000B94  D000               	goto	l1435
  2810  000B96                     l1435:
  2811  000B96  C007  FFF6         	movff	LCDwrstring@string,tblptrl
  2812  000B9A  C008  FFF7         	movff	LCDwrstring@string+1,tblptrh
  2813  000B9E  6AF8               	clrf	tblptru,c
  2814  000BA0  0E00               	movlw	(high __ramtop+-1)
  2815  000BA2  64F7               	cpfsgt	tblptrh,c
  2816  000BA4  D003               	bra	u957
  2817  000BA6  0008               	tblrd		*
  2818  000BA8  50F5               	movf	tablat,w,c
  2819  000BAA  D005               	bra	u950
  2820  000BAC                     u957:
  2821  000BAC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2822  000BB0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2823  000BB4  50EF               	movf	indf0,w,c
  2824  000BB6                     u950:
  2825  000BB6  0900               	iorlw	0
  2826  000BB8  A4D8               	btfss	status,2,c
  2827  000BBA  D7D8               	goto	l1431
  2828  000BBC  0012               	return		;funcret
  2829  000BBE                     __end_of_LCDwrstring:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           prodh	equ	0xFF4
  2836                           prodl	equ	0xFF3
  2837                           intcon	equ	0xFF2
  2838                           indf0	equ	0xFEF
  2839                           postinc0	equ	0xFEE
  2840                           fsr0h	equ	0xFEA
  2841                           fsr0l	equ	0xFE9
  2842                           wreg	equ	0xFE8
  2843                           indf1	equ	0xFE7
  2844                           postdec1	equ	0xFE5
  2845                           plusw1	equ	0xFE3
  2846                           fsr1h	equ	0xFE2
  2847                           fsr1l	equ	0xFE1
  2848                           indf2	equ	0xFDF
  2849                           postinc2	equ	0xFDE
  2850                           plusw2	equ	0xFDB
  2851                           fsr2h	equ	0xFDA
  2852                           fsr2l	equ	0xFD9
  2853                           status	equ	0xFD8
  2854                           
  2855 ;; *************** function _LCDwrchar *****************
  2856 ;; Defined at:
  2857 ;;		line 32 in file "Hitachi_LCD.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  letter          1    wreg     unsigned char 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  letter          1    4[COMRAM] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;		None               void
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0
  2871 ;;      Params:         0       0
  2872 ;;      Locals:         1       0
  2873 ;;      Temps:          0       0
  2874 ;;      Totals:         1       0
  2875 ;;Total ram usage:        1 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    1
  2878 ;; This function calls:
  2879 ;;		_LCDdata
  2880 ;; This function is called by:
  2881 ;;		_DefaultMenu
  2882 ;;		_OptMenu
  2883 ;;		_PairMenu
  2884 ;;		_LCDwrstring
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text7
  2889  000CB6                     __ptext7:
  2890                           	opt stack 0
  2891  000CB6                     _LCDwrchar:
  2892                           	opt stack 27
  2893                           
  2894                           ;incstack = 0
  2895                           ;LCDwrchar@letter stored from wreg
  2896  000CB6  6E05               	movwf	LCDwrchar@letter,c
  2897                           
  2898                           ;Hitachi_LCD.c: 34: LATBbits.LATB4=1;
  2899  000CB8  888A               	bsf	3978,4,c	;volatile
  2900                           
  2901                           ;Hitachi_LCD.c: 35: LATBbits.LATB5=0;
  2902  000CBA  9A8A               	bcf	3978,5,c	;volatile
  2903                           
  2904                           ;Hitachi_LCD.c: 36: LCDdata(letter);
  2905  000CBC  5005               	movf	LCDwrchar@letter,w,c
  2906  000CBE  EC86  F005         	call	_LCDdata
  2907                           
  2908                           ;Hitachi_LCD.c: 37: LATBbits.LATB3=1;
  2909  000CC2  868A               	bsf	3978,3,c	;volatile
  2910                           
  2911                           ;Hitachi_LCD.c: 38: _delay(2);
  2912  000CC4  D000               	nop2		;2 cycle nop
  2913                           
  2914                           ;Hitachi_LCD.c: 39: LATBbits.LATB3=0;
  2915  000CC6  968A               	bcf	3978,3,c	;volatile
  2916                           
  2917                           ;Hitachi_LCD.c: 40: _delay((unsigned long)((37)*(0x7A1200/4000000.0)));
  2918  000CC8  0E18               	movlw	24
  2919  000CCA                     u1917:
  2920  000CCA  2EE8               	decfsz	wreg,f,c
  2921  000CCC  D7FE               	goto	u1917
  2922  000CCE  D000               	nop2		;nop
  2923  000CD0  0012               	return		;funcret
  2924  000CD2                     __end_of_LCDwrchar:
  2925                           	opt stack 0
  2926                           tblptru	equ	0xFF8
  2927                           tblptrh	equ	0xFF7
  2928                           tblptrl	equ	0xFF6
  2929                           tablat	equ	0xFF5
  2930                           prodh	equ	0xFF4
  2931                           prodl	equ	0xFF3
  2932                           intcon	equ	0xFF2
  2933                           indf0	equ	0xFEF
  2934                           postinc0	equ	0xFEE
  2935                           fsr0h	equ	0xFEA
  2936                           fsr0l	equ	0xFE9
  2937                           wreg	equ	0xFE8
  2938                           indf1	equ	0xFE7
  2939                           postdec1	equ	0xFE5
  2940                           plusw1	equ	0xFE3
  2941                           fsr1h	equ	0xFE2
  2942                           fsr1l	equ	0xFE1
  2943                           indf2	equ	0xFDF
  2944                           postinc2	equ	0xFDE
  2945                           plusw2	equ	0xFDB
  2946                           fsr2h	equ	0xFDA
  2947                           fsr2l	equ	0xFD9
  2948                           status	equ	0xFD8
  2949                           
  2950 ;; *************** function _LCDwrcmd *****************
  2951 ;; Defined at:
  2952 ;;		line 50 in file "Hitachi_LCD.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  value           1    wreg     unsigned char 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  value           1    4[COMRAM] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;		None               void
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0
  2966 ;;      Params:         0       0
  2967 ;;      Locals:         1       0
  2968 ;;      Temps:          0       0
  2969 ;;      Totals:         1       0
  2970 ;;Total ram usage:        1 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    1
  2973 ;; This function calls:
  2974 ;;		_LCDdata
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;;		_StandbyMenu
  2978 ;;		_DefaultMenu
  2979 ;;		_OptMenu
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text8
  2984  000CD2                     __ptext8:
  2985                           	opt stack 0
  2986  000CD2                     _LCDwrcmd:
  2987                           	opt stack 28
  2988                           
  2989                           ;incstack = 0
  2990                           ;LCDwrcmd@value stored from wreg
  2991  000CD2  6E05               	movwf	LCDwrcmd@value,c
  2992                           
  2993                           ;Hitachi_LCD.c: 52: LATBbits.LATB4=0, LATBbits.LATB5=0;
  2994  000CD4  988A               	bcf	3978,4,c	;volatile
  2995  000CD6  9A8A               	bcf	3978,5,c	;volatile
  2996                           
  2997                           ;Hitachi_LCD.c: 53: LCDdata(value);
  2998  000CD8  5005               	movf	LCDwrcmd@value,w,c
  2999  000CDA  EC86  F005         	call	_LCDdata
  3000                           
  3001                           ;Hitachi_LCD.c: 54: LATBbits.LATB3=1;
  3002  000CDE  868A               	bsf	3978,3,c	;volatile
  3003                           
  3004                           ;Hitachi_LCD.c: 55: _delay(2);
  3005  000CE0  D000               	nop2		;2 cycle nop
  3006                           
  3007                           ;Hitachi_LCD.c: 56: LATBbits.LATB3=0;
  3008  000CE2  968A               	bcf	3978,3,c	;volatile
  3009                           
  3010                           ;Hitachi_LCD.c: 57: _delay((unsigned long)((37)*(0x7A1200/4000000.0)));
  3011  000CE4  0E18               	movlw	24
  3012  000CE6                     u1927:
  3013  000CE6  2EE8               	decfsz	wreg,f,c
  3014  000CE8  D7FE               	goto	u1927
  3015  000CEA  D000               	nop2		;nop
  3016  000CEC  0012               	return		;funcret
  3017  000CEE                     __end_of_LCDwrcmd:
  3018                           	opt stack 0
  3019                           tblptru	equ	0xFF8
  3020                           tblptrh	equ	0xFF7
  3021                           tblptrl	equ	0xFF6
  3022                           tablat	equ	0xFF5
  3023                           prodh	equ	0xFF4
  3024                           prodl	equ	0xFF3
  3025                           intcon	equ	0xFF2
  3026                           indf0	equ	0xFEF
  3027                           postinc0	equ	0xFEE
  3028                           fsr0h	equ	0xFEA
  3029                           fsr0l	equ	0xFE9
  3030                           wreg	equ	0xFE8
  3031                           indf1	equ	0xFE7
  3032                           postdec1	equ	0xFE5
  3033                           plusw1	equ	0xFE3
  3034                           fsr1h	equ	0xFE2
  3035                           fsr1l	equ	0xFE1
  3036                           indf2	equ	0xFDF
  3037                           postinc2	equ	0xFDE
  3038                           plusw2	equ	0xFDB
  3039                           fsr2h	equ	0xFDA
  3040                           fsr2l	equ	0xFD9
  3041                           status	equ	0xFD8
  3042                           
  3043 ;; *************** function _LCDsetaddr *****************
  3044 ;; Defined at:
  3045 ;;		line 59 in file "Hitachi_LCD.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  add             1    wreg     unsigned char 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  add             1    4[COMRAM] unsigned char 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;		None               void
  3052 ;; Registers used:
  3053 ;;		wreg, status,2, status,0, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0
  3059 ;;      Params:         0       0
  3060 ;;      Locals:         1       0
  3061 ;;      Temps:          0       0
  3062 ;;      Totals:         1       0
  3063 ;;Total ram usage:        1 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:    1
  3066 ;; This function calls:
  3067 ;;		_LCDdata
  3068 ;; This function is called by:
  3069 ;;		_DefaultMenu
  3070 ;;		_OptMenu
  3071 ;;		_PairMenu
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text9
  3076  000C98                     __ptext9:
  3077                           	opt stack 0
  3078  000C98                     _LCDsetaddr:
  3079                           	opt stack 26
  3080                           
  3081                           ;incstack = 0
  3082                           ;LCDsetaddr@add stored from wreg
  3083  000C98  6E05               	movwf	LCDsetaddr@add,c
  3084                           
  3085                           ;Hitachi_LCD.c: 61: LATBbits.LATB4=0, LATBbits.LATB5=0;
  3086  000C9A  988A               	bcf	3978,4,c	;volatile
  3087  000C9C  9A8A               	bcf	3978,5,c	;volatile
  3088                           
  3089                           ;Hitachi_LCD.c: 62: LCDdata(add|0b10000000);
  3090  000C9E  5005               	movf	LCDsetaddr@add,w,c
  3091  000CA0  0980               	iorlw	128
  3092  000CA2  EC86  F005         	call	_LCDdata
  3093                           
  3094                           ;Hitachi_LCD.c: 63: LATBbits.LATB3=1;
  3095  000CA6  868A               	bsf	3978,3,c	;volatile
  3096                           
  3097                           ;Hitachi_LCD.c: 64: _delay(2);
  3098  000CA8  D000               	nop2		;2 cycle nop
  3099                           
  3100                           ;Hitachi_LCD.c: 65: LATBbits.LATB3=0;
  3101  000CAA  968A               	bcf	3978,3,c	;volatile
  3102                           
  3103                           ;Hitachi_LCD.c: 66: _delay((unsigned long)((37)*(0x7A1200/4000000.0)));
  3104  000CAC  0E18               	movlw	24
  3105  000CAE                     u1937:
  3106  000CAE  2EE8               	decfsz	wreg,f,c
  3107  000CB0  D7FE               	goto	u1937
  3108  000CB2  D000               	nop2		;nop
  3109  000CB4  0012               	return		;funcret
  3110  000CB6                     __end_of_LCDsetaddr:
  3111                           	opt stack 0
  3112                           tblptru	equ	0xFF8
  3113                           tblptrh	equ	0xFF7
  3114                           tblptrl	equ	0xFF6
  3115                           tablat	equ	0xFF5
  3116                           prodh	equ	0xFF4
  3117                           prodl	equ	0xFF3
  3118                           intcon	equ	0xFF2
  3119                           indf0	equ	0xFEF
  3120                           postinc0	equ	0xFEE
  3121                           fsr0h	equ	0xFEA
  3122                           fsr0l	equ	0xFE9
  3123                           wreg	equ	0xFE8
  3124                           indf1	equ	0xFE7
  3125                           postdec1	equ	0xFE5
  3126                           plusw1	equ	0xFE3
  3127                           fsr1h	equ	0xFE2
  3128                           fsr1l	equ	0xFE1
  3129                           indf2	equ	0xFDF
  3130                           postinc2	equ	0xFDE
  3131                           plusw2	equ	0xFDB
  3132                           fsr2h	equ	0xFDA
  3133                           fsr2l	equ	0xFD9
  3134                           status	equ	0xFD8
  3135                           
  3136 ;; *************** function _LCDdata *****************
  3137 ;; Defined at:
  3138 ;;		line 14 in file "Hitachi_LCD.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  data            1    wreg     unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  data            1    1[COMRAM] unsigned char 
  3143 ;;  x               2    2[COMRAM] int 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;		None               void
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0
  3153 ;;      Params:         0       0
  3154 ;;      Locals:         3       0
  3155 ;;      Temps:          1       0
  3156 ;;      Totals:         4       0
  3157 ;;Total ram usage:        4 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_LCDwrchar
  3163 ;;		_LCDwrcmd
  3164 ;;		_LCDsetaddr
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text10
  3169  000B0C                     __ptext10:
  3170                           	opt stack 0
  3171  000B0C                     _LCDdata:
  3172                           	opt stack 27
  3173                           
  3174                           ;incstack = 0
  3175                           ;LCDdata@data stored from wreg
  3176  000B0C  6E02               	movwf	LCDdata@data,c
  3177                           
  3178                           ;Hitachi_LCD.c: 16: int x;
  3179                           ;Hitachi_LCD.c: 17: for(x=0;x<8;x++)
  3180  000B0E  0E00               	movlw	0
  3181  000B10  6E04               	movwf	LCDdata@x+1,c
  3182  000B12  0E00               	movlw	0
  3183  000B14  6E03               	movwf	LCDdata@x,c
  3184  000B16  BE04               	btfsc	LCDdata@x+1,7,c
  3185  000B18  D008               	goto	l1391
  3186  000B1A  5004               	movf	LCDdata@x+1,w,c
  3187  000B1C  E121               	bnz	l257
  3188  000B1E  0E08               	movlw	8
  3189  000B20  5C03               	subwf	LCDdata@x,w,c
  3190  000B22  B0D8               	btfsc	status,0,c
  3191  000B24  D01D               	goto	l257
  3192  000B26  D001               	goto	l1391
  3193  000B28  D01B               	goto	l257
  3194  000B2A                     l1391:
  3195                           
  3196                           ;Hitachi_LCD.c: 18: {
  3197                           ;Hitachi_LCD.c: 19: LATAbits.LATA6=data & 0x1 ? 1:0;
  3198  000B2A  A002               	btfss	LCDdata@data,0,c
  3199  000B2C  D003               	goto	u910
  3200  000B2E  6A01               	clrf	??_LCDdata& (0+255),c
  3201  000B30  2A01               	incf	??_LCDdata& (0+255),f,c
  3202  000B32  D001               	goto	u928
  3203  000B34                     u910:
  3204  000B34  6A01               	clrf	??_LCDdata& (0+255),c
  3205  000B36                     u928:
  3206  000B36  3A01               	swapf	??_LCDdata,f,c
  3207  000B38  4601               	rlncf	??_LCDdata,f,c
  3208  000B3A  4601               	rlncf	??_LCDdata,f,c
  3209  000B3C  5089               	movf	3977,w,c	;volatile
  3210  000B3E  1801               	xorwf	??_LCDdata,w,c
  3211  000B40  0BBF               	andlw	-65
  3212  000B42  1801               	xorwf	??_LCDdata,w,c
  3213  000B44  6E89               	movwf	3977,c	;volatile
  3214                           
  3215                           ;Hitachi_LCD.c: 20: __nop();
  3216  000B46  F000               	nop	
  3217                           
  3218                           ;Hitachi_LCD.c: 21: LATBbits.LATB2=1;
  3219  000B48  848A               	bsf	3978,2,c	;volatile
  3220                           
  3221                           ;Hitachi_LCD.c: 22: __nop();
  3222  000B4A  F000               	nop	
  3223                           
  3224                           ;Hitachi_LCD.c: 23: LATBbits.LATB2=0;
  3225  000B4C  948A               	bcf	3978,2,c	;volatile
  3226                           
  3227                           ;Hitachi_LCD.c: 24: data>>=1;
  3228  000B4E  90D8               	bcf	status,0,c
  3229  000B50  3202               	rrcf	LCDdata@data,f,c
  3230  000B52  4A03               	infsnz	LCDdata@x,f,c
  3231  000B54  2A04               	incf	LCDdata@x+1,f,c
  3232  000B56  BE04               	btfsc	LCDdata@x+1,7,c
  3233  000B58  D7E8               	goto	l1391
  3234  000B5A  5004               	movf	LCDdata@x+1,w,c
  3235  000B5C  E101               	bnz	u930
  3236  000B5E  D7DF               	goto	L14
  3237  000B60                     u930:
  3238  000B60                     l257:
  3239                           
  3240                           ;Hitachi_LCD.c: 25: }
  3241                           ;Hitachi_LCD.c: 26: __nop();
  3242  000B60  F000               	nop	
  3243                           
  3244                           ;Hitachi_LCD.c: 27: LATAbits.LATA7=1;
  3245  000B62  8E89               	bsf	3977,7,c	;volatile
  3246                           
  3247                           ;Hitachi_LCD.c: 28: __nop();
  3248  000B64  F000               	nop	
  3249                           
  3250                           ;Hitachi_LCD.c: 29: LATAbits.LATA7=0;
  3251  000B66  9E89               	bcf	3977,7,c	;volatile
  3252  000B68  0012               	return		;funcret
  3253  000B6A                     __end_of_LCDdata:
  3254                           	opt stack 0
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           prodh	equ	0xFF4
  3260                           prodl	equ	0xFF3
  3261                           intcon	equ	0xFF2
  3262                           indf0	equ	0xFEF
  3263                           postinc0	equ	0xFEE
  3264                           fsr0h	equ	0xFEA
  3265                           fsr0l	equ	0xFE9
  3266                           wreg	equ	0xFE8
  3267                           indf1	equ	0xFE7
  3268                           postdec1	equ	0xFE5
  3269                           plusw1	equ	0xFE3
  3270                           fsr1h	equ	0xFE2
  3271                           fsr1l	equ	0xFE1
  3272                           indf2	equ	0xFDF
  3273                           postinc2	equ	0xFDE
  3274                           plusw2	equ	0xFDB
  3275                           fsr2h	equ	0xFDA
  3276                           fsr2l	equ	0xFD9
  3277                           status	equ	0xFD8
  3278                           tblptru	equ	0xFF8
  3279                           tblptrh	equ	0xFF7
  3280                           tblptrl	equ	0xFF6
  3281                           tablat	equ	0xFF5
  3282                           prodh	equ	0xFF4
  3283                           prodl	equ	0xFF3
  3284                           intcon	equ	0xFF2
  3285                           indf0	equ	0xFEF
  3286                           postinc0	equ	0xFEE
  3287                           fsr0h	equ	0xFEA
  3288                           fsr0l	equ	0xFE9
  3289                           wreg	equ	0xFE8
  3290                           indf1	equ	0xFE7
  3291                           postdec1	equ	0xFE5
  3292                           plusw1	equ	0xFE3
  3293                           fsr1h	equ	0xFE2
  3294                           fsr1l	equ	0xFE1
  3295                           indf2	equ	0xFDF
  3296                           postinc2	equ	0xFDE
  3297                           plusw2	equ	0xFDB
  3298                           fsr2h	equ	0xFDA
  3299                           fsr2l	equ	0xFD9
  3300                           status	equ	0xFD8
  3301                           
  3302                           	psect	rparam
  3303  0000                     tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           intcon	equ	0xFF2
  3310                           indf0	equ	0xFEF
  3311                           postinc0	equ	0xFEE
  3312                           fsr0h	equ	0xFEA
  3313                           fsr0l	equ	0xFE9
  3314                           wreg	equ	0xFE8
  3315                           indf1	equ	0xFE7
  3316                           postdec1	equ	0xFE5
  3317                           plusw1	equ	0xFE3
  3318                           fsr1h	equ	0xFE2
  3319                           fsr1l	equ	0xFE1
  3320                           indf2	equ	0xFDF
  3321                           postinc2	equ	0xFDE
  3322                           plusw2	equ	0xFDB
  3323                           fsr2h	equ	0xFDA
  3324                           fsr2l	equ	0xFD9
  3325                           status	equ	0xFD8


Data Sizes:
    Strings     118
    Constant    125
    Data        52
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    115     116
    BANK0           128      0      52

Pointer List with Targets:

    LCDwrstring@string	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_20(CODE[17]), STR_19(CODE[3]), STR_18(CODE[14]), STR_17(CODE[5]), 
		 -> STR_16(CODE[5]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[9]), STR_11(CODE[3]), STR_10(CODE[9]), STR_9(CODE[3]), 
		 -> Menu.Items(COMRAM[39]), OptMenu@Menu(COMRAM[40]), STR_8(CODE[5]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_DefaultMenu
    _DefaultMenu->_PairMenu
    _PairMenu->_OptMenu
    _OptMenu->_StandbyMenu
    _StandbyMenu->_LCDwrstring
    _LCDwrstring->___wmul
    _LCDwrchar->_LCDdata
    _LCDwrcmd->_LCDdata
    _LCDsetaddr->_LCDdata

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   15748
                                            114 COMRAM     1     1      0
                        _DefaultMenu
                           _LCDwrcmd
                        _StandbyMenu
 ---------------------------------------------------------------------------------
 (1) _DefaultMenu                                         32    32      0   14022
                                             83 COMRAM    31    31      0
                         _LCDsetaddr
                          _LCDwrchar
                           _LCDwrcmd
                        _LCDwrstring
                            _OptMenu
                           _PairMenu
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _PairMenu                                            14    14      0    6195
                                             69 COMRAM    14    14      0
                         _LCDsetaddr
                          _LCDwrchar
                        _LCDwrstring
                            _OptMenu
 ---------------------------------------------------------------------------------
 (3) _OptMenu                                             62    62      0    4302
                                              9 COMRAM    60    60      0
                         _LCDsetaddr
                          _LCDwrchar
                           _LCDwrcmd
                        _LCDwrstring
                        _StandbyMenu
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     415
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _StandbyMenu                                          1     1      0    1635
                                              8 COMRAM     1     1      0
                           _LCDwrcmd
                        _LCDwrstring
 ---------------------------------------------------------------------------------
 (2) _LCDwrstring                                          2     0      2    1544
                                              6 COMRAM     2     0      2
                          _LCDwrchar
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCDwrchar                                            1     1      0      91
                                              4 COMRAM     1     1      0
                            _LCDdata
 ---------------------------------------------------------------------------------
 (2) _LCDwrcmd                                             1     1      0      91
                                              4 COMRAM     1     1      0
                            _LCDdata
 ---------------------------------------------------------------------------------
 (4) _LCDsetaddr                                           1     1      0      91
                                              4 COMRAM     1     1      0
                            _LCDdata
 ---------------------------------------------------------------------------------
 (4) _LCDdata                                              4     4      0      69
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DefaultMenu
     _LCDsetaddr
       _LCDdata
     _LCDwrchar
       _LCDdata
     _LCDwrcmd
       _LCDdata
     _LCDwrstring
       _LCDwrchar
         _LCDdata
       ___wmul (ARG)
     _OptMenu
       _LCDsetaddr
         _LCDdata
       _LCDwrchar
         _LCDdata
       _LCDwrcmd
         _LCDdata
       _LCDwrstring
         _LCDwrchar
           _LCDdata
         ___wmul (ARG)
       _StandbyMenu
         _LCDwrcmd
           _LCDdata
         _LCDwrstring
           _LCDwrchar
             _LCDdata
           ___wmul (ARG)
       ___wmul
     _PairMenu
       _LCDsetaddr
         _LCDdata
       _LCDwrchar
         _LCDdata
       _LCDwrstring
         _LCDwrchar
           _LCDdata
         ___wmul (ARG)
       _OptMenu
         _LCDsetaddr
           _LCDdata
         _LCDwrchar
           _LCDdata
         _LCDwrcmd
           _LCDdata
         _LCDwrstring
           _LCDwrchar
             _LCDdata
           ___wmul (ARG)
         _StandbyMenu
           _LCDwrcmd
             _LCDdata
           _LCDwrstring
             _LCDwrchar
               _LCDdata
             ___wmul (ARG)
         ___wmul
     ___wmul
   _LCDwrcmd
     _LCDdata
   _StandbyMenu
     _LCDwrcmd
       _LCDdata
     _LCDwrstring
       _LCDwrchar
         _LCDdata
       ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
EEDATA             100      0       0       0        0.0%
BIGRAM              FF      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      34       4       40.6%
BITCOMRAM           7F      0       1       0        0.8%
COMRAM              7F     73      74       1       91.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A8       5        0.0%
DATA                 0      0      A8       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Nov 02 16:34:19 2015

                          l61 0C0E                            l73 0368                            l58 0BFE  
                          l82 0360                            l85 03FA                            l94 03F2  
                          l97 05AC           ___wmul@multiplicand 0003                           l100 041C  
                         l201 09C2                           l115 05A4                           l132 0668  
                         l213 09BC                           l206 097C                           l223 0AA4  
                         l152 0808                           l218 0A52                           l155 0848  
                         l219 09E6                           l164 0862                           l148 0810  
                         l229 0A7E                           l159 0840                           l239 0A9C  
                         l191 093A                           l257 0B60                           l169 08A2  
                         l276 0C96                           u910 0B34                           u930 0B60  
                         u940 0B8C                           u950 0BB6                           u928 0B36  
                         u947 0B82                           u957 0BAC                  __CFG_BOR$OFF 000000  
     OptMenu@AlternateDisplay 000C                           prod 000FF3                           wreg 000FE8  
                __CFG_LVP$OFF 000000               __end_of_LCDdata 0B6A                  __CFG_WDT$OFF 000000  
                        l1431 0B6C                          l1435 0B96                          l1451 0BEE  
                        l1611 0912                          l1445 0BE4                          l1541 07FE  
                        l1525 07BE                          l1701 0A76                          l1621 0932  
                        l1391 0B2A                          l1551 0832                          l1527 07CC  
                        l1561 086A                          l1553 0836                          l1529 07D6  
                        l1705 0A8A                          l1625 0946                          l1609 0904  
                        l1633 095E                          l1721 0234                          l1539 07FA  
                        l1707 0A94                          l1627 0950                          l1619 0928  
                        l1715 0218                          l1485 06AE                          l1653 09A6  
                        l1637 0966                          l1629 0958                          l1733 02A8  
                        l1725 0248                          l1575 087E                          l1567 0872  
                        l1495 06F2                          l1655 09B0                          l1647 0994  
                        l1831 0532                          l1823 04CE                          l1807 0436  
                        l1815 045C                          l1743 02D6                          l1719 022C  
                        l1585 088A                          l1489 06C2                          l1657 09B8  
                        l1833 055E                          l1825 04D8                          l1761 0348  
                        l1737 02B0                          l1587 089E                          l1499 070A  
                        l1827 04E0                          l1763 0350                          l1755 0318  
                        l1685 0A22                          l1677 0A04                          l1853 0630  
                        l1861 0652                          l1829 0508                          l1837 0588  
                        l1687 0A2C                          l1599 08D8                          l1847 05E4  
                        l1791 03EE                          l1783 03D0                          l1759 033E  
                        l1857 0640                          l1849 05FE                          l1785 03DA  
                        l1699 0A6C                          l1859 064A                          l1787 03E2  
                        l1779 03AA                   ?_LCDsetaddr 0001                          STR_1 01D3  
                        STR_2 01A0                          STR_3 01C2                          STR_4 01BD  
                        STR_5 01BD                          STR_6 01A0                          STR_7 01C2  
                        STR_8 01BD                          STR_9 01F1                          u1030 0684  
                        u1041 0698                          _LATA 000F89                          _LATB 000F8A  
                        u1461 0208                          u1740 0628                          u1750 062A  
                        u1807 02E0                          u1817 0372                          u1770 065E  
                        u1907 0BF4                          u1827 0404                          u1780 0660  
                        u1917 0CCA                          u1837 096C                          u1927 0CE6  
                        u1847 09CC                          u1937 0CAE                          u1857 06FE  
                        u1867 07E0                          u1877 081A                          u1797 0AF6  
                        u1887 0852                          u1897 0BCC                  __CFG_PWRT$ON 000000  
                __CFG_STVR$ON 000000                          _main 0AA6                          fsr0h 000FEA  
                        indf0 000FEF                          fsr0l 000FE9                          indf1 000FE7  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        prodh 000FF4                          prodl 000FF3                          start 0002  
               __CFG_FSCM$OFF 000000                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000010            __size_of_LCDwrchar 001C               __end_of_OptMenu 08A4  
                       ?_main 0001                         STR_10 0186                         STR_11 01F1  
                       STR_12 0186                         STR_20 01B1                         STR_13 017E  
                       STR_14 018F                         STR_15 01B1                         STR_16 01BD  
                       STR_17 01BD                         STR_18 01E3                         STR_19 018C  
                       _T0CON 000FD5              __end_of_LCDwrcmd 0CEE                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _TRISA 000F92                         _TRISB 000F93  
                 _DefaultMenu 01F6               DefaultMenu@last 0065                __pbitbssCOMRAM 03A0  
                       tablat 000FF5                  ?_LCDwrstring 0007                         plusw1 000FE3  
                       plusw2 000FDB                         status 000FD8                   LCDdata@data 0002  
             __initialization 0C44                  __end_of_main 0B0C              __end_of_PairMenu 0AA6  
         __size_of_LCDsetaddr 001E                        ??_main 0073                 __activetblptr 000002  
                   ??_LCDdata 0001             LCDwrstring@string 0007                        _ADCON1 000FC1  
           __end_of_LCDwrchar 0CD2              DefaultMenu@F2825 00A8                     ??_OptMenu 000A  
                PairMenu@Last 03A1                        ___wmul 0C70                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0080       __end_of__initialization 0C66                 ??_StandbyMenu 0009  
               ___rparam_used 000001                     ?_LCDwrcmd 0001                 OptMenu@update 0019  
              __pcstackCOMRAM 0001                  __pidataBANK0 0C10               __CFG_OSC$INTIO2 000000  
                ??_LCDsetaddr 0005         PairMenu@CurrentSelect 03A0                   OptMenu@Menu 001E  
                   ?_PairMenu 0001          __size_of_LCDwrstring 0054                    ??_LCDwrcmd 0005  
                     ?___wmul 0001           __end_of_StandbyMenu 0C10            __end_of_LCDsetaddr 0CB6  
                ?_DefaultMenu 0001                       _LCDdata 0B0C          __end_ofOptMenu@F2834 017E  
                  ??_PairMenu 0046                       __Hparam 0000                       __Lparam 0000  
                     _OptMenu 066C               __size_of___wmul 0028                  __psmallconst 0100  
           DefaultMenu@buffer 0060                       __pcinit 0C44                       __ramtop 0100  
                     __ptext0 0AA6                       __ptext1 01F6                       __ptext2 08A4  
                     __ptext3 066C                       __ptext4 0C70                       __ptext5 0BBE  
                     __ptext6 0B6A                       __ptext7 0CB6                       __ptext8 0CD2  
                     __ptext9 0C98          end_of_initialization 0C66                 __Lmediumconst 0000  
                   _LCDwrchar 0CB6                   _StandbyMenu 0BBE                       postdec1 000FE5  
                     postinc0 000FEE                       postinc2 000FDE                     _PORTAbits 000F80  
             _DefaultMenu$580 0058               _DefaultMenu$582 005A               _DefaultMenu$585 005C  
             _DefaultMenu$587 005E                  DefaultMenu@x 0061                  DefaultMenu@y 0063  
                _PairMenu$621 004B                  _PairMenu$623 004D                  _PairMenu$626 004F  
                _PairMenu$618 0047                  _PairMenu$627 0051                  _PairMenu$619 0049  
                  ?_LCDwrchar 0001             __size_of_LCDwrcmd 001C                __end_of___wmul 0C98  
         start_initialization 0C44  __end_of_Default_Menu_Bitmaps 0171          __size_of_DefaultMenu 0476  
           __size_of_PairMenu 0202           DefaultMenu@MenuItem 0067                      ??___wmul 0005  
                OptMenu@F2840 0080                  OptMenu@F2834 0171                   __pdataBANK0 0080  
             PairMenu@OnOrOff 03A2                      ?_LCDdata 0001                      LCDdata@x 0003  
               ??_LCDwrstring 0009                   ??_LCDwrchar 0005                      ?_OptMenu 0001  
                 __smallconst 0100                ___wmul@product 0005                      _LATAbits 000F89  
                    _LATBbits 000F8A                  ?_StandbyMenu 0001                      _LCDwrcmd 0CD2  
         __end_of_LCDwrstring 0BBE          _Default_Menu_Bitmaps 0101                      _RCONbits 000FD0  
           ___wmul@multiplier 0001              __size_of_LCDdata 005E                     copy_data0 0C5A  
                    _PairMenu 08A4                      OptMenu@x 001C                      OptMenu@z 001B  
                    __Hrparam 0000                      __Lrparam 0000              __size_of_OptMenu 0238  
              PairMenu@buffer 0053               LCDwrchar@letter 0005                      __ptext10 0B0C  
               LCDsetaddr@add 0005                   _LCDwrstring 0B6A                 __size_of_main 0066  
               ??_DefaultMenu 0054                    _INTCONbits 000FF2                    _LCDsetaddr 0C98  
                  _OSCCONbits 000FD3          __size_of_StandbyMenu 0052                 LCDwrcmd@value 0005  
         __end_of_DefaultMenu 066C  
