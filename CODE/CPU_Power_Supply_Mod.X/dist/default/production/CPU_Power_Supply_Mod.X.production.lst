

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 27 18:27:02 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F1220
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	idataBANK0
    24  00087E                     __pidataBANK0:
    25                           	opt stack 0
    26                           
    27                           ;initializer for OptMenu@F2840
    28  00087E  00                 	db	0
    29  00087F  53                 	db	83
    30  000880  74                 	db	116
    31  000881  61                 	db	97
    32  000882  6E                 	db	110
    33  000883  64                 	db	100
    34  000884  62                 	db	98
    35  000885  79                 	db	121
    36  000886  00                 	db	0
    37  000887  00                 	db	0
    38  000888  00                 	db	0
    39  000889  00                 	db	0
    40  00088A  00                 	db	0
    41  00088B  00                 	db	0
    42  00088C  00                 	db	0
    43  00088D  00                 	db	0
    44  00088E  00                 	db	0
    45  00088F  50                 	db	80
    46  000890  61                 	db	97
    47  000891  69                 	db	105
    48  000892  72                 	db	114
    49  000893  00                 	db	0
    50  000894  00                 	db	0
    51  000895  00                 	db	0
    52  000896  00                 	db	0
    53  000897  00                 	db	0
    54  000898  00                 	db	0
    55  000899  00                 	db	0
    56  00089A  00                 	db	0
    57  00089B  00                 	db	0
    58  00089C  00                 	db	0
    59  00089D  00                 	db	0
    60  00089E  00                 	db	0
    61  00089F  50                 	db	80
    62  0008A0  61                 	db	97
    63  0008A1  69                 	db	105
    64  0008A2  72                 	db	114
    65  0008A3  20                 	db	32
    66  0008A4  41                 	db	65
    67  0008A5  6C                 	db	108
    68  0008A6  6C                 	db	108
    69  0008A7  00                 	db	0
    70  0008A8  00                 	db	0
    71  0008A9  00                 	db	0
    72  0008AA  00                 	db	0
    73  0008AB  00                 	db	0
    74  0008AC  00                 	db	0
    75  0008AD  00                 	db	0
    76  0008AE  00                 	db	0
    77  0008AF  50                 	db	80
    78  0008B0  61                 	db	97
    79  0008B1  69                 	db	105
    80  0008B2  72                 	db	114
    81  0008B3  20                 	db	32
    82  0008B4  4E                 	db	78
    83  0008B5  6F                 	db	111
    84  0008B6  6E                 	db	110
    85  0008B7  65                 	db	101
    86  0008B8  00                 	db	0
    87  0008B9  00                 	db	0
    88  0008BA  00                 	db	0
    89  0008BB  00                 	db	0
    90  0008BC  00                 	db	0
    91  0008BD  00                 	db	0
    92  0008BE  00                 	db	0
    93  0008BF  42                 	db	66
    94  0008C0  61                 	db	97
    95  0008C1  63                 	db	99
    96  0008C2  6B                 	db	107
    97  0008C3  00                 	db	0
    98  0008C4  00                 	db	0
    99  0008C5  00                 	db	0
   100  0008C6  00                 	db	0
   101  0008C7  00                 	db	0
   102  0008C8  00                 	db	0
   103  0008C9  00                 	db	0
   104  0008CA  00                 	db	0
   105  0008CB  00                 	db	0
   106  0008CC  00                 	db	0
   107  0008CD  00                 	db	0
   108  0008CE  00                 	db	0
   109                           
   110                           ;initializer for DefaultMenu@F2827
   111  0008CF  04                 	db	4
   112  0008D0  09                 	db	9
   113  0008D1  0F                 	db	15
   114  0008D2  45                 	db	69
   115  0008D3  4C                 	db	76
   116  0008D4  00                 	db	0
   117  0008D5  00                 	db	0
   118  0008D6  00                 	db	0
   119  0008D7  00                 	db	0
   120  0008D8  00                 	db	0
   121  0008D9  00                 	db	0
   122                           
   123                           	psect	smallconst
   124  000100                     __psmallconst:
   125                           	opt stack 0
   126  000100  00                 	db	0
   127  000101                     _Default_Menu_Bitmaps:
   128                           	opt stack 0
   129  000101  0004               	dw	4
   130  000103  0004               	dw	4
   131  000105  0015               	dw	21
   132  000107  0011               	dw	17
   133  000109  0011               	dw	17
   134  00010B  000E               	dw	14
   135  00010D  0000               	dw	0
   136  00010F  001B               	dw	27
   137  000111  001B               	dw	27
   138  000113  000A               	dw	10
   139  000115  000E               	dw	14
   140  000117  000E               	dw	14
   141  000119  0011               	dw	17
   142  00011B  001F               	dw	31
   143  00011D  000E               	dw	14
   144  00011F  0004               	dw	4
   145  000121  000A               	dw	10
   146  000123  000A               	dw	10
   147  000125  000E               	dw	14
   148  000127  000E               	dw	14
   149  000129  000E               	dw	14
   150  00012B  0000               	dw	0
   151  00012D  000F               	dw	15
   152  00012F  000F               	dw	15
   153  000131  0001               	dw	1
   154  000133  000F               	dw	15
   155  000135  000F               	dw	15
   156  000137  0000               	dw	0
   157  000139  000E               	dw	14
   158  00013B  000E               	dw	14
   159  00013D  0006               	dw	6
   160  00013F  000A               	dw	10
   161  000141  000C               	dw	12
   162  000143  000E               	dw	14
   163  000145  000E               	dw	14
   164  000147  000E               	dw	14
   165  000149  000E               	dw	14
   166  00014B  000E               	dw	14
   167  00014D  000E               	dw	14
   168  00014F  000E               	dw	14
   169  000151  000E               	dw	14
   170  000153  0011               	dw	17
   171  000155  001F               	dw	31
   172  000157  001E               	dw	30
   173  000159  001D               	dw	29
   174  00015B  001B               	dw	27
   175  00015D  0017               	dw	23
   176  00015F  000F               	dw	15
   177  000161  001F               	dw	31
   178  000163  0000               	dw	0
   179  000165  0000               	dw	0
   180  000167  000A               	dw	10
   181  000169  000E               	dw	14
   182  00016B  0004               	dw	4
   183  00016D  0000               	dw	0
   184  00016F  0000               	dw	0
   185  000171                     __end_of_Default_Menu_Bitmaps:
   186                           	opt stack 0
   187  0000                     _ADCON1	set	4033
   188  0000                     _INTCONbits	set	4082
   189  0000                     _LATA	set	3977
   190  0000                     _LATAbits	set	3977
   191  0000                     _LATB	set	3978
   192  0000                     _LATBbits	set	3978
   193  0000                     _OSCCONbits	set	4051
   194  0000                     _PORTAbits	set	3968
   195  0000                     _RCONbits	set	4048
   196  0000                     _T0CON	set	4053
   197  0000                     _TMR0H	set	4055
   198  0000                     _TMR0L	set	4054
   199  0000                     _TRISA	set	3986
   200  0000                     _TRISB	set	3987
   201  000171                     STR_13:
   202  000171  20                 	db	32
   203  000172  20                 	db	32
   204  000173  20                 	db	32
   205  000174  20                 	db	32
   206  000175  20                 	db	32
   207  000176  20                 	db	32
   208  000177  20                 	db	32
   209  000178  20                 	db	32
   210  000179  20                 	db	32
   211  00017A  20                 	db	32
   212  00017B  20                 	db	32
   213  00017C  20                 	db	32
   214  00017D  20                 	db	32
   215  00017E  20                 	db	32
   216  00017F  20                 	db	32
   217  000180  20                 	db	32
   218  000181  00                 	db	0
   219  000182                     STR_2:
   220  000182  31                 	db	49	;'1'
   221  000183  32                 	db	50	;'2'
   222  000184  56                 	db	86	;'V'
   223  000185  3D                 	db	61	;'='
   224  000186  2F                 	db	47
   225  000187  20                 	db	32
   226  000188  35                 	db	53	;'5'
   227  000189  56                 	db	86	;'V'
   228  00018A  3D                 	db	61	;'='
   229  00018B  2F                 	db	47
   230  00018C  20                 	db	32
   231  00018D  33                 	db	51	;'3'
   232  00018E  56                 	db	86	;'V'
   233  00018F  33                 	db	51	;'3'
   234  000190  3D                 	db	61	;'='
   235  000191  2F                 	db	47
   236  000192  00                 	db	0
   237  000193                     STR_3:
   238  000193  2D                 	db	45
   239  000194  31                 	db	49	;'1'
   240  000195  32                 	db	50	;'2'
   241  000196  56                 	db	86	;'V'
   242  000197  3D                 	db	61	;'='
   243  000198  2F                 	db	47
   244  000199  20                 	db	32
   245  00019A  20                 	db	32
   246  00019B  20                 	db	32
   247  00019C  20                 	db	32
   248  00019D  20                 	db	32
   249  00019E  20                 	db	32
   250  00019F  4D                 	db	77	;'M'
   251  0001A0  45                 	db	69	;'E'
   252  0001A1  4E                 	db	78	;'N'
   253  0001A2  55                 	db	85	;'U'
   254  0001A3  00                 	db	0
   255  0001A4  20                 	db	32
   256  0001A5  20                 	db	32
   257  0001A6  20                 	db	32
   258  0001A7  20                 	db	32
   259  0001A8  53                 	db	83	;'S'
   260  0001A9  54                 	db	84	;'T'
   261  0001AA  41                 	db	65	;'A'
   262  0001AB  4E                 	db	78	;'N'
   263  0001AC  44                 	db	68	;'D'
   264  0001AD  42                 	db	66	;'B'
   265  0001AE  59                 	db	89	;'Y'
   266  0001AF  20                 	db	32
   267  0001B0  20                 	db	32
   268  0001B1  20                 	db	32
   269  0001B2  20                 	db	32
   270  0001B3  00                 	db	0
   271  0001B4                     STR_9:
   272  0001B4  3A                 	db	58	;':'
   273  0001B5  20                 	db	32
   274  0001B6  00                 	db	0
   275  0000                     
   276                           ; #config settings
   277  0001B7  00                 	db	0	; dummy byte at the end
   278  0000                     
   279                           	psect	cinit
   280  00092E                     __pcinit:
   281                           	opt stack 0
   282  00092E                     start_initialization:
   283                           	opt stack 0
   284  00092E                     __initialization:
   285                           	opt stack 0
   286                           
   287                           ; Clear objects allocated to COMRAM (2 bytes)
   288  00092E  6A7C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   289  000930  6A7B               	clrf	__pbssCOMRAM& (0+255),c
   290                           
   291                           ; Initialize objects allocated to BANK0 (92 bytes)
   292                           ; load TBLPTR registers with __pidataBANK0
   293  000932  0E7E               	movlw	low __pidataBANK0
   294  000934  6EF6               	movwf	tblptrl,c
   295  000936  0E08               	movlw	high __pidataBANK0
   296  000938  6EF7               	movwf	tblptrh,c
   297  00093A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   298  00093C  6EF8               	movwf	tblptru,c
   299  00093E  EE00  F080         	lfsr	0,__pdataBANK0
   300  000942  EE10 F05C          	lfsr	1,92
   301  000946                     copy_data0:
   302  000946  0009               	tblrd		*+
   303  000948  CFF5 FFEE          	movff	tablat,postinc0
   304  00094C  50E5               	movf	postdec1,w,c
   305  00094E  50E1               	movf	fsr1l,w,c
   306  000950  E1FA               	bnz	copy_data0
   307  000952                     end_of_initialization:
   308                           	opt stack 0
   309  000952                     __end_of__initialization:
   310                           	opt stack 0
   311  000952  0E00               	movlw	low (__Lmediumconst shr (0+16))
   312  000954  6EF8               	movwf	tblptru,c
   313  000956  0100               	movlb	0
   314  000958  EFDF  F003         	goto	_main	;jump to C main() function
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           postdec1	equ	0xFE5
   321                           fsr1l	equ	0xFE1
   322                           
   323                           	psect	bssCOMRAM
   324  00007B                     __pbssCOMRAM:
   325                           	opt stack 0
   326  00007B                     _CharacterBlink:
   327                           	opt stack 0
   328  00007B                     	ds	2
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	dataBANK0
   338  000080                     __pdataBANK0:
   339                           	opt stack 0
   340  000080                     OptMenu@F2840:
   341                           	opt stack 0
   342  000080                     	ds	81
   343  0000D1                     DefaultMenu@F2827:
   344                           	opt stack 0
   345  0000D1                     	ds	11
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	cstackCOMRAM
   355  000001                     __pcstackCOMRAM:
   356                           	opt stack 0
   357  000001                     ??_LCDdata:
   358  000001                     ?___wmul:
   359                           	opt stack 0
   360  000001                     ___wmul@multiplier:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x0
   364  000001                     	ds	1
   365  000002                     LCDdata@data:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x1
   369  000002                     	ds	1
   370  000003                     LCDdata@x:
   371                           	opt stack 0
   372  000003                     ___wmul@multiplicand:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x2
   376  000003                     	ds	2
   377  000005                     LCDwrchar@letter:
   378                           	opt stack 0
   379  000005                     LCDwrcmd@value:
   380                           	opt stack 0
   381  000005                     LCDsetaddr@add:
   382                           	opt stack 0
   383  000005                     ___wmul@product:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x4
   387  000005                     	ds	1
   388  000006                     LCDwrstring@string:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x5
   392  000006                     	ds	2
   393  000008                     ??_OptMenu:
   394                           
   395                           ; 0 bytes @ 0x7
   396  000008                     	ds	2
   397  00000A                     OptMenu@update:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x9
   401  00000A                     	ds	2
   402  00000C                     OptMenu@Menu:
   403                           	opt stack 0
   404                           
   405                           ; 81 bytes @ 0xB
   406  00000C                     	ds	81
   407  00005D                     ??_DefaultMenu:
   408                           
   409                           ; 0 bytes @ 0x5C
   410  00005D                     	ds	4
   411  000061                     _DefaultMenu$567:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x60
   415  000061                     	ds	2
   416  000063                     _DefaultMenu$569:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x62
   420  000063                     	ds	2
   421  000065                     _DefaultMenu$572:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x64
   425  000065                     	ds	2
   426  000067                     _DefaultMenu$574:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x66
   430  000067                     	ds	2
   431  000069                     DefaultMenu@x:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x68
   435  000069                     	ds	2
   436  00006B                     DefaultMenu@y:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x6A
   440  00006B                     	ds	2
   441  00006D                     DefaultMenu@last:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x6C
   445  00006D                     	ds	2
   446  00006F                     DefaultMenu@MenuItem:
   447                           	opt stack 0
   448                           
   449                           ; 11 bytes @ 0x6E
   450  00006F                     	ds	11
   451  00007A                     ??_main:
   452                           
   453                           ; 0 bytes @ 0x79
   454  00007A                     	ds	1
   455                           tblptru	equ	0xFF8
   456                           tblptrh	equ	0xFF7
   457                           tblptrl	equ	0xFF6
   458                           tablat	equ	0xFF5
   459                           postinc0	equ	0xFEE
   460                           postdec1	equ	0xFE5
   461                           fsr1l	equ	0xFE1
   462                           
   463 ;;
   464 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   465 ;;
   466 ;; *************** function _main *****************
   467 ;; Defined at:
   468 ;;		line 47 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  2   48[None  ] int 
   475 ;; Registers used:
   476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMRAM   BANK0
   482 ;;      Params:         0       0
   483 ;;      Locals:         0       0
   484 ;;      Temps:          1       0
   485 ;;      Totals:         1       0
   486 ;;Total ram usage:        1 bytes
   487 ;; Hardware stack levels required when called:    5
   488 ;; This function calls:
   489 ;;		_DefaultMenu
   490 ;;		_LCDwrcmd
   491 ;; This function is called by:
   492 ;;		Startup code after reset
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	text0
   497  0007BE                     __ptext0:
   498                           	opt stack 0
   499  0007BE                     _main:
   500                           	opt stack 26
   501                           
   502                           ;main.c: 53: OSCCONbits.IRCF0=1;
   503                           
   504                           ;incstack = 0
   505  0007BE  88D3               	bsf	4051,4,c	;volatile
   506                           
   507                           ;main.c: 54: OSCCONbits.IRCF1=1;
   508  0007C0  8AD3               	bsf	4051,5,c	;volatile
   509                           
   510                           ;main.c: 55: OSCCONbits.IRCF2=1;
   511  0007C2  8CD3               	bsf	4051,6,c	;volatile
   512                           
   513                           ;main.c: 67: TRISA=0b00010011;
   514  0007C4  0E13               	movlw	19
   515  0007C6  6E92               	movwf	3986,c	;volatile
   516                           
   517                           ;main.c: 68: LATA=0b00000000;
   518  0007C8  0E00               	movlw	0
   519  0007CA  6E89               	movwf	3977,c	;volatile
   520                           
   521                           ;main.c: 69: ADCON1=0b11111111;
   522  0007CC  68C1               	setf	4033,c	;volatile
   523                           
   524                           ;main.c: 71: TRISB=0b00000000;
   525  0007CE  0E00               	movlw	0
   526  0007D0  6E93               	movwf	3987,c	;volatile
   527                           
   528                           ;main.c: 72: LATB=0b00000000;
   529  0007D2  0E00               	movlw	0
   530  0007D4  6E8A               	movwf	3978,c	;volatile
   531                           
   532                           ;main.c: 74: LATAbits.LATA2=1;
   533  0007D6  8489               	bsf	3977,2,c	;volatile
   534                           
   535                           ;main.c: 75: LATBbits.LATB1=1;
   536  0007D8  828A               	bsf	3978,1,c	;volatile
   537                           
   538                           ;main.c: 76: LATBbits.LATB0=1;
   539  0007DA  808A               	bsf	3978,0,c	;volatile
   540                           
   541                           ;main.c: 77: LATBbits.LATB7=1;
   542  0007DC  8E8A               	bsf	3978,7,c	;volatile
   543                           
   544                           ;main.c: 78: LATBbits.LATB6=1;
   545  0007DE  8C8A               	bsf	3978,6,c	;volatile
   546                           
   547                           ;main.c: 83: RCONbits.IPEN=0;
   548  0007E0  9ED0               	bcf	4048,7,c	;volatile
   549                           
   550                           ;main.c: 93: TMR0L=0;
   551  0007E2  0E00               	movlw	0
   552  0007E4  6ED6               	movwf	4054,c	;volatile
   553                           
   554                           ;main.c: 94: TMR0H=0;
   555  0007E6  0E00               	movlw	0
   556  0007E8  6ED7               	movwf	4055,c	;volatile
   557                           
   558                           ;main.c: 95: T0CON=0b10010011;
   559  0007EA  0E93               	movlw	147
   560  0007EC  6ED5               	movwf	4053,c	;volatile
   561                           
   562                           ;main.c: 99: INTCONbits.TMR0IF=0;
   563  0007EE  94F2               	bcf	intcon,2,c	;volatile
   564                           
   565                           ;main.c: 105: LCDwrcmd(0b00111100);
   566  0007F0  0E3C               	movlw	60
   567  0007F2  ECDF  F004         	call	_LCDwrcmd
   568                           
   569                           ;main.c: 106: LCDwrcmd(0b00000110);
   570  0007F6  0E06               	movlw	6
   571  0007F8  ECDF  F004         	call	_LCDwrcmd
   572                           
   573                           ;main.c: 107: LCDwrcmd(0b00001100);
   574  0007FC  0E0C               	movlw	12
   575  0007FE  ECDF  F004         	call	_LCDwrcmd
   576                           
   577                           ;main.c: 108: LCDwrcmd(0b00000001);
   578  000802  0E01               	movlw	1
   579  000804  ECDF  F004         	call	_LCDwrcmd
   580                           
   581                           ;main.c: 109: _delay((unsigned long)((2)*(0x7A1200/4000.0)));
   582  000808  0E06               	movlw	6
   583  00080A  6E7A               	movwf	??_main& (0+255),c
   584  00080C  0E30               	movlw	48
   585  00080E                     u1257:
   586  00080E  2EE8               	decfsz	wreg,f,c
   587  000810  D7FE               	goto	u1257
   588  000812  2E7A               	decfsz	??_main& (0+255),f,c
   589  000814  D7FC               	goto	u1257
   590  000816  D000               	nop2	
   591                           
   592                           ;main.c: 112: DefaultMenu();
   593  000818  ECDC  F000         	call	_DefaultMenu	;wreg free
   594  00081C  EF01  F000         	goto	start
   595  000820                     __end_of_main:
   596                           	opt stack 0
   597                           tblptru	equ	0xFF8
   598                           tblptrh	equ	0xFF7
   599                           tblptrl	equ	0xFF6
   600                           tablat	equ	0xFF5
   601                           intcon	equ	0xFF2
   602                           postinc0	equ	0xFEE
   603                           wreg	equ	0xFE8
   604                           postdec1	equ	0xFE5
   605                           fsr1l	equ	0xFE1
   606                           
   607 ;; *************** function _DefaultMenu *****************
   608 ;; Defined at:
   609 ;;		line 160 in file "main.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  MenuItem       11  110[COMRAM] struct MenuDisplay
   614 ;;  last            2  108[COMRAM] int 
   615 ;;  y               2  106[COMRAM] int 
   616 ;;  x               2  104[COMRAM] int 
   617 ;; Return value:  Size  Location     Type
   618 ;;		None               void
   619 ;; Registers used:
   620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0
   626 ;;      Params:         0       0
   627 ;;      Locals:        25       0
   628 ;;      Temps:          4       0
   629 ;;      Totals:        29       0
   630 ;;Total ram usage:       29 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    4
   633 ;; This function calls:
   634 ;;		_LCDsetaddr
   635 ;;		_LCDwrchar
   636 ;;		_LCDwrcmd
   637 ;;		_LCDwrstring
   638 ;;		_OptMenu
   639 ;;		___wmul
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text1
   646  0001B8                     __ptext1:
   647                           	opt stack 0
   648  0001B8                     _DefaultMenu:
   649                           	opt stack 26
   650                           
   651                           ;main.c: 165: int x,y;
   652                           ;main.c: 166: int last=0;
   653                           
   654                           ;incstack = 0
   655  0001B8  0E00               	movlw	0
   656  0001BA  6E6E               	movwf	DefaultMenu@last+1,c
   657  0001BC  0E00               	movlw	0
   658  0001BE  6E6D               	movwf	DefaultMenu@last,c
   659                           
   660                           ;main.c: 168: struct MenuDisplay {
   661                           ;main.c: 169: unsigned char Addr[5];
   662                           ;main.c: 170: unsigned char CurrentSelect;
   663                           ;main.c: 171: unsigned char ONorOFF[5];
   664                           ;main.c: 172: };
   665                           ;main.c: 174: struct MenuDisplay MenuItem = {
   666                           ;main.c: 175: 0x04,0x09,0x0F,0x45,0x4C,
   667                           ;main.c: 176: 0,
   668                           ;main.c: 177: 0,0,0,0,0
   669                           ;main.c: 178: };
   670  0001C0  EE20  F0D1         	lfsr	2,DefaultMenu@F2827
   671  0001C4  EE10  F06F         	lfsr	1,DefaultMenu@MenuItem
   672  0001C8  0E0A               	movlw	10
   673  0001CA                     u851:
   674  0001CA  CFDB FFE3          	movff	plusw2,plusw1
   675  0001CE  06E8               	decf	wreg,f,c
   676  0001D0  E2FC               	bc	u851
   677                           
   678                           ;main.c: 183: for(y=0;y<8;y++)
   679  0001D2  0E00               	movlw	0
   680  0001D4  6E6C               	movwf	DefaultMenu@y+1,c
   681  0001D6  0E00               	movlw	0
   682  0001D8  6E6B               	movwf	DefaultMenu@y,c
   683  0001DA                     l1307:
   684  0001DA  BE6C               	btfsc	DefaultMenu@y+1,7,c
   685  0001DC  D008               	goto	l1311
   686  0001DE  506C               	movf	DefaultMenu@y+1,w,c
   687  0001E0  E148               	bnz	l1329
   688  0001E2  0E08               	movlw	8
   689  0001E4  5C6B               	subwf	DefaultMenu@y,w,c
   690  0001E6  B0D8               	btfsc	status,0,c
   691  0001E8  D044               	goto	l1329
   692  0001EA  D001               	goto	l1311
   693  0001EC  D042               	goto	l1329
   694  0001EE                     l1311:
   695                           
   696                           ;main.c: 184: for(x=0;x<7;x++)
   697  0001EE  0E00               	movlw	0
   698  0001F0  6E6A               	movwf	DefaultMenu@x+1,c
   699  0001F2  0E00               	movlw	0
   700  0001F4  6E69               	movwf	DefaultMenu@x,c
   701  0001F6                     l1313:
   702  0001F6  BE6A               	btfsc	DefaultMenu@x+1,7,c
   703  0001F8  D008               	goto	l1317
   704  0001FA  506A               	movf	DefaultMenu@x+1,w,c
   705  0001FC  E136               	bnz	l1325
   706  0001FE  0E07               	movlw	7
   707  000200  5C69               	subwf	DefaultMenu@x,w,c
   708  000202  B0D8               	btfsc	status,0,c
   709  000204  D032               	goto	l1325
   710  000206  D001               	goto	l1317
   711  000208  D030               	goto	l1325
   712  00020A                     l1317:
   713                           
   714                           ;main.c: 185: {
   715                           ;main.c: 186: LCDwrcmd((0b01000000|x)|(y<<3));
   716  00020A  386B               	swapf	DefaultMenu@y,w,c
   717  00020C  42E8               	rrncf	wreg,f,c
   718  00020E  0BF8               	andlw	248
   719  000210  1069               	iorwf	DefaultMenu@x,w,c
   720  000212  0940               	iorlw	64
   721  000214  ECDF  F004         	call	_LCDwrcmd
   722                           
   723                           ;main.c: 187: LCDwrchar(Default_Menu_Bitmaps[y][x]);
   724  000218  C069  F05D         	movff	DefaultMenu@x,??_DefaultMenu
   725  00021C  C06A  F05E         	movff	DefaultMenu@x+1,??_DefaultMenu+1
   726  000220  90D8               	bcf	status,0,c
   727  000222  365D               	rlcf	??_DefaultMenu,f,c
   728  000224  365E               	rlcf	??_DefaultMenu+1,f,c
   729  000226  C06B  F001         	movff	DefaultMenu@y,___wmul@multiplier
   730  00022A  C06C  F002         	movff	DefaultMenu@y+1,___wmul@multiplier+1
   731  00022E  0E00               	movlw	0
   732  000230  6E04               	movwf	___wmul@multiplicand+1,c
   733  000232  0E0E               	movlw	14
   734  000234  6E03               	movwf	___wmul@multiplicand,c
   735  000236  ECAE  F004         	call	___wmul	;wreg free
   736  00023A  0E01               	movlw	low _Default_Menu_Bitmaps
   737  00023C  6E5F               	movwf	(??_DefaultMenu+2)& (0+255),c
   738  00023E  0E01               	movlw	high _Default_Menu_Bitmaps
   739  000240  6E60               	movwf	(??_DefaultMenu+3)& (0+255),c
   740  000242  5001               	movf	?___wmul,w,c
   741  000244  265F               	addwf	??_DefaultMenu+2,f,c
   742  000246  5002               	movf	?___wmul+1,w,c
   743  000248  2260               	addwfc	??_DefaultMenu+3,f,c
   744  00024A  505D               	movf	??_DefaultMenu,w,c
   745  00024C  265F               	addwf	??_DefaultMenu+2,f,c
   746  00024E  505E               	movf	??_DefaultMenu+1,w,c
   747  000250  2260               	addwfc	??_DefaultMenu+3,f,c
   748  000252  C05F  FFF6         	movff	??_DefaultMenu+2,tblptrl
   749  000256  C060  FFF7         	movff	??_DefaultMenu+3,tblptrh
   750  00025A                     	if	0	;tblptru may be non-zero
   751  00025A                     	endif
   752  00025A                     	if	0	;tblptru may be non-zero
   753  00025A                     	endif
   754  00025A  0008               	tblrd		*
   755  00025C  50F5               	movf	tablat,w,c
   756  00025E  ECD1  F004         	call	_LCDwrchar
   757  000262  4A69               	infsnz	DefaultMenu@x,f,c
   758  000264  2A6A               	incf	DefaultMenu@x+1,f,c
   759  000266  D7C7               	goto	l1313
   760  000268  D000               	goto	l1325
   761  00026A                     l1325:
   762  00026A  4A6B               	infsnz	DefaultMenu@y,f,c
   763  00026C  2A6C               	incf	DefaultMenu@y+1,f,c
   764  00026E  D7B5               	goto	l1307
   765  000270  D000               	goto	l1329
   766  000272                     l1329:
   767                           
   768                           ;main.c: 188: }
   769                           ;main.c: 189: LCDsetaddr(0);
   770  000272  0E00               	movlw	0
   771  000274  ECC2  F004         	call	_LCDsetaddr
   772                           
   773                           ;main.c: 191: LCDwrstring("12V=/ 5V=/ 3V3=/");
   774  000278  0E82               	movlw	low STR_2
   775  00027A  6E06               	movwf	LCDwrstring@string,c
   776  00027C  0E01               	movlw	high STR_2
   777  00027E  6E07               	movwf	LCDwrstring@string+1,c
   778  000280  EC6D  F004         	call	_LCDwrstring	;wreg free
   779                           
   780                           ;main.c: 192: LCDsetaddr(0x40);
   781  000284  0E40               	movlw	64
   782  000286  ECC2  F004         	call	_LCDsetaddr
   783                           
   784                           ;main.c: 193: LCDwrstring("-12V=/      MENU");
   785  00028A  0E93               	movlw	low STR_3
   786  00028C  6E06               	movwf	LCDwrstring@string,c
   787  00028E  0E01               	movlw	high STR_3
   788  000290  6E07               	movwf	LCDwrstring@string+1,c
   789  000292  EC6D  F004         	call	_LCDwrstring	;wreg free
   790  000296  D000               	goto	l1335
   791  000298                     l1335:
   792                           
   793                           ;main.c: 201: if(PORTAbits.RA4==1) {
   794  000298  A880               	btfss	3968,4,c	;volatile
   795  00029A  D047               	goto	l80
   796                           
   797                           ;main.c: 202: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
   798  00029C  0E20               	movlw	32
   799  00029E  6E5D               	movwf	??_DefaultMenu& (0+255),c
   800  0002A0  0E2A               	movlw	42
   801  0002A2                     u1267:
   802  0002A2  2EE8               	decfsz	wreg,f,c
   803  0002A4  D7FE               	goto	u1267
   804  0002A6  2E5D               	decfsz	??_DefaultMenu& (0+255),f,c
   805  0002A8  D7FC               	goto	u1267
   806                           
   807                           ;main.c: 203: if(PORTAbits.RA4==1) {
   808  0002AA  A880               	btfss	3968,4,c	;volatile
   809  0002AC  D03E               	goto	l80
   810                           
   811                           ;main.c: 204: LCDsetaddr(MenuItem.Addr[MenuItem.CurrentSelect]);
   812  0002AE  5074               	movf	DefaultMenu@MenuItem+5,w,c
   813  0002B0  0D01               	mullw	1
   814  0002B2  0E6F               	movlw	low DefaultMenu@MenuItem
   815  0002B4  24F3               	addwf	prodl,w,c
   816  0002B6  6ED9               	movwf	fsr2l,c
   817  0002B8  0E00               	movlw	high DefaultMenu@MenuItem
   818  0002BA  20F4               	addwfc	prodh,w,c
   819  0002BC  6EDA               	movwf	fsr2h,c
   820  0002BE  50DF               	movf	indf2,w,c
   821  0002C0  ECC2  F004         	call	_LCDsetaddr
   822                           
   823                           ;main.c: 205: if(MenuItem.CurrentSelect==4)
   824  0002C4  0E04               	movlw	4
   825  0002C6  1874               	xorwf	DefaultMenu@MenuItem+5,w,c
   826  0002C8  A4D8               	btfss	status,2,c
   827  0002CA  D007               	goto	l1347
   828                           
   829                           ;main.c: 206: LCDwrstring("MENU");
   830  0002CC  0E9F               	movlw	low (STR_3+12)
   831  0002CE  6E06               	movwf	LCDwrstring@string,c
   832  0002D0  0E01               	movlw	high (STR_3+12)
   833  0002D2  6E07               	movwf	LCDwrstring@string+1,c
   834  0002D4  EC6D  F004         	call	_LCDwrstring	;wreg free
   835  0002D8  D01C               	goto	l1355
   836  0002DA                     l1347:
   837                           
   838                           ;main.c: 207: else
   839                           ;main.c: 208: LCDwrchar(MenuItem.ONorOFF[MenuItem.CurrentSelect] ? 0x00:0x2F);
   840  0002DA  5074               	movf	DefaultMenu@MenuItem+5,w,c
   841  0002DC  0D01               	mullw	1
   842  0002DE  0E06               	movlw	6
   843  0002E0  26F3               	addwf	prodl,f,c
   844  0002E2  0E00               	movlw	0
   845  0002E4  22F4               	addwfc	prodh,f,c
   846  0002E6  0E6F               	movlw	low DefaultMenu@MenuItem
   847  0002E8  24F3               	addwf	prodl,w,c
   848  0002EA  6ED9               	movwf	fsr2l,c
   849  0002EC  0E00               	movlw	high DefaultMenu@MenuItem
   850  0002EE  20F4               	addwfc	prodh,w,c
   851  0002F0  6EDA               	movwf	fsr2h,c
   852  0002F2  50DF               	movf	indf2,w,c
   853  0002F4  A4D8               	btfss	status,2,c
   854  0002F6  D004               	goto	l1351
   855  0002F8  0E00               	movlw	0
   856  0002FA  6E62               	movwf	_DefaultMenu$567+1,c
   857  0002FC  0E2F               	movlw	47
   858  0002FE  D003               	goto	L1
   859  000300                     l1351:
   860  000300  0E00               	movlw	0
   861  000302  6E62               	movwf	_DefaultMenu$567+1,c
   862  000304  0E00               	movlw	0
   863  000306                     L1:
   864  000306  6E61               	movwf	_DefaultMenu$567,c
   865  000308  D000               	goto	l1353
   866  00030A                     l1353:
   867  00030A  5061               	movf	_DefaultMenu$567,w,c
   868  00030C  ECD1  F004         	call	_LCDwrchar
   869  000310  D000               	goto	l1355
   870  000312                     l1355:
   871                           
   872                           ;main.c: 213: MenuItem.CurrentSelect++;
   873  000312  2A74               	incf	DefaultMenu@MenuItem+5,f,c
   874                           
   875                           ;main.c: 214: if(MenuItem.CurrentSelect==5)
   876  000314  0E05               	movlw	5
   877  000316  1874               	xorwf	DefaultMenu@MenuItem+5,w,c
   878  000318  A4D8               	btfss	status,2,c
   879  00031A  D003               	goto	l89
   880                           
   881                           ;main.c: 215: MenuItem.CurrentSelect=0;
   882  00031C  0E00               	movlw	0
   883  00031E  6E74               	movwf	DefaultMenu@MenuItem+5,c
   884                           
   885                           ;main.c: 216: while(PORTAbits.RA4==1);
   886  000320  D000               	goto	l89
   887  000322                     l89:
   888  000322  A880               	btfss	3968,4,c	;volatile
   889  000324  D002               	goto	l80
   890  000326  D7FD               	goto	l89
   891  000328  D000               	goto	l80
   892  00032A                     l80:
   893                           
   894                           ;main.c: 217: }
   895                           ;main.c: 218: }
   896                           ;main.c: 220: if(PORTAbits.RA1==1) {
   897  00032A  A280               	btfss	3968,1,c	;volatile
   898  00032C  D047               	goto	l92
   899                           
   900                           ;main.c: 221: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
   901  00032E  0E20               	movlw	32
   902  000330  6E5D               	movwf	??_DefaultMenu& (0+255),c
   903  000332  0E2A               	movlw	42
   904  000334                     u1277:
   905  000334  2EE8               	decfsz	wreg,f,c
   906  000336  D7FE               	goto	u1277
   907  000338  2E5D               	decfsz	??_DefaultMenu& (0+255),f,c
   908  00033A  D7FC               	goto	u1277
   909                           
   910                           ;main.c: 222: if(PORTAbits.RA1==1) {
   911  00033C  A280               	btfss	3968,1,c	;volatile
   912  00033E  D03E               	goto	l92
   913                           
   914                           ;main.c: 223: LCDsetaddr(MenuItem.Addr[MenuItem.CurrentSelect]);
   915  000340  5074               	movf	DefaultMenu@MenuItem+5,w,c
   916  000342  0D01               	mullw	1
   917  000344  0E6F               	movlw	low DefaultMenu@MenuItem
   918  000346  24F3               	addwf	prodl,w,c
   919  000348  6ED9               	movwf	fsr2l,c
   920  00034A  0E00               	movlw	high DefaultMenu@MenuItem
   921  00034C  20F4               	addwfc	prodh,w,c
   922  00034E  6EDA               	movwf	fsr2h,c
   923  000350  50DF               	movf	indf2,w,c
   924  000352  ECC2  F004         	call	_LCDsetaddr
   925                           
   926                           ;main.c: 224: if(MenuItem.CurrentSelect==4)
   927  000356  0E04               	movlw	4
   928  000358  1874               	xorwf	DefaultMenu@MenuItem+5,w,c
   929  00035A  A4D8               	btfss	status,2,c
   930  00035C  D007               	goto	l1371
   931                           
   932                           ;main.c: 225: LCDwrstring("MENU");
   933  00035E  0E9F               	movlw	low (STR_3+12)
   934  000360  6E06               	movwf	LCDwrstring@string,c
   935  000362  0E01               	movlw	high (STR_3+12)
   936  000364  6E07               	movwf	LCDwrstring@string+1,c
   937  000366  EC6D  F004         	call	_LCDwrstring	;wreg free
   938  00036A  D01C               	goto	l1379
   939  00036C                     l1371:
   940                           
   941                           ;main.c: 226: else
   942                           ;main.c: 227: LCDwrchar(MenuItem.ONorOFF[MenuItem.CurrentSelect] ? 0x00:0x2F);
   943  00036C  5074               	movf	DefaultMenu@MenuItem+5,w,c
   944  00036E  0D01               	mullw	1
   945  000370  0E06               	movlw	6
   946  000372  26F3               	addwf	prodl,f,c
   947  000374  0E00               	movlw	0
   948  000376  22F4               	addwfc	prodh,f,c
   949  000378  0E6F               	movlw	low DefaultMenu@MenuItem
   950  00037A  24F3               	addwf	prodl,w,c
   951  00037C  6ED9               	movwf	fsr2l,c
   952  00037E  0E00               	movlw	high DefaultMenu@MenuItem
   953  000380  20F4               	addwfc	prodh,w,c
   954  000382  6EDA               	movwf	fsr2h,c
   955  000384  50DF               	movf	indf2,w,c
   956  000386  A4D8               	btfss	status,2,c
   957  000388  D004               	goto	l1375
   958  00038A  0E00               	movlw	0
   959  00038C  6E64               	movwf	_DefaultMenu$569+1,c
   960  00038E  0E2F               	movlw	47
   961  000390  D003               	goto	L2
   962  000392                     l1375:
   963  000392  0E00               	movlw	0
   964  000394  6E64               	movwf	_DefaultMenu$569+1,c
   965  000396  0E00               	movlw	0
   966  000398                     L2:
   967  000398  6E63               	movwf	_DefaultMenu$569,c
   968  00039A  D000               	goto	l1377
   969  00039C                     l1377:
   970  00039C  5063               	movf	_DefaultMenu$569,w,c
   971  00039E  ECD1  F004         	call	_LCDwrchar
   972  0003A2  D000               	goto	l1379
   973  0003A4                     l1379:
   974                           
   975                           ;main.c: 232: if(MenuItem.CurrentSelect==0)
   976  0003A4  5074               	movf	DefaultMenu@MenuItem+5,w,c
   977  0003A6  A4D8               	btfss	status,2,c
   978  0003A8  D003               	goto	l1383
   979                           
   980                           ;main.c: 233: MenuItem.CurrentSelect=5;
   981  0003AA  0E05               	movlw	5
   982  0003AC  6E74               	movwf	DefaultMenu@MenuItem+5,c
   983  0003AE  D000               	goto	l1383
   984  0003B0                     l1383:
   985                           
   986                           ;main.c: 234: MenuItem.CurrentSelect--;
   987  0003B0  0674               	decf	DefaultMenu@MenuItem+5,f,c
   988                           
   989                           ;main.c: 235: while(PORTAbits.RA1==1);
   990  0003B2  D000               	goto	l101
   991  0003B4                     l101:
   992  0003B4  A280               	btfss	3968,1,c	;volatile
   993  0003B6  D002               	goto	l92
   994  0003B8  D7FD               	goto	l101
   995  0003BA  D000               	goto	l92
   996  0003BC                     l92:
   997                           
   998                           ;main.c: 236: }
   999                           ;main.c: 237: }
  1000                           ;main.c: 239: if(PORTAbits.RA0==1) {
  1001  0003BC  A080               	btfss	3968,0,c	;volatile
  1002  0003BE  D0CA               	goto	l104
  1003                           
  1004                           ;main.c: 240: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
  1005  0003C0  0E20               	movlw	32
  1006  0003C2  6E5D               	movwf	??_DefaultMenu& (0+255),c
  1007  0003C4  0E2A               	movlw	42
  1008  0003C6                     u1287:
  1009  0003C6  2EE8               	decfsz	wreg,f,c
  1010  0003C8  D7FE               	goto	u1287
  1011  0003CA  2E5D               	decfsz	??_DefaultMenu& (0+255),f,c
  1012  0003CC  D7FC               	goto	u1287
  1013                           
  1014                           ;main.c: 241: if(PORTAbits.RA0==1) {
  1015  0003CE  A080               	btfss	3968,0,c	;volatile
  1016  0003D0  D0C1               	goto	l104
  1017                           
  1018                           ;main.c: 242: if(MenuItem.CurrentSelect==4) {
  1019  0003D2  0E04               	movlw	4
  1020  0003D4  1874               	xorwf	DefaultMenu@MenuItem+5,w,c
  1021  0003D6  A4D8               	btfss	status,2,c
  1022  0003D8  D015               	goto	l1401
  1023                           
  1024                           ;main.c: 243: OptMenu();
  1025  0003DA  EC0A  F003         	call	_OptMenu	;wreg free
  1026                           
  1027                           ;main.c: 244: LCDsetaddr(0);
  1028  0003DE  0E00               	movlw	0
  1029  0003E0  ECC2  F004         	call	_LCDsetaddr
  1030                           
  1031                           ;main.c: 245: LCDwrstring("12V=/ 5V=/ 3V3=/");
  1032  0003E4  0E82               	movlw	low STR_2
  1033  0003E6  6E06               	movwf	LCDwrstring@string,c
  1034  0003E8  0E01               	movlw	high STR_2
  1035  0003EA  6E07               	movwf	LCDwrstring@string+1,c
  1036  0003EC  EC6D  F004         	call	_LCDwrstring	;wreg free
  1037                           
  1038                           ;main.c: 246: LCDsetaddr(0x40);
  1039  0003F0  0E40               	movlw	64
  1040  0003F2  ECC2  F004         	call	_LCDsetaddr
  1041                           
  1042                           ;main.c: 247: LCDwrstring("-12V=/      MENU");
  1043  0003F6  0E93               	movlw	low STR_3
  1044  0003F8  6E06               	movwf	LCDwrstring@string,c
  1045  0003FA  0E01               	movlw	high STR_3
  1046  0003FC  6E07               	movwf	LCDwrstring@string+1,c
  1047  0003FE  EC6D  F004         	call	_LCDwrstring	;wreg free
  1048                           
  1049                           ;main.c: 248: }
  1050  000402  D0A4               	goto	l118
  1051  000404                     l1401:
  1052                           
  1053                           ;main.c: 249: else {
  1054                           ;main.c: 250: MenuItem.ONorOFF[MenuItem.CurrentSelect]=~MenuItem.ONorOFF[MenuItem.Curren
      +                          tSelect];
  1055  000404  5074               	movf	DefaultMenu@MenuItem+5,w,c
  1056  000406  0D01               	mullw	1
  1057  000408  0E06               	movlw	6
  1058  00040A  26F3               	addwf	prodl,f,c
  1059  00040C  0E00               	movlw	0
  1060  00040E  22F4               	addwfc	prodh,f,c
  1061  000410  0E6F               	movlw	low DefaultMenu@MenuItem
  1062  000412  24F3               	addwf	prodl,w,c
  1063  000414  6ED9               	movwf	fsr2l,c
  1064  000416  0E00               	movlw	high DefaultMenu@MenuItem
  1065  000418  20F4               	addwfc	prodh,w,c
  1066  00041A  6EDA               	movwf	fsr2h,c
  1067  00041C  5074               	movf	DefaultMenu@MenuItem+5,w,c
  1068  00041E  0D01               	mullw	1
  1069  000420  0E06               	movlw	6
  1070  000422  26F3               	addwf	prodl,f,c
  1071  000424  0E00               	movlw	0
  1072  000426  22F4               	addwfc	prodh,f,c
  1073  000428  0E6F               	movlw	low DefaultMenu@MenuItem
  1074  00042A  24F3               	addwf	prodl,w,c
  1075  00042C  6EE1               	movwf	fsr1l,c
  1076  00042E  0E00               	movlw	high DefaultMenu@MenuItem
  1077  000430  20F4               	addwfc	prodh,w,c
  1078  000432  6EE2               	movwf	fsr1h,c
  1079  000434  50E7               	movf	indf1,w,c
  1080  000436  0AFF               	xorlw	255
  1081  000438  6EDF               	movwf	indf2,c
  1082                           
  1083                           ;main.c: 252: LCDsetaddr(MenuItem.Addr[MenuItem.CurrentSelect]);
  1084  00043A  5074               	movf	DefaultMenu@MenuItem+5,w,c
  1085  00043C  0D01               	mullw	1
  1086  00043E  0E6F               	movlw	low DefaultMenu@MenuItem
  1087  000440  24F3               	addwf	prodl,w,c
  1088  000442  6ED9               	movwf	fsr2l,c
  1089  000444  0E00               	movlw	high DefaultMenu@MenuItem
  1090  000446  20F4               	addwfc	prodh,w,c
  1091  000448  6EDA               	movwf	fsr2h,c
  1092  00044A  50DF               	movf	indf2,w,c
  1093  00044C  ECC2  F004         	call	_LCDsetaddr
  1094                           
  1095                           ;main.c: 253: LCDwrchar(MenuItem.ONorOFF[MenuItem.CurrentSelect] ? 0x00:0x2F);
  1096  000450  5074               	movf	DefaultMenu@MenuItem+5,w,c
  1097  000452  0D01               	mullw	1
  1098  000454  0E06               	movlw	6
  1099  000456  26F3               	addwf	prodl,f,c
  1100  000458  0E00               	movlw	0
  1101  00045A  22F4               	addwfc	prodh,f,c
  1102  00045C  0E6F               	movlw	low DefaultMenu@MenuItem
  1103  00045E  24F3               	addwf	prodl,w,c
  1104  000460  6ED9               	movwf	fsr2l,c
  1105  000462  0E00               	movlw	high DefaultMenu@MenuItem
  1106  000464  20F4               	addwfc	prodh,w,c
  1107  000466  6EDA               	movwf	fsr2h,c
  1108  000468  50DF               	movf	indf2,w,c
  1109  00046A  A4D8               	btfss	status,2,c
  1110  00046C  D004               	goto	l1409
  1111  00046E  0E00               	movlw	0
  1112  000470  6E66               	movwf	_DefaultMenu$572+1,c
  1113  000472  0E2F               	movlw	47
  1114  000474  D003               	goto	L3
  1115  000476                     l1409:
  1116  000476  0E00               	movlw	0
  1117  000478  6E66               	movwf	_DefaultMenu$572+1,c
  1118  00047A  0E00               	movlw	0
  1119  00047C                     L3:
  1120  00047C  6E65               	movwf	_DefaultMenu$572,c
  1121  00047E  D000               	goto	l1411
  1122  000480                     l1411:
  1123  000480  5065               	movf	_DefaultMenu$572,w,c
  1124  000482  ECD1  F004         	call	_LCDwrchar
  1125                           
  1126                           ;main.c: 255: switch(MenuItem.CurrentSelect) {
  1127  000486  D054               	goto	l1423
  1128  000488                     l1413:
  1129                           
  1130                           ;main.c: 257: LATBbits.LATB1=~MenuItem.ONorOFF[MenuItem.CurrentSelect];
  1131  000488  5074               	movf	DefaultMenu@MenuItem+5,w,c
  1132  00048A  0D01               	mullw	1
  1133  00048C  0E06               	movlw	6
  1134  00048E  26F3               	addwf	prodl,f,c
  1135  000490  0E00               	movlw	0
  1136  000492  22F4               	addwfc	prodh,f,c
  1137  000494  0E6F               	movlw	low DefaultMenu@MenuItem
  1138  000496  24F3               	addwf	prodl,w,c
  1139  000498  6ED9               	movwf	fsr2l,c
  1140  00049A  0E00               	movlw	high DefaultMenu@MenuItem
  1141  00049C  20F4               	addwfc	prodh,w,c
  1142  00049E  6EDA               	movwf	fsr2h,c
  1143  0004A0  50DF               	movf	indf2,w,c
  1144  0004A2  0AFF               	xorlw	255
  1145  0004A4  6E5D               	movwf	??_DefaultMenu& (0+255),c
  1146  0004A6  465D               	rlncf	??_DefaultMenu,f,c
  1147  0004A8  508A               	movf	3978,w,c	;volatile
  1148  0004AA  185D               	xorwf	??_DefaultMenu,w,c
  1149  0004AC  0BFD               	andlw	-3
  1150  0004AE  D03D               	goto	L6
  1151  0004B0                     l1415:
  1152                           
  1153                           ;main.c: 260: LATBbits.LATB7=~MenuItem.ONorOFF[MenuItem.CurrentSelect];
  1154  0004B0  5074               	movf	DefaultMenu@MenuItem+5,w,c
  1155  0004B2  0D01               	mullw	1
  1156  0004B4  0E06               	movlw	6
  1157  0004B6  26F3               	addwf	prodl,f,c
  1158  0004B8  0E00               	movlw	0
  1159  0004BA  22F4               	addwfc	prodh,f,c
  1160  0004BC  0E6F               	movlw	low DefaultMenu@MenuItem
  1161  0004BE  24F3               	addwf	prodl,w,c
  1162  0004C0  6ED9               	movwf	fsr2l,c
  1163  0004C2  0E00               	movlw	high DefaultMenu@MenuItem
  1164  0004C4  20F4               	addwfc	prodh,w,c
  1165  0004C6  6EDA               	movwf	fsr2h,c
  1166  0004C8  50DF               	movf	indf2,w,c
  1167  0004CA  0AFF               	xorlw	255
  1168  0004CC  6E5D               	movwf	??_DefaultMenu& (0+255),c
  1169  0004CE  325D               	rrcf	??_DefaultMenu,f,c
  1170  0004D0  325D               	rrcf	??_DefaultMenu,f,c
  1171  0004D2  508A               	movf	3978,w,c	;volatile
  1172  0004D4  185D               	xorwf	??_DefaultMenu,w,c
  1173  0004D6  0B7F               	andlw	-129
  1174  0004D8  D028               	goto	L6
  1175  0004DA                     l1417:
  1176                           
  1177                           ;main.c: 263: LATBbits.LATB6=~MenuItem.ONorOFF[MenuItem.CurrentSelect];
  1178  0004DA  5074               	movf	DefaultMenu@MenuItem+5,w,c
  1179  0004DC  0D01               	mullw	1
  1180  0004DE  0E06               	movlw	6
  1181  0004E0  26F3               	addwf	prodl,f,c
  1182  0004E2  0E00               	movlw	0
  1183  0004E4  22F4               	addwfc	prodh,f,c
  1184  0004E6  0E6F               	movlw	low DefaultMenu@MenuItem
  1185  0004E8  24F3               	addwf	prodl,w,c
  1186  0004EA  6ED9               	movwf	fsr2l,c
  1187  0004EC  0E00               	movlw	high DefaultMenu@MenuItem
  1188  0004EE  20F4               	addwfc	prodh,w,c
  1189  0004F0  6EDA               	movwf	fsr2h,c
  1190  0004F2  50DF               	movf	indf2,w,c
  1191  0004F4  0AFF               	xorlw	255
  1192  0004F6  6E5D               	movwf	??_DefaultMenu& (0+255),c
  1193  0004F8  3A5D               	swapf	??_DefaultMenu,f,c
  1194  0004FA  465D               	rlncf	??_DefaultMenu,f,c
  1195  0004FC  465D               	rlncf	??_DefaultMenu,f,c
  1196  0004FE  508A               	movf	3978,w,c	;volatile
  1197  000500  185D               	xorwf	??_DefaultMenu,w,c
  1198  000502  0BBF               	andlw	-65
  1199  000504  D012               	goto	L6
  1200  000506                     l1419:
  1201                           
  1202                           ;main.c: 266: LATBbits.LATB0=~MenuItem.ONorOFF[MenuItem.CurrentSelect];
  1203  000506  5074               	movf	DefaultMenu@MenuItem+5,w,c
  1204  000508  0D01               	mullw	1
  1205  00050A  0E06               	movlw	6
  1206  00050C  26F3               	addwf	prodl,f,c
  1207  00050E  0E00               	movlw	0
  1208  000510  22F4               	addwfc	prodh,f,c
  1209  000512  0E6F               	movlw	low DefaultMenu@MenuItem
  1210  000514  24F3               	addwf	prodl,w,c
  1211  000516  6ED9               	movwf	fsr2l,c
  1212  000518  0E00               	movlw	high DefaultMenu@MenuItem
  1213  00051A  20F4               	addwfc	prodh,w,c
  1214  00051C  6EDA               	movwf	fsr2h,c
  1215  00051E  50DF               	movf	indf2,w,c
  1216  000520  0AFF               	xorlw	255
  1217  000522  6E5D               	movwf	??_DefaultMenu& (0+255),c
  1218  000524  508A               	movf	3978,w,c	;volatile
  1219  000526  185D               	xorwf	??_DefaultMenu,w,c
  1220  000528  0BFE               	andlw	-2
  1221  00052A                     L6:
  1222  00052A  185D               	xorwf	??_DefaultMenu,w,c
  1223  00052C  6E8A               	movwf	3978,c	;volatile
  1224                           
  1225                           ;main.c: 268: }
  1226                           
  1227                           ;main.c: 267: break;
  1228  00052E  D00E               	goto	l118
  1229  000530                     l1423:
  1230  000530  5074               	movf	DefaultMenu@MenuItem+5,w,c
  1231                           
  1232                           ; Switch size 1, requested type "space"
  1233                           ; Number of cases is 4, Range of values is 0 to 3
  1234                           ; switch strategies available:
  1235                           ; Name         Instructions Cycles
  1236                           ; simple_byte           13     7 (average)
  1237                           ;	Chosen strategy is simple_byte
  1238  000532  0A00               	xorlw	0	; case 0
  1239  000534  B4D8               	btfsc	status,2,c
  1240  000536  D7A8               	goto	l1413
  1241  000538  0A01               	xorlw	1	; case 1
  1242  00053A  B4D8               	btfsc	status,2,c
  1243  00053C  D7B9               	goto	l1415
  1244  00053E  0A03               	xorlw	3	; case 2
  1245  000540  B4D8               	btfsc	status,2,c
  1246  000542  D7CB               	goto	l1417
  1247  000544  0A01               	xorlw	1	; case 3
  1248  000546  B4D8               	btfsc	status,2,c
  1249  000548  D7DE               	goto	l1419
  1250                           
  1251                           ;main.c: 269: }
  1252                           ;main.c: 270: while(PORTAbits.RA0==1);
  1253  00054A  D000               	goto	l118
  1254  00054C                     l118:
  1255  00054C  A080               	btfss	3968,0,c	;volatile
  1256  00054E  D002               	goto	l104
  1257  000550  D7FD               	goto	l118
  1258  000552  D000               	goto	l104
  1259  000554                     l104:
  1260                           
  1261                           ;main.c: 271: }
  1262                           ;main.c: 272: }
  1263                           ;main.c: 274: if(INTCONbits.TMR0IF) {
  1264  000554  A4F2               	btfss	intcon,2,c	;volatile
  1265  000556  D6A0               	goto	l1335
  1266                           
  1267                           ;main.c: 275: LCDsetaddr(MenuItem.Addr[MenuItem.CurrentSelect]);
  1268  000558  5074               	movf	DefaultMenu@MenuItem+5,w,c
  1269  00055A  0D01               	mullw	1
  1270  00055C  0E6F               	movlw	low DefaultMenu@MenuItem
  1271  00055E  24F3               	addwf	prodl,w,c
  1272  000560  6ED9               	movwf	fsr2l,c
  1273  000562  0E00               	movlw	high DefaultMenu@MenuItem
  1274  000564  20F4               	addwfc	prodh,w,c
  1275  000566  6EDA               	movwf	fsr2h,c
  1276  000568  50DF               	movf	indf2,w,c
  1277  00056A  ECC2  F004         	call	_LCDsetaddr
  1278                           
  1279                           ;main.c: 276: if(MenuItem.CurrentSelect==4)
  1280  00056E  0E04               	movlw	4
  1281  000570  1874               	xorwf	DefaultMenu@MenuItem+5,w,c
  1282  000572  A4D8               	btfss	status,2,c
  1283  000574  D018               	goto	l1435
  1284                           
  1285                           ;main.c: 277: if(last)
  1286  000576  506D               	movf	DefaultMenu@last,w,c
  1287  000578  106E               	iorwf	DefaultMenu@last+1,w,c
  1288  00057A  B4D8               	btfsc	status,2,c
  1289  00057C  D007               	goto	l1433
  1290                           
  1291                           ;main.c: 278: LCDwrstring("MENU");
  1292  00057E  0E9F               	movlw	low (STR_3+12)
  1293  000580  6E06               	movwf	LCDwrstring@string,c
  1294  000582  0E01               	movlw	high (STR_3+12)
  1295  000584  6E07               	movwf	LCDwrstring@string+1,c
  1296  000586  EC6D  F004         	call	_LCDwrstring	;wreg free
  1297  00058A  D037               	goto	l1447
  1298  00058C                     l1433:
  1299                           
  1300                           ;main.c: 279: else {
  1301                           ;main.c: 280: LCDwrchar(0x02);
  1302  00058C  0E02               	movlw	2
  1303  00058E  ECD1  F004         	call	_LCDwrchar
  1304                           
  1305                           ;main.c: 281: LCDwrchar(0x03);
  1306  000592  0E03               	movlw	3
  1307  000594  ECD1  F004         	call	_LCDwrchar
  1308                           
  1309                           ;main.c: 282: LCDwrchar(0x04);
  1310  000598  0E04               	movlw	4
  1311  00059A  ECD1  F004         	call	_LCDwrchar
  1312                           
  1313                           ;main.c: 283: LCDwrchar(0x05);
  1314  00059E  0E05               	movlw	5
  1315  0005A0  ECD1  F004         	call	_LCDwrchar
  1316                           
  1317                           ;main.c: 284: }
  1318  0005A4  D02A               	goto	l1447
  1319  0005A6                     l1435:
  1320                           
  1321                           ;main.c: 285: else
  1322                           ;main.c: 286: if(MenuItem.ONorOFF[MenuItem.CurrentSelect])
  1323  0005A6  5074               	movf	DefaultMenu@MenuItem+5,w,c
  1324  0005A8  0D01               	mullw	1
  1325  0005AA  0E06               	movlw	6
  1326  0005AC  26F3               	addwf	prodl,f,c
  1327  0005AE  0E00               	movlw	0
  1328  0005B0  22F4               	addwfc	prodh,f,c
  1329  0005B2  0E6F               	movlw	low DefaultMenu@MenuItem
  1330  0005B4  24F3               	addwf	prodl,w,c
  1331  0005B6  6ED9               	movwf	fsr2l,c
  1332  0005B8  0E00               	movlw	high DefaultMenu@MenuItem
  1333  0005BA  20F4               	addwfc	prodh,w,c
  1334  0005BC  6EDA               	movwf	fsr2h,c
  1335  0005BE  50DF               	movf	indf2,w,c
  1336  0005C0  B4D8               	btfsc	status,2,c
  1337  0005C2  D00A               	goto	l1439
  1338                           
  1339                           ;main.c: 287: LCDwrchar(last ? 0:1);
  1340  0005C4  506D               	movf	DefaultMenu@last,w,c
  1341  0005C6  106E               	iorwf	DefaultMenu@last+1,w,c
  1342  0005C8  A4D8               	btfss	status,2,c
  1343  0005CA  D002               	goto	u1110
  1344  0005CC  0E01               	movlw	1
  1345  0005CE  D001               	goto	u1120
  1346  0005D0                     u1110:
  1347  0005D0  0E00               	movlw	0
  1348  0005D2                     u1120:
  1349  0005D2  ECD1  F004         	call	_LCDwrchar
  1350  0005D6  D011               	goto	l1447
  1351  0005D8                     l1439:
  1352                           
  1353                           ;main.c: 288: else
  1354                           ;main.c: 289: LCDwrchar(last ? 0x2F:0x06);
  1355  0005D8  506D               	movf	DefaultMenu@last,w,c
  1356  0005DA  106E               	iorwf	DefaultMenu@last+1,w,c
  1357  0005DC  A4D8               	btfss	status,2,c
  1358  0005DE  D004               	goto	l1443
  1359  0005E0  0E00               	movlw	0
  1360  0005E2  6E68               	movwf	_DefaultMenu$574+1,c
  1361  0005E4  0E06               	movlw	6
  1362  0005E6  D003               	goto	L7
  1363  0005E8                     l1443:
  1364  0005E8  0E00               	movlw	0
  1365  0005EA  6E68               	movwf	_DefaultMenu$574+1,c
  1366  0005EC  0E2F               	movlw	47
  1367  0005EE                     L7:
  1368  0005EE  6E67               	movwf	_DefaultMenu$574,c
  1369  0005F0  D000               	goto	l1445
  1370  0005F2                     l1445:
  1371  0005F2  5067               	movf	_DefaultMenu$574,w,c
  1372  0005F4  ECD1  F004         	call	_LCDwrchar
  1373  0005F8  D000               	goto	l1447
  1374  0005FA                     l1447:
  1375                           
  1376                           ;main.c: 291: last=last ? 0:1;
  1377  0005FA  506D               	movf	DefaultMenu@last,w,c
  1378  0005FC  106E               	iorwf	DefaultMenu@last+1,w,c
  1379  0005FE  A4D8               	btfss	status,2,c
  1380  000600  D002               	goto	u1140
  1381  000602  0E01               	movlw	1
  1382  000604  D001               	goto	u1150
  1383  000606                     u1140:
  1384  000606  0E00               	movlw	0
  1385  000608                     u1150:
  1386  000608  6E6D               	movwf	DefaultMenu@last,c
  1387  00060A  6A6E               	clrf	DefaultMenu@last+1,c
  1388                           
  1389                           ;main.c: 292: INTCONbits.TMR0IF=0;
  1390  00060C  94F2               	bcf	intcon,2,c	;volatile
  1391  00060E  D644               	goto	l1335
  1392  000610  D7FF               	goto	l135
  1393  000612  0012               	return		;funcret
  1394  000614                     __end_of_DefaultMenu:
  1395                           	opt stack 0
  1396                           tblptru	equ	0xFF8
  1397                           tblptrh	equ	0xFF7
  1398                           tblptrl	equ	0xFF6
  1399                           tablat	equ	0xFF5
  1400                           prodh	equ	0xFF4
  1401                           prodl	equ	0xFF3
  1402                           intcon	equ	0xFF2
  1403                           postinc0	equ	0xFEE
  1404                           wreg	equ	0xFE8
  1405                           indf1	equ	0xFE7
  1406                           postdec1	equ	0xFE5
  1407                           plusw1	equ	0xFE3
  1408                           fsr1h	equ	0xFE2
  1409                           fsr1l	equ	0xFE1
  1410                           indf2	equ	0xFDF
  1411                           plusw2	equ	0xFDB
  1412                           fsr2h	equ	0xFDA
  1413                           fsr2l	equ	0xFD9
  1414                           status	equ	0xFD8
  1415                           
  1416 ;; *************** function ___wmul *****************
  1417 ;; Defined at:
  1418 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  multiplier      2    0[COMRAM] unsigned int 
  1421 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  product         2    4[COMRAM] unsigned int 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  2    0[COMRAM] unsigned int 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0, prodl, prodh
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0
  1433 ;;      Params:         4       0
  1434 ;;      Locals:         2       0
  1435 ;;      Temps:          0       0
  1436 ;;      Totals:         6       0
  1437 ;;Total ram usage:        6 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_DefaultMenu
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text2
  1447  00095C                     __ptext2:
  1448                           	opt stack 0
  1449  00095C                     ___wmul:
  1450                           	opt stack 29
  1451                           
  1452                           ;incstack = 0
  1453  00095C  5001               	movf	___wmul@multiplier,w,c
  1454  00095E  0203               	mulwf	___wmul@multiplicand,c
  1455  000960  CFF3 F005          	movff	prodl,___wmul@product
  1456  000964  CFF4 F006          	movff	prodh,___wmul@product+1
  1457  000968  5001               	movf	___wmul@multiplier,w,c
  1458  00096A  0204               	mulwf	___wmul@multiplicand+1,c
  1459  00096C  50F3               	movf	prodl,w,c
  1460  00096E  2606               	addwf	___wmul@product+1,f,c
  1461  000970  5002               	movf	___wmul@multiplier+1,w,c
  1462  000972  0203               	mulwf	___wmul@multiplicand,c
  1463  000974  50F3               	movf	prodl,w,c
  1464  000976  2606               	addwf	___wmul@product+1,f,c
  1465  000978  C005  F001         	movff	___wmul@product,?___wmul
  1466  00097C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1467  000980  D000               	goto	l206
  1468  000982                     l206:
  1469  000982  0012               	return		;funcret
  1470  000984                     __end_of___wmul:
  1471                           	opt stack 0
  1472                           tblptru	equ	0xFF8
  1473                           tblptrh	equ	0xFF7
  1474                           tblptrl	equ	0xFF6
  1475                           tablat	equ	0xFF5
  1476                           prodh	equ	0xFF4
  1477                           prodl	equ	0xFF3
  1478                           intcon	equ	0xFF2
  1479                           postinc0	equ	0xFEE
  1480                           wreg	equ	0xFE8
  1481                           indf1	equ	0xFE7
  1482                           postdec1	equ	0xFE5
  1483                           plusw1	equ	0xFE3
  1484                           fsr1h	equ	0xFE2
  1485                           fsr1l	equ	0xFE1
  1486                           indf2	equ	0xFDF
  1487                           plusw2	equ	0xFDB
  1488                           fsr2h	equ	0xFDA
  1489                           fsr2l	equ	0xFD9
  1490                           status	equ	0xFD8
  1491                           
  1492 ;; *************** function _OptMenu *****************
  1493 ;; Defined at:
  1494 ;;		line 301 in file "main.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  Menu           81   11[COMRAM] struct MenuDisplay
  1499 ;;  update          2    9[COMRAM] int 
  1500 ;;  y               2    0        int 
  1501 ;;  x               2    0        int 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;		None               void
  1504 ;; Registers used:
  1505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0
  1511 ;;      Params:         0       0
  1512 ;;      Locals:        83       0
  1513 ;;      Temps:          2       0
  1514 ;;      Totals:        85       0
  1515 ;;Total ram usage:       85 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    3
  1518 ;; This function calls:
  1519 ;;		_LCDsetaddr
  1520 ;;		_LCDwrchar
  1521 ;;		_LCDwrcmd
  1522 ;;		_LCDwrstring
  1523 ;; This function is called by:
  1524 ;;		_DefaultMenu
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text3
  1529  000614                     __ptext3:
  1530                           	opt stack 0
  1531  000614                     _OptMenu:
  1532                           	opt stack 26
  1533                           
  1534                           ;main.c: 306: int x,y;
  1535                           ;main.c: 307: int update=1;
  1536                           
  1537                           ;incstack = 0
  1538  000614  0E00               	movlw	0
  1539  000616  6E0B               	movwf	OptMenu@update+1,c
  1540  000618  0E01               	movlw	1
  1541  00061A  6E0A               	movwf	OptMenu@update,c
  1542                           
  1543                           ;main.c: 309: struct MenuDisplay {
  1544                           ;main.c: 310: unsigned char CurrentItem;
  1545                           ;main.c: 311: unsigned char Items[5][16];
  1546                           ;main.c: 313: };
  1547                           ;main.c: 314: struct MenuDisplay Menu ={
  1548                           ;main.c: 315: 0,
  1549                           ;main.c: 316: "Standby",
  1550                           ;main.c: 317: "Pair",
  1551                           ;main.c: 318: "Pair All",
  1552                           ;main.c: 319: "Pair None",
  1553                           ;main.c: 320: "Back"
  1554                           ;main.c: 321: };
  1555  00061C  EE20  F080         	lfsr	2,OptMenu@F2840
  1556  000620  EE10  F00C         	lfsr	1,OptMenu@Menu
  1557  000624  0E50               	movlw	80
  1558  000626                     u701:
  1559  000626  CFDB FFE3          	movff	plusw2,plusw1
  1560  00062A  06E8               	decf	wreg,f,c
  1561  00062C  E2FC               	bc	u701
  1562                           
  1563                           ;main.c: 324: LCDwrcmd(0b00000001);
  1564  00062E  0E01               	movlw	1
  1565  000630  ECDF  F004         	call	_LCDwrcmd
  1566                           
  1567                           ;main.c: 325: _delay((unsigned long)((2)*(0x7A1200/4000.0)));
  1568  000634  0E06               	movlw	6
  1569  000636  6E08               	movwf	??_OptMenu& (0+255),c
  1570  000638  0E30               	movlw	48
  1571  00063A                     u1297:
  1572  00063A  2EE8               	decfsz	wreg,f,c
  1573  00063C  D7FE               	goto	u1297
  1574  00063E  2E08               	decfsz	??_OptMenu& (0+255),f,c
  1575  000640  D7FC               	goto	u1297
  1576  000642  D000               	nop2	
  1577  000644  D000               	goto	l1227
  1578  000646                     l1227:
  1579                           
  1580                           ;main.c: 328: {
  1581                           ;main.c: 329: if(update){
  1582  000646  500A               	movf	OptMenu@update,w,c
  1583  000648  100B               	iorwf	OptMenu@update+1,w,c
  1584  00064A  B4D8               	btfsc	status,2,c
  1585  00064C  D062               	goto	l1257
  1586                           
  1587                           ;main.c: 330: LCDsetaddr(0x00);
  1588  00064E  0E00               	movlw	0
  1589  000650  ECC2  F004         	call	_LCDsetaddr
  1590                           
  1591                           ;main.c: 331: LCDwrchar(Menu.CurrentItem+1+0x30);
  1592  000654  500C               	movf	OptMenu@Menu,w,c
  1593  000656  0F31               	addlw	49
  1594  000658  ECD1  F004         	call	_LCDwrchar
  1595                           
  1596                           ;main.c: 332: LCDwrstring(": ");
  1597  00065C  0EB4               	movlw	low STR_9
  1598  00065E  6E06               	movwf	LCDwrstring@string,c
  1599  000660  0E01               	movlw	high STR_9
  1600  000662  6E07               	movwf	LCDwrstring@string+1,c
  1601  000664  EC6D  F004         	call	_LCDwrstring	;wreg free
  1602                           
  1603                           ;main.c: 333: LCDwrstring(Menu.Items[Menu.CurrentItem]);
  1604  000668  500C               	movf	OptMenu@Menu,w,c
  1605  00066A  0D10               	mullw	16
  1606  00066C  0E01               	movlw	1
  1607  00066E  26F3               	addwf	prodl,f,c
  1608  000670  0E00               	movlw	0
  1609  000672  22F4               	addwfc	prodh,f,c
  1610  000674  0E0C               	movlw	low OptMenu@Menu
  1611  000676  24F3               	addwf	prodl,w,c
  1612  000678  6E06               	movwf	LCDwrstring@string,c
  1613  00067A  0E00               	movlw	high OptMenu@Menu
  1614  00067C  20F4               	addwfc	prodh,w,c
  1615  00067E  6E07               	movwf	LCDwrstring@string+1,c
  1616  000680  EC6D  F004         	call	_LCDwrstring	;wreg free
  1617                           
  1618                           ;main.c: 334: LCDwrstring("             ");
  1619  000684  0E74               	movlw	low (STR_13+3)
  1620  000686  6E06               	movwf	LCDwrstring@string,c
  1621  000688  0E01               	movlw	high (STR_13+3)
  1622  00068A  6E07               	movwf	LCDwrstring@string+1,c
  1623  00068C  EC6D  F004         	call	_LCDwrstring	;wreg free
  1624                           
  1625                           ;main.c: 335: LCDsetaddr(0x0F);
  1626  000690  0E0F               	movlw	15
  1627  000692  ECC2  F004         	call	_LCDsetaddr
  1628                           
  1629                           ;main.c: 336: LCDwrchar(0x7F);
  1630  000696  0E7F               	movlw	127
  1631  000698  ECD1  F004         	call	_LCDwrchar
  1632                           
  1633                           ;main.c: 338: LCDsetaddr(0x40);
  1634  00069C  0E40               	movlw	64
  1635  00069E  ECC2  F004         	call	_LCDsetaddr
  1636                           
  1637                           ;main.c: 339: if(Menu.CurrentItem<4) {
  1638  0006A2  0E04               	movlw	4
  1639  0006A4  600C               	cpfslt	OptMenu@Menu,c
  1640  0006A6  D029               	goto	l1253
  1641                           
  1642                           ;main.c: 340: LCDwrchar(Menu.CurrentItem+2+0x30);
  1643  0006A8  500C               	movf	OptMenu@Menu,w,c
  1644  0006AA  0F32               	addlw	50
  1645  0006AC  ECD1  F004         	call	_LCDwrchar
  1646                           
  1647                           ;main.c: 341: LCDwrstring(": ");
  1648  0006B0  0EB4               	movlw	low STR_9
  1649  0006B2  6E06               	movwf	LCDwrstring@string,c
  1650  0006B4  0E01               	movlw	high STR_9
  1651  0006B6  6E07               	movwf	LCDwrstring@string+1,c
  1652  0006B8  EC6D  F004         	call	_LCDwrstring	;wreg free
  1653                           
  1654                           ;main.c: 342: LCDwrstring(Menu.Items[Menu.CurrentItem+1]);
  1655  0006BC  500C               	movf	OptMenu@Menu,w,c
  1656  0006BE  6E08               	movwf	??_OptMenu& (0+255),c
  1657  0006C0  6A09               	clrf	(??_OptMenu+1)& (0+255),c
  1658  0006C2  3A08               	swapf	??_OptMenu,f,c
  1659  0006C4  3A09               	swapf	??_OptMenu+1,f,c
  1660  0006C6  0EF0               	movlw	240
  1661  0006C8  1609               	andwf	??_OptMenu+1,f,c
  1662  0006CA  5008               	movf	??_OptMenu,w,c
  1663  0006CC  0B0F               	andlw	15
  1664  0006CE  1209               	iorwf	??_OptMenu+1,f,c
  1665  0006D0  0EF0               	movlw	240
  1666  0006D2  1608               	andwf	??_OptMenu,f,c
  1667  0006D4  0E11               	movlw	17
  1668  0006D6  2608               	addwf	??_OptMenu,f,c
  1669  0006D8  0E00               	movlw	0
  1670  0006DA  2209               	addwfc	??_OptMenu+1,f,c
  1671  0006DC  0E0C               	movlw	low OptMenu@Menu
  1672  0006DE  2408               	addwf	??_OptMenu,w,c
  1673  0006E0  6E06               	movwf	LCDwrstring@string,c
  1674  0006E2  0E00               	movlw	high OptMenu@Menu
  1675  0006E4  2009               	addwfc	??_OptMenu+1,w,c
  1676  0006E6  6E07               	movwf	LCDwrstring@string+1,c
  1677  0006E8  EC6D  F004         	call	_LCDwrstring	;wreg free
  1678                           
  1679                           ;main.c: 343: LCDwrstring("             ");
  1680  0006EC  0E74               	movlw	low (STR_13+3)
  1681  0006EE  6E06               	movwf	LCDwrstring@string,c
  1682  0006F0  0E01               	movlw	high (STR_13+3)
  1683  0006F2  6E07               	movwf	LCDwrstring@string+1,c
  1684  0006F4  EC6D  F004         	call	_LCDwrstring	;wreg free
  1685                           
  1686                           ;main.c: 344: }
  1687  0006F8  D007               	goto	l1255
  1688  0006FA                     l1253:
  1689                           
  1690                           ;main.c: 345: else
  1691                           ;main.c: 346: LCDwrstring("                ");
  1692  0006FA  0E71               	movlw	low STR_13
  1693  0006FC  6E06               	movwf	LCDwrstring@string,c
  1694  0006FE  0E01               	movlw	high STR_13
  1695  000700  6E07               	movwf	LCDwrstring@string+1,c
  1696  000702  EC6D  F004         	call	_LCDwrstring	;wreg free
  1697  000706  D000               	goto	l1255
  1698  000708                     l1255:
  1699                           
  1700                           ;main.c: 347: update=0;
  1701  000708  0E00               	movlw	0
  1702  00070A  6E0B               	movwf	OptMenu@update+1,c
  1703  00070C  0E00               	movlw	0
  1704  00070E  6E0A               	movwf	OptMenu@update,c
  1705  000710  D000               	goto	l1257
  1706  000712                     l1257:
  1707                           
  1708                           ;main.c: 348: }
  1709                           ;main.c: 349: if(PORTAbits.RA4){
  1710  000712  A880               	btfss	3968,4,c	;volatile
  1711  000714  D01B               	goto	l146
  1712                           
  1713                           ;main.c: 350: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
  1714  000716  0E20               	movlw	32
  1715  000718  6E08               	movwf	??_OptMenu& (0+255),c
  1716  00071A  0E2A               	movlw	42
  1717  00071C                     u1307:
  1718  00071C  2EE8               	decfsz	wreg,f,c
  1719  00071E  D7FE               	goto	u1307
  1720  000720  2E08               	decfsz	??_OptMenu& (0+255),f,c
  1721  000722  D7FC               	goto	u1307
  1722                           
  1723                           ;main.c: 351: if(PORTAbits.RA4) {
  1724  000724  A880               	btfss	3968,4,c	;volatile
  1725  000726  D012               	goto	l146
  1726                           
  1727                           ;main.c: 352: if(Menu.CurrentItem==4)
  1728  000728  0E04               	movlw	4
  1729  00072A  180C               	xorwf	OptMenu@Menu,w,c
  1730  00072C  A4D8               	btfss	status,2,c
  1731  00072E  D003               	goto	l1267
  1732                           
  1733                           ;main.c: 353: Menu.CurrentItem=0;
  1734  000730  0E00               	movlw	0
  1735  000732  6E0C               	movwf	OptMenu@Menu,c
  1736  000734  D002               	goto	l1269
  1737  000736                     l1267:
  1738                           
  1739                           ;main.c: 354: else
  1740                           ;main.c: 355: Menu.CurrentItem++;
  1741  000736  2A0C               	incf	OptMenu@Menu,f,c
  1742  000738  D000               	goto	l1269
  1743  00073A                     l1269:
  1744                           
  1745                           ;main.c: 356: update=1;
  1746  00073A  0E00               	movlw	0
  1747  00073C  6E0B               	movwf	OptMenu@update+1,c
  1748  00073E  0E01               	movlw	1
  1749  000740  6E0A               	movwf	OptMenu@update,c
  1750                           
  1751                           ;main.c: 357: while(PORTAbits.RA4);
  1752  000742  D000               	goto	l150
  1753  000744                     l150:
  1754  000744  A880               	btfss	3968,4,c	;volatile
  1755  000746  D002               	goto	l146
  1756  000748  D7FD               	goto	l150
  1757  00074A  D000               	goto	l146
  1758  00074C                     l146:
  1759                           
  1760                           ;main.c: 358: }
  1761                           ;main.c: 359: }
  1762                           ;main.c: 360: if(PORTAbits.RA1){
  1763  00074C  A280               	btfss	3968,1,c	;volatile
  1764  00074E  D01A               	goto	l153
  1765                           
  1766                           ;main.c: 361: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
  1767  000750  0E20               	movlw	32
  1768  000752  6E08               	movwf	??_OptMenu& (0+255),c
  1769  000754  0E2A               	movlw	42
  1770  000756                     u1317:
  1771  000756  2EE8               	decfsz	wreg,f,c
  1772  000758  D7FE               	goto	u1317
  1773  00075A  2E08               	decfsz	??_OptMenu& (0+255),f,c
  1774  00075C  D7FC               	goto	u1317
  1775                           
  1776                           ;main.c: 362: if(PORTAbits.RA1) {
  1777  00075E  A280               	btfss	3968,1,c	;volatile
  1778  000760  D011               	goto	l153
  1779                           
  1780                           ;main.c: 363: if(Menu.CurrentItem==0)
  1781  000762  500C               	movf	OptMenu@Menu,w,c
  1782  000764  A4D8               	btfss	status,2,c
  1783  000766  D003               	goto	l1279
  1784                           
  1785                           ;main.c: 364: Menu.CurrentItem=4;
  1786  000768  0E04               	movlw	4
  1787  00076A  6E0C               	movwf	OptMenu@Menu,c
  1788  00076C  D002               	goto	l1281
  1789  00076E                     l1279:
  1790                           
  1791                           ;main.c: 365: else
  1792                           ;main.c: 366: Menu.CurrentItem--;
  1793  00076E  060C               	decf	OptMenu@Menu,f,c
  1794  000770  D000               	goto	l1281
  1795  000772                     l1281:
  1796                           
  1797                           ;main.c: 367: update=1;
  1798  000772  0E00               	movlw	0
  1799  000774  6E0B               	movwf	OptMenu@update+1,c
  1800  000776  0E01               	movlw	1
  1801  000778  6E0A               	movwf	OptMenu@update,c
  1802                           
  1803                           ;main.c: 368: while(PORTAbits.RA1);
  1804  00077A  D000               	goto	l157
  1805  00077C                     l157:
  1806  00077C  A280               	btfss	3968,1,c	;volatile
  1807  00077E  D002               	goto	l153
  1808  000780  D7FD               	goto	l157
  1809  000782  D000               	goto	l153
  1810  000784                     l153:
  1811                           
  1812                           ;main.c: 369: }
  1813                           ;main.c: 370: }
  1814                           ;main.c: 371: if(PORTAbits.RA0){
  1815  000784  A080               	btfss	3968,0,c	;volatile
  1816  000786  D75F               	goto	l1227
  1817                           
  1818                           ;main.c: 372: _delay((unsigned long)((12)*(0x7A1200/4000.0)));
  1819  000788  0E20               	movlw	32
  1820  00078A  6E08               	movwf	??_OptMenu& (0+255),c
  1821  00078C  0E2A               	movlw	42
  1822  00078E                     u1327:
  1823  00078E  2EE8               	decfsz	wreg,f,c
  1824  000790  D7FE               	goto	u1327
  1825  000792  2E08               	decfsz	??_OptMenu& (0+255),f,c
  1826  000794  D7FC               	goto	u1327
  1827                           
  1828                           ;main.c: 373: if(PORTAbits.RA0) {
  1829  000796  B080               	btfsc	3968,0,c	;volatile
  1830  000798  D008               	goto	l1293
  1831  00079A  D755               	goto	l1227
  1832                           
  1833                           ;main.c: 374: switch(Menu.CurrentItem){
  1834  00079C  D006               	goto	l1293
  1835                           
  1836                           ;main.c: 376: while(PORTAbits.RA0);
  1837                           
  1838                           ;main.c: 375: case 4:
  1839  00079E  D000               	goto	l164
  1840  0007A0                     l164:
  1841  0007A0  A080               	btfss	3968,0,c	;volatile
  1842  0007A2  D00C               	goto	l167
  1843  0007A4  D7FD               	goto	l164
  1844                           
  1845                           ;main.c: 377: return;
  1846  0007A6  D00A               	goto	l167
  1847                           
  1848                           ;main.c: 379: }
  1849                           
  1850                           ;main.c: 378: break;
  1851  0007A8  D005               	goto	l169
  1852  0007AA                     l1293:
  1853  0007AA  500C               	movf	OptMenu@Menu,w,c
  1854                           
  1855                           ; Switch size 1, requested type "space"
  1856                           ; Number of cases is 1, Range of values is 4 to 4
  1857                           ; switch strategies available:
  1858                           ; Name         Instructions Cycles
  1859                           ; simple_byte            4     3 (average)
  1860                           ;	Chosen strategy is simple_byte
  1861  0007AC  0A04               	xorlw	4	; case 4
  1862  0007AE  B4D8               	btfsc	status,2,c
  1863  0007B0  D7F7               	goto	l164
  1864                           
  1865                           ;main.c: 380: while(PORTAbits.RA0);
  1866  0007B2  D000               	goto	l169
  1867  0007B4                     l169:
  1868  0007B4  A080               	btfss	3968,0,c	;volatile
  1869  0007B6  D747               	goto	l1227
  1870  0007B8  D7FD               	goto	l169
  1871  0007BA  D745               	goto	l1227
  1872  0007BC                     l167:
  1873  0007BC  0012               	return		;funcret
  1874  0007BE                     __end_of_OptMenu:
  1875                           	opt stack 0
  1876                           tblptru	equ	0xFF8
  1877                           tblptrh	equ	0xFF7
  1878                           tblptrl	equ	0xFF6
  1879                           tablat	equ	0xFF5
  1880                           prodh	equ	0xFF4
  1881                           prodl	equ	0xFF3
  1882                           intcon	equ	0xFF2
  1883                           postinc0	equ	0xFEE
  1884                           wreg	equ	0xFE8
  1885                           indf1	equ	0xFE7
  1886                           postdec1	equ	0xFE5
  1887                           plusw1	equ	0xFE3
  1888                           fsr1h	equ	0xFE2
  1889                           fsr1l	equ	0xFE1
  1890                           indf2	equ	0xFDF
  1891                           plusw2	equ	0xFDB
  1892                           fsr2h	equ	0xFDA
  1893                           fsr2l	equ	0xFD9
  1894                           status	equ	0xFD8
  1895                           
  1896 ;; *************** function _LCDwrstring *****************
  1897 ;; Defined at:
  1898 ;;		line 42 in file "Hitachi_LCD.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  string          2    5[COMRAM] PTR const unsigned char 
  1901 ;;		 -> STR_13(17), STR_12(14), STR_11(3), STR_10(14), 
  1902 ;;		 -> STR_9(3), Menu.Items(80), OptMenu@Menu(81), STR_8(5), 
  1903 ;;		 -> STR_7(17), STR_6(17), STR_5(5), STR_4(5), 
  1904 ;;		 -> STR_3(17), STR_2(17), STR_1(16), 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;		None               void
  1909 ;; Registers used:
  1910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0
  1916 ;;      Params:         2       0
  1917 ;;      Locals:         0       0
  1918 ;;      Temps:          0       0
  1919 ;;      Totals:         2       0
  1920 ;;Total ram usage:        2 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:    2
  1923 ;; This function calls:
  1924 ;;		_LCDwrchar
  1925 ;; This function is called by:
  1926 ;;		_DefaultMenu
  1927 ;;		_OptMenu
  1928 ;;		_StandbyMenu
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text4
  1933  0008DA                     __ptext4:
  1934                           	opt stack 0
  1935  0008DA                     _LCDwrstring:
  1936                           	opt stack 26
  1937                           
  1938                           ;Hitachi_LCD.c: 44: while(*string)
  1939                           
  1940                           ;incstack = 0
  1941  0008DA  D015               	goto	l1205
  1942  0008DC                     l1201:
  1943                           
  1944                           ;Hitachi_LCD.c: 45: {
  1945                           ;Hitachi_LCD.c: 46: LCDwrchar(*string);
  1946  0008DC  C006  FFF6         	movff	LCDwrstring@string,tblptrl
  1947  0008E0  C007  FFF7         	movff	LCDwrstring@string+1,tblptrh
  1948  0008E4  6AF8               	clrf	tblptru,c
  1949  0008E6  0E00               	movlw	(high __ramtop+-1)
  1950  0008E8  64F7               	cpfsgt	tblptrh,c
  1951  0008EA  D003               	bra	u677
  1952  0008EC  0008               	tblrd		*
  1953  0008EE  50F5               	movf	tablat,w,c
  1954  0008F0  D005               	bra	u670
  1955  0008F2                     u677:
  1956  0008F2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1957  0008F6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1958  0008FA  50EF               	movf	indf0,w,c
  1959  0008FC                     u670:
  1960  0008FC  ECD1  F004         	call	_LCDwrchar
  1961                           
  1962                           ;Hitachi_LCD.c: 47: string++;
  1963  000900  4A06               	infsnz	LCDwrstring@string,f,c
  1964  000902  2A07               	incf	LCDwrstring@string+1,f,c
  1965  000904  D000               	goto	l1205
  1966  000906                     l1205:
  1967  000906  C006  FFF6         	movff	LCDwrstring@string,tblptrl
  1968  00090A  C007  FFF7         	movff	LCDwrstring@string+1,tblptrh
  1969  00090E  6AF8               	clrf	tblptru,c
  1970  000910  0E00               	movlw	(high __ramtop+-1)
  1971  000912  64F7               	cpfsgt	tblptrh,c
  1972  000914  D003               	bra	u687
  1973  000916  0008               	tblrd		*
  1974  000918  50F5               	movf	tablat,w,c
  1975  00091A  D005               	bra	u680
  1976  00091C                     u687:
  1977  00091C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1978  000920  CFF7 FFEA          	movff	tblptrh,fsr0h
  1979  000924  50EF               	movf	indf0,w,c
  1980  000926                     u680:
  1981  000926  0900               	iorlw	0
  1982  000928  A4D8               	btfss	status,2,c
  1983  00092A  D7D8               	goto	l1201
  1984  00092C  0012               	return		;funcret
  1985  00092E                     __end_of_LCDwrstring:
  1986                           	opt stack 0
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           prodh	equ	0xFF4
  1992                           prodl	equ	0xFF3
  1993                           intcon	equ	0xFF2
  1994                           indf0	equ	0xFEF
  1995                           postinc0	equ	0xFEE
  1996                           fsr0h	equ	0xFEA
  1997                           fsr0l	equ	0xFE9
  1998                           wreg	equ	0xFE8
  1999                           indf1	equ	0xFE7
  2000                           postdec1	equ	0xFE5
  2001                           plusw1	equ	0xFE3
  2002                           fsr1h	equ	0xFE2
  2003                           fsr1l	equ	0xFE1
  2004                           indf2	equ	0xFDF
  2005                           plusw2	equ	0xFDB
  2006                           fsr2h	equ	0xFDA
  2007                           fsr2l	equ	0xFD9
  2008                           status	equ	0xFD8
  2009                           
  2010 ;; *************** function _LCDwrchar *****************
  2011 ;; Defined at:
  2012 ;;		line 32 in file "Hitachi_LCD.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  letter          1    wreg     unsigned char 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  letter          1    4[COMRAM] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;		None               void
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0
  2026 ;;      Params:         0       0
  2027 ;;      Locals:         1       0
  2028 ;;      Temps:          0       0
  2029 ;;      Totals:         1       0
  2030 ;;Total ram usage:        1 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    1
  2033 ;; This function calls:
  2034 ;;		_LCDdata
  2035 ;; This function is called by:
  2036 ;;		_DefaultMenu
  2037 ;;		_OptMenu
  2038 ;;		_LCDwrstring
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text5
  2043  0009A2                     __ptext5:
  2044                           	opt stack 0
  2045  0009A2                     _LCDwrchar:
  2046                           	opt stack 26
  2047                           
  2048                           ;incstack = 0
  2049                           ;LCDwrchar@letter stored from wreg
  2050  0009A2  6E05               	movwf	LCDwrchar@letter,c
  2051                           
  2052                           ;Hitachi_LCD.c: 34: LATBbits.LATB4=1;
  2053  0009A4  888A               	bsf	3978,4,c	;volatile
  2054                           
  2055                           ;Hitachi_LCD.c: 35: LATBbits.LATB5=0;
  2056  0009A6  9A8A               	bcf	3978,5,c	;volatile
  2057                           
  2058                           ;Hitachi_LCD.c: 36: LCDdata(letter);
  2059  0009A8  5005               	movf	LCDwrchar@letter,w,c
  2060  0009AA  EC10  F004         	call	_LCDdata
  2061                           
  2062                           ;Hitachi_LCD.c: 37: LATBbits.LATB3=1;
  2063  0009AE  868A               	bsf	3978,3,c	;volatile
  2064                           
  2065                           ;Hitachi_LCD.c: 38: _delay(2);
  2066  0009B0  D000               	nop2		;2 cycle nop
  2067                           
  2068                           ;Hitachi_LCD.c: 39: LATBbits.LATB3=0;
  2069  0009B2  968A               	bcf	3978,3,c	;volatile
  2070                           
  2071                           ;Hitachi_LCD.c: 40: _delay((unsigned long)((37)*(0x7A1200/4000000.0)));
  2072  0009B4  0E18               	movlw	24
  2073  0009B6                     u1337:
  2074  0009B6  2EE8               	decfsz	wreg,f,c
  2075  0009B8  D7FE               	goto	u1337
  2076  0009BA  D000               	nop2		;nop
  2077  0009BC  0012               	return		;funcret
  2078  0009BE                     __end_of_LCDwrchar:
  2079                           	opt stack 0
  2080                           tblptru	equ	0xFF8
  2081                           tblptrh	equ	0xFF7
  2082                           tblptrl	equ	0xFF6
  2083                           tablat	equ	0xFF5
  2084                           prodh	equ	0xFF4
  2085                           prodl	equ	0xFF3
  2086                           intcon	equ	0xFF2
  2087                           indf0	equ	0xFEF
  2088                           postinc0	equ	0xFEE
  2089                           fsr0h	equ	0xFEA
  2090                           fsr0l	equ	0xFE9
  2091                           wreg	equ	0xFE8
  2092                           indf1	equ	0xFE7
  2093                           postdec1	equ	0xFE5
  2094                           plusw1	equ	0xFE3
  2095                           fsr1h	equ	0xFE2
  2096                           fsr1l	equ	0xFE1
  2097                           indf2	equ	0xFDF
  2098                           plusw2	equ	0xFDB
  2099                           fsr2h	equ	0xFDA
  2100                           fsr2l	equ	0xFD9
  2101                           status	equ	0xFD8
  2102                           
  2103 ;; *************** function _LCDwrcmd *****************
  2104 ;; Defined at:
  2105 ;;		line 50 in file "Hitachi_LCD.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  value           1    wreg     unsigned char 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  value           1    4[COMRAM] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;		None               void
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0
  2119 ;;      Params:         0       0
  2120 ;;      Locals:         1       0
  2121 ;;      Temps:          0       0
  2122 ;;      Totals:         1       0
  2123 ;;Total ram usage:        1 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    1
  2126 ;; This function calls:
  2127 ;;		_LCDdata
  2128 ;; This function is called by:
  2129 ;;		_main
  2130 ;;		_DefaultMenu
  2131 ;;		_OptMenu
  2132 ;;		_StandbyMenu
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text6
  2137  0009BE                     __ptext6:
  2138                           	opt stack 0
  2139  0009BE                     _LCDwrcmd:
  2140                           	opt stack 29
  2141                           
  2142                           ;incstack = 0
  2143                           ;LCDwrcmd@value stored from wreg
  2144  0009BE  6E05               	movwf	LCDwrcmd@value,c
  2145                           
  2146                           ;Hitachi_LCD.c: 52: LATBbits.LATB4=0, LATBbits.LATB5=0;
  2147  0009C0  988A               	bcf	3978,4,c	;volatile
  2148  0009C2  9A8A               	bcf	3978,5,c	;volatile
  2149                           
  2150                           ;Hitachi_LCD.c: 53: LCDdata(value);
  2151  0009C4  5005               	movf	LCDwrcmd@value,w,c
  2152  0009C6  EC10  F004         	call	_LCDdata
  2153                           
  2154                           ;Hitachi_LCD.c: 54: LATBbits.LATB3=1;
  2155  0009CA  868A               	bsf	3978,3,c	;volatile
  2156                           
  2157                           ;Hitachi_LCD.c: 55: _delay(2);
  2158  0009CC  D000               	nop2		;2 cycle nop
  2159                           
  2160                           ;Hitachi_LCD.c: 56: LATBbits.LATB3=0;
  2161  0009CE  968A               	bcf	3978,3,c	;volatile
  2162                           
  2163                           ;Hitachi_LCD.c: 57: _delay((unsigned long)((37)*(0x7A1200/4000000.0)));
  2164  0009D0  0E18               	movlw	24
  2165  0009D2                     u1347:
  2166  0009D2  2EE8               	decfsz	wreg,f,c
  2167  0009D4  D7FE               	goto	u1347
  2168  0009D6  D000               	nop2		;nop
  2169  0009D8  0012               	return		;funcret
  2170  0009DA                     __end_of_LCDwrcmd:
  2171                           	opt stack 0
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           prodh	equ	0xFF4
  2177                           prodl	equ	0xFF3
  2178                           intcon	equ	0xFF2
  2179                           indf0	equ	0xFEF
  2180                           postinc0	equ	0xFEE
  2181                           fsr0h	equ	0xFEA
  2182                           fsr0l	equ	0xFE9
  2183                           wreg	equ	0xFE8
  2184                           indf1	equ	0xFE7
  2185                           postdec1	equ	0xFE5
  2186                           plusw1	equ	0xFE3
  2187                           fsr1h	equ	0xFE2
  2188                           fsr1l	equ	0xFE1
  2189                           indf2	equ	0xFDF
  2190                           plusw2	equ	0xFDB
  2191                           fsr2h	equ	0xFDA
  2192                           fsr2l	equ	0xFD9
  2193                           status	equ	0xFD8
  2194                           
  2195 ;; *************** function _LCDsetaddr *****************
  2196 ;; Defined at:
  2197 ;;		line 59 in file "Hitachi_LCD.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  add             1    wreg     unsigned char 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  add             1    4[COMRAM] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0
  2211 ;;      Params:         0       0
  2212 ;;      Locals:         1       0
  2213 ;;      Temps:          0       0
  2214 ;;      Totals:         1       0
  2215 ;;Total ram usage:        1 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    1
  2218 ;; This function calls:
  2219 ;;		_LCDdata
  2220 ;; This function is called by:
  2221 ;;		_DefaultMenu
  2222 ;;		_OptMenu
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text7
  2227  000984                     __ptext7:
  2228                           	opt stack 0
  2229  000984                     _LCDsetaddr:
  2230                           	opt stack 27
  2231                           
  2232                           ;incstack = 0
  2233                           ;LCDsetaddr@add stored from wreg
  2234  000984  6E05               	movwf	LCDsetaddr@add,c
  2235                           
  2236                           ;Hitachi_LCD.c: 61: LATBbits.LATB4=0, LATBbits.LATB5=0;
  2237  000986  988A               	bcf	3978,4,c	;volatile
  2238  000988  9A8A               	bcf	3978,5,c	;volatile
  2239                           
  2240                           ;Hitachi_LCD.c: 62: LCDdata(add|0b10000000);
  2241  00098A  5005               	movf	LCDsetaddr@add,w,c
  2242  00098C  0980               	iorlw	128
  2243  00098E  EC10  F004         	call	_LCDdata
  2244                           
  2245                           ;Hitachi_LCD.c: 63: LATBbits.LATB3=1;
  2246  000992  868A               	bsf	3978,3,c	;volatile
  2247                           
  2248                           ;Hitachi_LCD.c: 64: _delay(2);
  2249  000994  D000               	nop2		;2 cycle nop
  2250                           
  2251                           ;Hitachi_LCD.c: 65: LATBbits.LATB3=0;
  2252  000996  968A               	bcf	3978,3,c	;volatile
  2253                           
  2254                           ;Hitachi_LCD.c: 66: _delay((unsigned long)((37)*(0x7A1200/4000000.0)));
  2255  000998  0E18               	movlw	24
  2256  00099A                     u1357:
  2257  00099A  2EE8               	decfsz	wreg,f,c
  2258  00099C  D7FE               	goto	u1357
  2259  00099E  D000               	nop2		;nop
  2260  0009A0  0012               	return		;funcret
  2261  0009A2                     __end_of_LCDsetaddr:
  2262                           	opt stack 0
  2263                           tblptru	equ	0xFF8
  2264                           tblptrh	equ	0xFF7
  2265                           tblptrl	equ	0xFF6
  2266                           tablat	equ	0xFF5
  2267                           prodh	equ	0xFF4
  2268                           prodl	equ	0xFF3
  2269                           intcon	equ	0xFF2
  2270                           indf0	equ	0xFEF
  2271                           postinc0	equ	0xFEE
  2272                           fsr0h	equ	0xFEA
  2273                           fsr0l	equ	0xFE9
  2274                           wreg	equ	0xFE8
  2275                           indf1	equ	0xFE7
  2276                           postdec1	equ	0xFE5
  2277                           plusw1	equ	0xFE3
  2278                           fsr1h	equ	0xFE2
  2279                           fsr1l	equ	0xFE1
  2280                           indf2	equ	0xFDF
  2281                           plusw2	equ	0xFDB
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _LCDdata *****************
  2287 ;; Defined at:
  2288 ;;		line 14 in file "Hitachi_LCD.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  data            1    wreg     unsigned char 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  data            1    1[COMRAM] unsigned char 
  2293 ;;  x               2    2[COMRAM] int 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;		None               void
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0
  2303 ;;      Params:         0       0
  2304 ;;      Locals:         3       0
  2305 ;;      Temps:          1       0
  2306 ;;      Totals:         4       0
  2307 ;;Total ram usage:        4 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_LCDwrchar
  2313 ;;		_LCDwrcmd
  2314 ;;		_LCDsetaddr
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text8
  2319  000820                     __ptext8:
  2320                           	opt stack 0
  2321  000820                     _LCDdata:
  2322                           	opt stack 29
  2323                           
  2324                           ;incstack = 0
  2325                           ;LCDdata@data stored from wreg
  2326  000820  6E02               	movwf	LCDdata@data,c
  2327                           
  2328                           ;Hitachi_LCD.c: 16: int x;
  2329                           ;Hitachi_LCD.c: 17: for(x=0;x<8;x++)
  2330  000822  0E00               	movlw	0
  2331  000824  6E04               	movwf	LCDdata@x+1,c
  2332  000826  0E00               	movlw	0
  2333  000828  6E03               	movwf	LCDdata@x,c
  2334  00082A  BE04               	btfsc	LCDdata@x+1,7,c
  2335  00082C  D008               	goto	l1161
  2336  00082E  5004               	movf	LCDdata@x+1,w,c
  2337  000830  E121               	bnz	l187
  2338  000832  0E08               	movlw	8
  2339  000834  5C03               	subwf	LCDdata@x,w,c
  2340  000836  B0D8               	btfsc	status,0,c
  2341  000838  D01D               	goto	l187
  2342  00083A  D001               	goto	l1161
  2343  00083C  D01B               	goto	l187
  2344  00083E                     l1161:
  2345                           
  2346                           ;Hitachi_LCD.c: 18: {
  2347                           ;Hitachi_LCD.c: 19: LATAbits.LATA6=data & 0x1 ? 1:0;
  2348  00083E  A002               	btfss	LCDdata@data,0,c
  2349  000840  D003               	goto	u640
  2350  000842  6A01               	clrf	??_LCDdata& (0+255),c
  2351  000844  2A01               	incf	??_LCDdata& (0+255),f,c
  2352  000846  D001               	goto	u658
  2353  000848                     u640:
  2354  000848  6A01               	clrf	??_LCDdata& (0+255),c
  2355  00084A                     u658:
  2356  00084A  3A01               	swapf	??_LCDdata,f,c
  2357  00084C  4601               	rlncf	??_LCDdata,f,c
  2358  00084E  4601               	rlncf	??_LCDdata,f,c
  2359  000850  5089               	movf	3977,w,c	;volatile
  2360  000852  1801               	xorwf	??_LCDdata,w,c
  2361  000854  0BBF               	andlw	-65
  2362  000856  1801               	xorwf	??_LCDdata,w,c
  2363  000858  6E89               	movwf	3977,c	;volatile
  2364                           
  2365                           ;Hitachi_LCD.c: 20: __nop();
  2366  00085A  F000               	nop	
  2367                           
  2368                           ;Hitachi_LCD.c: 21: LATBbits.LATB2=1;
  2369  00085C  848A               	bsf	3978,2,c	;volatile
  2370                           
  2371                           ;Hitachi_LCD.c: 22: __nop();
  2372  00085E  F000               	nop	
  2373                           
  2374                           ;Hitachi_LCD.c: 23: LATBbits.LATB2=0;
  2375  000860  948A               	bcf	3978,2,c	;volatile
  2376                           
  2377                           ;Hitachi_LCD.c: 24: data>>=1;
  2378  000862  90D8               	bcf	status,0,c
  2379  000864  3202               	rrcf	LCDdata@data,f,c
  2380  000866  4A03               	infsnz	LCDdata@x,f,c
  2381  000868  2A04               	incf	LCDdata@x+1,f,c
  2382  00086A  BE04               	btfsc	LCDdata@x+1,7,c
  2383  00086C  D7E8               	goto	l1161
  2384  00086E  5004               	movf	LCDdata@x+1,w,c
  2385  000870  E101               	bnz	u660
  2386  000872  D7DF               	goto	L8
  2387  000874                     u660:
  2388  000874                     l187:
  2389                           
  2390                           ;Hitachi_LCD.c: 25: }
  2391                           ;Hitachi_LCD.c: 26: __nop();
  2392  000874  F000               	nop	
  2393                           
  2394                           ;Hitachi_LCD.c: 27: LATAbits.LATA7=1;
  2395  000876  8E89               	bsf	3977,7,c	;volatile
  2396                           
  2397                           ;Hitachi_LCD.c: 28: __nop();
  2398  000878  F000               	nop	
  2399                           
  2400                           ;Hitachi_LCD.c: 29: LATAbits.LATA7=0;
  2401  00087A  9E89               	bcf	3977,7,c	;volatile
  2402  00087C  0012               	return		;funcret
  2403  00087E                     __end_of_LCDdata:
  2404                           	opt stack 0
  2405                           tblptru	equ	0xFF8
  2406                           tblptrh	equ	0xFF7
  2407                           tblptrl	equ	0xFF6
  2408                           tablat	equ	0xFF5
  2409                           prodh	equ	0xFF4
  2410                           prodl	equ	0xFF3
  2411                           intcon	equ	0xFF2
  2412                           indf0	equ	0xFEF
  2413                           postinc0	equ	0xFEE
  2414                           fsr0h	equ	0xFEA
  2415                           fsr0l	equ	0xFE9
  2416                           wreg	equ	0xFE8
  2417                           indf1	equ	0xFE7
  2418                           postdec1	equ	0xFE5
  2419                           plusw1	equ	0xFE3
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           indf2	equ	0xFDF
  2423                           plusw2	equ	0xFDB
  2424                           fsr2h	equ	0xFDA
  2425                           fsr2l	equ	0xFD9
  2426                           status	equ	0xFD8
  2427                           tblptru	equ	0xFF8
  2428                           tblptrh	equ	0xFF7
  2429                           tblptrl	equ	0xFF6
  2430                           tablat	equ	0xFF5
  2431                           prodh	equ	0xFF4
  2432                           prodl	equ	0xFF3
  2433                           intcon	equ	0xFF2
  2434                           indf0	equ	0xFEF
  2435                           postinc0	equ	0xFEE
  2436                           fsr0h	equ	0xFEA
  2437                           fsr0l	equ	0xFE9
  2438                           wreg	equ	0xFE8
  2439                           indf1	equ	0xFE7
  2440                           postdec1	equ	0xFE5
  2441                           plusw1	equ	0xFE3
  2442                           fsr1h	equ	0xFE2
  2443                           fsr1l	equ	0xFE1
  2444                           indf2	equ	0xFDF
  2445                           plusw2	equ	0xFDB
  2446                           fsr2h	equ	0xFDA
  2447                           fsr2l	equ	0xFD9
  2448                           status	equ	0xFD8
  2449                           
  2450                           	psect	rparam
  2451  0000                     tblptru	equ	0xFF8
  2452                           tblptrh	equ	0xFF7
  2453                           tblptrl	equ	0xFF6
  2454                           tablat	equ	0xFF5
  2455                           prodh	equ	0xFF4
  2456                           prodl	equ	0xFF3
  2457                           intcon	equ	0xFF2
  2458                           indf0	equ	0xFEF
  2459                           postinc0	equ	0xFEE
  2460                           fsr0h	equ	0xFEA
  2461                           fsr0l	equ	0xFE9
  2462                           wreg	equ	0xFE8
  2463                           indf1	equ	0xFE7
  2464                           postdec1	equ	0xFE5
  2465                           plusw1	equ	0xFE3
  2466                           fsr1h	equ	0xFE2
  2467                           fsr1l	equ	0xFE1
  2468                           indf2	equ	0xFDF
  2469                           plusw2	equ	0xFDB
  2470                           fsr2h	equ	0xFDA
  2471                           fsr2l	equ	0xFD9
  2472                           status	equ	0xFD8


Data Sizes:
    Strings     70
    Constant    112
    Data        92
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    122     124
    BANK0           128      0      92

Pointer List with Targets:

    LCDwrstring@string	PTR const unsigned char  size(2) Largest target is 81
		 -> STR_13(CODE[17]), STR_12(CODE[14]), STR_11(CODE[3]), STR_10(CODE[14]), 
		 -> STR_9(CODE[3]), Menu.Items(COMRAM[80]), OptMenu@Menu(COMRAM[81]), STR_8(CODE[5]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_DefaultMenu
    _DefaultMenu->_OptMenu
    _OptMenu->_LCDwrstring
    _LCDwrstring->_LCDwrchar
    _LCDwrchar->_LCDdata
    _LCDwrcmd->_LCDdata
    _LCDsetaddr->_LCDdata

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4639
                                            121 COMRAM     1     1      0
                        _DefaultMenu
                           _LCDwrcmd
 ---------------------------------------------------------------------------------
 (1) _DefaultMenu                                         29    29      0    4548
                                             92 COMRAM    29    29      0
                         _LCDsetaddr
                          _LCDwrchar
                           _LCDwrcmd
                        _LCDwrstring
                            _OptMenu
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _OptMenu                                             89    89      0    1622
                                              7 COMRAM    85    85      0
                         _LCDsetaddr
                          _LCDwrchar
                           _LCDwrcmd
                        _LCDwrstring
 ---------------------------------------------------------------------------------
 (3) _LCDwrstring                                          2     0      2    1096
                                              5 COMRAM     2     0      2
                          _LCDwrchar
 ---------------------------------------------------------------------------------
 (4) _LCDwrchar                                            1     1      0      91
                                              4 COMRAM     1     1      0
                            _LCDdata
 ---------------------------------------------------------------------------------
 (1) _LCDwrcmd                                             1     1      0      91
                                              4 COMRAM     1     1      0
                            _LCDdata
 ---------------------------------------------------------------------------------
 (3) _LCDsetaddr                                           1     1      0      91
                                              4 COMRAM     1     1      0
                            _LCDdata
 ---------------------------------------------------------------------------------
 (2) _LCDdata                                              4     4      0      69
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DefaultMenu
     _LCDsetaddr
       _LCDdata
     _LCDwrchar
       _LCDdata
     _LCDwrcmd
       _LCDdata
     _LCDwrstring
       _LCDwrchar
         _LCDdata
     _OptMenu
       _LCDsetaddr
         _LCDdata
       _LCDwrchar
         _LCDdata
       _LCDwrcmd
         _LCDdata
       _LCDwrstring
         _LCDwrchar
           _LCDdata
     ___wmul
   _LCDwrcmd
     _LCDdata

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
EEDATA             100      0       0       0        0.0%
BIGRAM              FF      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      5C       4       71.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7A      7C       1       97.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D8       5        0.0%
DATA                 0      0      D8       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 27 18:27:02 2015

                          l80 032A                            l92 03BC                            l89 0322  
         ___wmul@multiplicand 0003                           l101 03B4                           l104 0554  
                         l150 0744                           l206 0982                           l118 054C  
                         l135 0610                           l153 0784                           l146 074C  
                         l164 07A0                           l157 077C                           l167 07BC  
                         l169 07B4                           l187 0874                           u701 0626  
                         u640 0848                           u660 0874                           u670 08FC  
                         u680 0926                           u658 084A                           u851 01CA  
                         u677 08F2                           u687 091C                  __CFG_BOR$OFF 000000  
                         prod 000FF3                           wreg 000FE8                  __CFG_LVP$OFF 000000  
             __end_of_LCDdata 087E                  __CFG_WDT$OFF 000000                          l1201 08DC  
                        l1205 0906                          l1311 01EE                          l1161 083E  
                        l1401 0404                          l1313 01F6                          l1227 0646  
                        l1411 0480                          l1307 01DA                          l1253 06FA  
                        l1413 0488                          l1325 026A                          l1317 020A  
                        l1255 0708                          l1415 04B0                          l1423 0530  
                        l1351 0300                          l1335 0298                          l1281 0772  
                        l1257 0712                          l1433 058C                          l1417 04DA  
                        l1409 0476                          l1353 030A                          l1329 0272  
                        l1267 0736                          l1443 05E8                          l1435 05A6  
                        l1419 0506                          l1371 036C                          l1355 0312  
                        l1347 02DA                          l1293 07AA                          l1269 073A  
                        l1445 05F2                          l1279 076E                          l1439 05D8  
                        l1447 05FA                          l1383 03B0                          l1375 0392  
                        l1377 039C                          l1379 03A4                   ?_LCDsetaddr 0001  
                        STR_1 01A4                          STR_2 0182                          STR_3 0193  
                        STR_4 019F                          STR_5 019F                          STR_6 0182  
                        STR_7 0193                          STR_8 019F                          STR_9 01B4  
                        u1110 05D0                          u1120 05D2                          u1140 0606  
                        u1150 0608                          u1307 071C                          u1317 0756  
                        _LATA 000F89                          _LATB 000F8A                          u1327 078E  
                        u1337 09B6                          u1257 080E                          u1347 09D2  
                        u1267 02A2                          u1357 099A                          u1277 0334  
                        u1287 03C6                          u1297 063A                  __CFG_PWRT$ON 000000  
                __CFG_STVR$ON 000000                          _main 07BE                          fsr0h 000FEA  
                        indf0 000FEF                          fsr0l 000FE9                          indf1 000FE7  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        prodh 000FF4                          prodl 000FF3                          start 0002  
               __CFG_FSCM$OFF 000000                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000010            __size_of_LCDwrchar 001C               __end_of_OptMenu 07BE  
                       ?_main 0001                         STR_10 0174                         STR_11 01B4  
                       STR_12 0174                         STR_13 0171                         _T0CON 000FD5  
            __end_of_LCDwrcmd 09DA                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TRISA 000F92                         _TRISB 000F93                   _DefaultMenu 01B8  
             DefaultMenu@last 006D                         tablat 000FF5                  ?_LCDwrstring 0006  
                       plusw1 000FE3                         plusw2 000FDB                         status 000FD8  
                 LCDdata@data 0002               __initialization 092E                  __end_of_main 0820  
         __size_of_LCDsetaddr 001E                        ??_main 007A                 __activetblptr 000002  
                   ??_LCDdata 0001             LCDwrstring@string 0006                        _ADCON1 000FC1  
           __end_of_LCDwrchar 09BE              DefaultMenu@F2827 00D1                     ??_OptMenu 0008  
                      ___wmul 095C                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0080  
     __end_of__initialization 0952                 ___rparam_used 000001                     ?_LCDwrcmd 0001  
               OptMenu@update 000A                __pcstackCOMRAM 0001                  __pidataBANK0 087E  
             __CFG_OSC$INTIO2 000000                  ??_LCDsetaddr 0005                   OptMenu@Menu 000C  
        __size_of_LCDwrstring 0054                    ??_LCDwrcmd 0005                       ?___wmul 0001  
          __end_of_LCDsetaddr 09A2                  ?_DefaultMenu 0001                       _LCDdata 0820  
                     __Hparam 0000                       __Lparam 0000                       _OptMenu 0614  
             __size_of___wmul 0028                  __psmallconst 0100                       __pcinit 092E  
                     __ramtop 0100                       __ptext0 07BE                       __ptext1 01B8  
                     __ptext2 095C                       __ptext3 0614                       __ptext4 08DA  
                     __ptext5 09A2                       __ptext6 09BE                       __ptext7 0984  
                     __ptext8 0820          end_of_initialization 0952                 __Lmediumconst 0000  
                   _LCDwrchar 09A2                       postdec1 000FE5                       postinc0 000FEE  
                   _PORTAbits 000F80               _DefaultMenu$572 0065               _DefaultMenu$574 0067  
             _DefaultMenu$567 0061               _DefaultMenu$569 0063                  DefaultMenu@x 0069  
                DefaultMenu@y 006B                    ?_LCDwrchar 0001             __size_of_LCDwrcmd 001C  
              __end_of___wmul 0984           start_initialization 092E  __end_of_Default_Menu_Bitmaps 0171  
        __size_of_DefaultMenu 045C           DefaultMenu@MenuItem 006F                      ??___wmul 0005  
                OptMenu@F2840 0080                   __pdataBANK0 0080                      ?_LCDdata 0001  
                 __pbssCOMRAM 007B                      LCDdata@x 0003                 ??_LCDwrstring 0008  
                 ??_LCDwrchar 0005                      ?_OptMenu 0001                   __smallconst 0100  
              ___wmul@product 0005                      _LATAbits 000F89                      _LATBbits 000F8A  
                    _LCDwrcmd 09BE           __end_of_LCDwrstring 092E          _Default_Menu_Bitmaps 0101  
                    _RCONbits 000FD0             ___wmul@multiplier 0001                _CharacterBlink 007B  
            __size_of_LCDdata 005E                     copy_data0 0946                      __Hrparam 0000  
                    __Lrparam 0000              __size_of_OptMenu 01AA               LCDwrchar@letter 0005  
               LCDsetaddr@add 0005                   _LCDwrstring 08DA                 __size_of_main 0062  
               ??_DefaultMenu 005D                    _INTCONbits 000FF2                    _LCDsetaddr 0984  
                  _OSCCONbits 000FD3                 LCDwrcmd@value 0005           __end_of_DefaultMenu 0614  
